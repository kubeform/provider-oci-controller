// Copyright (c) 2016, 2018, 2021, Oracle and/or its affiliates.  All rights reserved.
// This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
// Code generated. DO NOT EDIT.

package vulnerabilityscanning

import (
	"github.com/oracle/oci-go-sdk/v45/common"
	"net/http"
)

// ListHostCisBenchmarkScanResultsRequest wrapper for the ListHostCisBenchmarkScanResults operation
//
// See also
//
// Click https://docs.cloud.oracle.com/en-us/iaas/tools/go-sdk-examples/latest/vulnerabilityscanning/ListHostCisBenchmarkScanResults.go.html to see an example of how to use ListHostCisBenchmarkScanResultsRequest.
type ListHostCisBenchmarkScanResultsRequest struct {

	// The ID of the compartment in which to list resources.
	CompartmentId *string `mandatory:"true" contributesTo:"query" name:"compartmentId"`

	// The ID of a compute instance
	InstanceId *string `mandatory:"false" contributesTo:"query" name:"instanceId"`

	// Parameter to filter by highestProblemSeverity for scan results
	HighestProblemSeverity ListHostCisBenchmarkScanResultsHighestProblemSeverityEnum `mandatory:"false" contributesTo:"query" name:"highestProblemSeverity" omitEmpty:"true"`

	// Date and time on or after which scans were started, as described in RFC 3339 (https://tools.ietf.org/rfc/rfc3339)
	TimeStartedGreaterThanOrEqualTo *common.SDKTime `mandatory:"false" contributesTo:"query" name:"timeStartedGreaterThanOrEqualTo"`

	// Date and time on or before which scans were started, as described in RFC 3339 (https://tools.ietf.org/rfc/rfc3339)
	TimeStartedLessThanOrEqualTo *common.SDKTime `mandatory:"false" contributesTo:"query" name:"timeStartedLessThanOrEqualTo"`

	// The sort order to use, either 'ASC' or 'DESC'.
	SortOrder ListHostCisBenchmarkScanResultsSortOrderEnum `mandatory:"false" contributesTo:"query" name:"sortOrder" omitEmpty:"true"`

	// The field to sort by. Only one sort order may be provided. Default order is descending. If no value is specified timeFinished is default.
	SortBy ListHostCisBenchmarkScanResultsSortByEnum `mandatory:"false" contributesTo:"query" name:"sortBy" omitEmpty:"true"`

	// The maximum number of items to return.
	Limit *int `mandatory:"false" contributesTo:"query" name:"limit"`

	// The page token representing the page at which to start retrieving results. This is usually retrieved from a previous list call.
	Page *string `mandatory:"false" contributesTo:"query" name:"page"`

	// The client request ID for tracing.
	OpcRequestId *string `mandatory:"false" contributesTo:"header" name:"opc-request-id"`

	// A filter to return only resources that match the entire display name given.
	DisplayName *string `mandatory:"false" contributesTo:"query" name:"displayName"`

	// Metadata about the request. This information will not be transmitted to the service, but
	// represents information that the SDK will consume to drive retry behavior.
	RequestMetadata common.RequestMetadata
}

func (request ListHostCisBenchmarkScanResultsRequest) String() string {
	return common.PointerString(request)
}

// HTTPRequest implements the OCIRequest interface
func (request ListHostCisBenchmarkScanResultsRequest) HTTPRequest(method, path string, binaryRequestBody *common.OCIReadSeekCloser, extraHeaders map[string]string) (http.Request, error) {

	return common.MakeDefaultHTTPRequestWithTaggedStructAndExtraHeaders(method, path, request, extraHeaders)
}

// BinaryRequestBody implements the OCIRequest interface
func (request ListHostCisBenchmarkScanResultsRequest) BinaryRequestBody() (*common.OCIReadSeekCloser, bool) {

	return nil, false

}

// RetryPolicy implements the OCIRetryableRequest interface. This retrieves the specified retry policy.
func (request ListHostCisBenchmarkScanResultsRequest) RetryPolicy() *common.RetryPolicy {
	return request.RequestMetadata.RetryPolicy
}

// ListHostCisBenchmarkScanResultsResponse wrapper for the ListHostCisBenchmarkScanResults operation
type ListHostCisBenchmarkScanResultsResponse struct {

	// The underlying http response
	RawResponse *http.Response

	// A list of HostCisBenchmarkScanResultSummaryCollection instances
	HostCisBenchmarkScanResultSummaryCollection `presentIn:"body"`

	// Unique Oracle-assigned identifier for the request. If you need to contact
	// Oracle about a particular request, please provide the request ID.
	OpcRequestId *string `presentIn:"header" name:"opc-request-id"`

	// For pagination of a list of items. When paging through a list, if this header appears in the response,
	// then a partial list might have been returned. Include this value as the `page` parameter for the
	// subsequent GET request to get the next batch of items.
	OpcNextPage *string `presentIn:"header" name:"opc-next-page"`
}

func (response ListHostCisBenchmarkScanResultsResponse) String() string {
	return common.PointerString(response)
}

// HTTPResponse implements the OCIResponse interface
func (response ListHostCisBenchmarkScanResultsResponse) HTTPResponse() *http.Response {
	return response.RawResponse
}

// ListHostCisBenchmarkScanResultsHighestProblemSeverityEnum Enum with underlying type: string
type ListHostCisBenchmarkScanResultsHighestProblemSeverityEnum string

// Set of constants representing the allowable values for ListHostCisBenchmarkScanResultsHighestProblemSeverityEnum
const (
	ListHostCisBenchmarkScanResultsHighestProblemSeverityNone     ListHostCisBenchmarkScanResultsHighestProblemSeverityEnum = "NONE"
	ListHostCisBenchmarkScanResultsHighestProblemSeverityLow      ListHostCisBenchmarkScanResultsHighestProblemSeverityEnum = "LOW"
	ListHostCisBenchmarkScanResultsHighestProblemSeverityMedium   ListHostCisBenchmarkScanResultsHighestProblemSeverityEnum = "MEDIUM"
	ListHostCisBenchmarkScanResultsHighestProblemSeverityHigh     ListHostCisBenchmarkScanResultsHighestProblemSeverityEnum = "HIGH"
	ListHostCisBenchmarkScanResultsHighestProblemSeverityCritical ListHostCisBenchmarkScanResultsHighestProblemSeverityEnum = "CRITICAL"
)

var mappingListHostCisBenchmarkScanResultsHighestProblemSeverity = map[string]ListHostCisBenchmarkScanResultsHighestProblemSeverityEnum{
	"NONE":     ListHostCisBenchmarkScanResultsHighestProblemSeverityNone,
	"LOW":      ListHostCisBenchmarkScanResultsHighestProblemSeverityLow,
	"MEDIUM":   ListHostCisBenchmarkScanResultsHighestProblemSeverityMedium,
	"HIGH":     ListHostCisBenchmarkScanResultsHighestProblemSeverityHigh,
	"CRITICAL": ListHostCisBenchmarkScanResultsHighestProblemSeverityCritical,
}

// GetListHostCisBenchmarkScanResultsHighestProblemSeverityEnumValues Enumerates the set of values for ListHostCisBenchmarkScanResultsHighestProblemSeverityEnum
func GetListHostCisBenchmarkScanResultsHighestProblemSeverityEnumValues() []ListHostCisBenchmarkScanResultsHighestProblemSeverityEnum {
	values := make([]ListHostCisBenchmarkScanResultsHighestProblemSeverityEnum, 0)
	for _, v := range mappingListHostCisBenchmarkScanResultsHighestProblemSeverity {
		values = append(values, v)
	}
	return values
}

// ListHostCisBenchmarkScanResultsSortOrderEnum Enum with underlying type: string
type ListHostCisBenchmarkScanResultsSortOrderEnum string

// Set of constants representing the allowable values for ListHostCisBenchmarkScanResultsSortOrderEnum
const (
	ListHostCisBenchmarkScanResultsSortOrderAsc  ListHostCisBenchmarkScanResultsSortOrderEnum = "ASC"
	ListHostCisBenchmarkScanResultsSortOrderDesc ListHostCisBenchmarkScanResultsSortOrderEnum = "DESC"
)

var mappingListHostCisBenchmarkScanResultsSortOrder = map[string]ListHostCisBenchmarkScanResultsSortOrderEnum{
	"ASC":  ListHostCisBenchmarkScanResultsSortOrderAsc,
	"DESC": ListHostCisBenchmarkScanResultsSortOrderDesc,
}

// GetListHostCisBenchmarkScanResultsSortOrderEnumValues Enumerates the set of values for ListHostCisBenchmarkScanResultsSortOrderEnum
func GetListHostCisBenchmarkScanResultsSortOrderEnumValues() []ListHostCisBenchmarkScanResultsSortOrderEnum {
	values := make([]ListHostCisBenchmarkScanResultsSortOrderEnum, 0)
	for _, v := range mappingListHostCisBenchmarkScanResultsSortOrder {
		values = append(values, v)
	}
	return values
}

// ListHostCisBenchmarkScanResultsSortByEnum Enum with underlying type: string
type ListHostCisBenchmarkScanResultsSortByEnum string

// Set of constants representing the allowable values for ListHostCisBenchmarkScanResultsSortByEnum
const (
	ListHostCisBenchmarkScanResultsSortByTimestarted                 ListHostCisBenchmarkScanResultsSortByEnum = "timeStarted"
	ListHostCisBenchmarkScanResultsSortByTimefinished                ListHostCisBenchmarkScanResultsSortByEnum = "timeFinished"
	ListHostCisBenchmarkScanResultsSortByCisbenchmarkscanissuescount ListHostCisBenchmarkScanResultsSortByEnum = "cisBenchmarkScanIssuesCount"
)

var mappingListHostCisBenchmarkScanResultsSortBy = map[string]ListHostCisBenchmarkScanResultsSortByEnum{
	"timeStarted":                 ListHostCisBenchmarkScanResultsSortByTimestarted,
	"timeFinished":                ListHostCisBenchmarkScanResultsSortByTimefinished,
	"cisBenchmarkScanIssuesCount": ListHostCisBenchmarkScanResultsSortByCisbenchmarkscanissuescount,
}

// GetListHostCisBenchmarkScanResultsSortByEnumValues Enumerates the set of values for ListHostCisBenchmarkScanResultsSortByEnum
func GetListHostCisBenchmarkScanResultsSortByEnumValues() []ListHostCisBenchmarkScanResultsSortByEnum {
	values := make([]ListHostCisBenchmarkScanResultsSortByEnum, 0)
	for _, v := range mappingListHostCisBenchmarkScanResultsSortBy {
		values = append(values, v)
	}
	return values
}
