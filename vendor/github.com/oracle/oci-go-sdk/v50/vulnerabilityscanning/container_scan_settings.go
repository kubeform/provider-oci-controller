// Copyright (c) 2016, 2018, 2021, Oracle and/or its affiliates.  All rights reserved.
// This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
// Code generated. DO NOT EDIT.

// Scanning API
//
// Use the Vulnerability Scanning Service (VSS) APIs to manage scan recipes, targets, and reports.
//

package vulnerabilityscanning

import (
	"github.com/oracle/oci-go-sdk/v50/common"
)

// ContainerScanSettings A collection of container scan settings
type ContainerScanSettings struct {

	// The scan level
	ScanLevel ContainerScanSettingsScanLevelEnum `mandatory:"true" json:"scanLevel"`
}

func (m ContainerScanSettings) String() string {
	return common.PointerString(m)
}

// ContainerScanSettingsScanLevelEnum Enum with underlying type: string
type ContainerScanSettingsScanLevelEnum string

// Set of constants representing the allowable values for ContainerScanSettingsScanLevelEnum
const (
	ContainerScanSettingsScanLevelNone     ContainerScanSettingsScanLevelEnum = "NONE"
	ContainerScanSettingsScanLevelStandard ContainerScanSettingsScanLevelEnum = "STANDARD"
)

var mappingContainerScanSettingsScanLevel = map[string]ContainerScanSettingsScanLevelEnum{
	"NONE":     ContainerScanSettingsScanLevelNone,
	"STANDARD": ContainerScanSettingsScanLevelStandard,
}

// GetContainerScanSettingsScanLevelEnumValues Enumerates the set of values for ContainerScanSettingsScanLevelEnum
func GetContainerScanSettingsScanLevelEnumValues() []ContainerScanSettingsScanLevelEnum {
	values := make([]ContainerScanSettingsScanLevelEnum, 0)
	for _, v := range mappingContainerScanSettingsScanLevel {
		values = append(values, v)
	}
	return values
}
