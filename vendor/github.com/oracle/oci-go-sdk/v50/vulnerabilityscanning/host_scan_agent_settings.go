// Copyright (c) 2016, 2018, 2021, Oracle and/or its affiliates.  All rights reserved.
// This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
// Code generated. DO NOT EDIT.

// Scanning API
//
// Use the Vulnerability Scanning Service (VSS) APIs to manage scan recipes, targets, and reports.
//

package vulnerabilityscanning

import (
	"encoding/json"
	"github.com/oracle/oci-go-sdk/v50/common"
)

// HostScanAgentSettings Agent scan settings for a host scan
type HostScanAgentSettings struct {

	// The scan level
	ScanLevel HostAgentScanLevelEnum `mandatory:"true" json:"scanLevel"`

	AgentConfiguration HostScanAgentConfiguration `mandatory:"false" json:"agentConfiguration"`
}

func (m HostScanAgentSettings) String() string {
	return common.PointerString(m)
}

// UnmarshalJSON unmarshals from json
func (m *HostScanAgentSettings) UnmarshalJSON(data []byte) (e error) {
	model := struct {
		AgentConfiguration hostscanagentconfiguration `json:"agentConfiguration"`
		ScanLevel          HostAgentScanLevelEnum     `json:"scanLevel"`
	}{}

	e = json.Unmarshal(data, &model)
	if e != nil {
		return
	}
	var nn interface{}
	nn, e = model.AgentConfiguration.UnmarshalPolymorphicJSON(model.AgentConfiguration.JsonData)
	if e != nil {
		return
	}
	if nn != nil {
		m.AgentConfiguration = nn.(HostScanAgentConfiguration)
	} else {
		m.AgentConfiguration = nil
	}

	m.ScanLevel = model.ScanLevel

	return
}
