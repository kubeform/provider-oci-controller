// Copyright (c) 2016, 2018, 2021, Oracle and/or its affiliates.  All rights reserved.
// This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
// Code generated. DO NOT EDIT.

// Scanning API
//
// Use the Vulnerability Scanning Service (VSS) APIs to manage scan recipes, targets, and reports.
//

package vulnerabilityscanning

import (
	"github.com/oracle/oci-go-sdk/v50/common"
)

// HostVulnerability A vulnerability found in one or more host scans in a compartment
type HostVulnerability struct {

	// ID of the vulnerability
	Id *string `mandatory:"true" json:"id"`

	// Compartment ID of the vulnerability. Vulnerabilities with identical CVEs can exist in different compartments, based on scan target location
	CompartmentId *string `mandatory:"true" json:"compartmentId"`

	// Severity of the vulnerability
	Severity ScanResultProblemSeverityEnum `mandatory:"true" json:"severity"`

	// Vulnerability name
	Name *string `mandatory:"true" json:"name"`

	// Date of scan result that most recently reported the vulnerability
	TimeLastDetected *common.SDKTime `mandatory:"true" json:"timeLastDetected"`

	// Date of scan result that first reported the vulnerability
	TimeFirstDetected *common.SDKTime `mandatory:"true" json:"timeFirstDetected"`

	// Number of scanned hosts in this compartment whose scan results currently report this vulnerability
	HostCount *int `mandatory:"true" json:"hostCount"`

	// Specifies the type of Vulnerability
	VulnerabilityType VulnerabilityTypeEnum `mandatory:"true" json:"vulnerabilityType"`

	// Mechanism used for scan authentication
	Authentication *string `mandatory:"false" json:"authentication"`

	// Reference to MITRE CVE ID
	CveReference *string `mandatory:"false" json:"cveReference"`

	CveDetails *CveDetails `mandatory:"false" json:"cveDetails"`

	// State of the vulnerability
	State ScanResultVulnerabilityStateEnum `mandatory:"false" json:"state,omitempty"`

	// The current state of the resource.
	LifecycleState LifecycleStateEnum `mandatory:"false" json:"lifecycleState,omitempty"`
}

func (m HostVulnerability) String() string {
	return common.PointerString(m)
}
