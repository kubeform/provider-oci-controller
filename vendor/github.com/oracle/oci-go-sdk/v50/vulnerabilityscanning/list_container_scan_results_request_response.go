// Copyright (c) 2016, 2018, 2021, Oracle and/or its affiliates.  All rights reserved.
// This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
// Code generated. DO NOT EDIT.

package vulnerabilityscanning

import (
	"github.com/oracle/oci-go-sdk/v50/common"
	"net/http"
)

// ListContainerScanResultsRequest wrapper for the ListContainerScanResults operation
//
// See also
//
// Click https://docs.cloud.oracle.com/en-us/iaas/tools/go-sdk-examples/latest/vulnerabilityscanning/ListContainerScanResults.go.html to see an example of how to use ListContainerScanResultsRequest.
type ListContainerScanResultsRequest struct {

	// The ID of the compartment in which to list resources.
	CompartmentId *string `mandatory:"true" contributesTo:"query" name:"compartmentId"`

	// Repository name
	Repository *string `mandatory:"false" contributesTo:"query" name:"repository"`

	// Image name
	Image *string `mandatory:"false" contributesTo:"query" name:"image"`

	// When listing with one or more filters, whether to include subcompartments for the compartmentId being listed for. Does nothing if no filters are present in the query.
	AreSubcompartmentsIncluded *bool `mandatory:"false" contributesTo:"query" name:"areSubcompartmentsIncluded"`

	// Parameter to filter by highestProblemSeverity for scan results
	HighestProblemSeverity ListContainerScanResultsHighestProblemSeverityEnum `mandatory:"false" contributesTo:"query" name:"highestProblemSeverity" omitEmpty:"true"`

	// Date and time on or after which scans were started, as described in RFC 3339 (https://tools.ietf.org/rfc/rfc3339)
	TimeStartedGreaterThanOrEqualTo *common.SDKTime `mandatory:"false" contributesTo:"query" name:"timeStartedGreaterThanOrEqualTo"`

	// Date and time on or before which scans were started, as described in RFC 3339 (https://tools.ietf.org/rfc/rfc3339)
	TimeStartedLessThanOrEqualTo *common.SDKTime `mandatory:"false" contributesTo:"query" name:"timeStartedLessThanOrEqualTo"`

	// The sort order to use, either 'ASC' or 'DESC'.
	SortOrder ListContainerScanResultsSortOrderEnum `mandatory:"false" contributesTo:"query" name:"sortOrder" omitEmpty:"true"`

	// The field to sort by. Only one sort order may be provided. Default order is descending. If no value is specified timeFinished is default.
	SortBy ListContainerScanResultsSortByEnum `mandatory:"false" contributesTo:"query" name:"sortBy" omitEmpty:"true"`

	// The maximum number of items to return.
	Limit *int `mandatory:"false" contributesTo:"query" name:"limit"`

	// The page token representing the page at which to start retrieving results. This is usually retrieved from a previous list call.
	Page *string `mandatory:"false" contributesTo:"query" name:"page"`

	// The client request ID for tracing.
	OpcRequestId *string `mandatory:"false" contributesTo:"header" name:"opc-request-id"`

	// Metadata about the request. This information will not be transmitted to the service, but
	// represents information that the SDK will consume to drive retry behavior.
	RequestMetadata common.RequestMetadata
}

func (request ListContainerScanResultsRequest) String() string {
	return common.PointerString(request)
}

// HTTPRequest implements the OCIRequest interface
func (request ListContainerScanResultsRequest) HTTPRequest(method, path string, binaryRequestBody *common.OCIReadSeekCloser, extraHeaders map[string]string) (http.Request, error) {

	return common.MakeDefaultHTTPRequestWithTaggedStructAndExtraHeaders(method, path, request, extraHeaders)
}

// BinaryRequestBody implements the OCIRequest interface
func (request ListContainerScanResultsRequest) BinaryRequestBody() (*common.OCIReadSeekCloser, bool) {

	return nil, false

}

// RetryPolicy implements the OCIRetryableRequest interface. This retrieves the specified retry policy.
func (request ListContainerScanResultsRequest) RetryPolicy() *common.RetryPolicy {
	return request.RequestMetadata.RetryPolicy
}

// ListContainerScanResultsResponse wrapper for the ListContainerScanResults operation
type ListContainerScanResultsResponse struct {

	// The underlying http response
	RawResponse *http.Response

	// A list of ContainerScanResultSummaryCollection instances
	ContainerScanResultSummaryCollection `presentIn:"body"`

	// Unique Oracle-assigned identifier for the request. If you need to contact
	// Oracle about a particular request, please provide the request ID.
	OpcRequestId *string `presentIn:"header" name:"opc-request-id"`

	// For pagination of a list of items. When paging through a list, if this header appears in the response,
	// then a partial list might have been returned. Include this value as the `page` parameter for the
	// subsequent GET request to get the next batch of items.
	OpcNextPage *string `presentIn:"header" name:"opc-next-page"`
}

func (response ListContainerScanResultsResponse) String() string {
	return common.PointerString(response)
}

// HTTPResponse implements the OCIResponse interface
func (response ListContainerScanResultsResponse) HTTPResponse() *http.Response {
	return response.RawResponse
}

// ListContainerScanResultsHighestProblemSeverityEnum Enum with underlying type: string
type ListContainerScanResultsHighestProblemSeverityEnum string

// Set of constants representing the allowable values for ListContainerScanResultsHighestProblemSeverityEnum
const (
	ListContainerScanResultsHighestProblemSeverityNone     ListContainerScanResultsHighestProblemSeverityEnum = "NONE"
	ListContainerScanResultsHighestProblemSeverityLow      ListContainerScanResultsHighestProblemSeverityEnum = "LOW"
	ListContainerScanResultsHighestProblemSeverityMedium   ListContainerScanResultsHighestProblemSeverityEnum = "MEDIUM"
	ListContainerScanResultsHighestProblemSeverityHigh     ListContainerScanResultsHighestProblemSeverityEnum = "HIGH"
	ListContainerScanResultsHighestProblemSeverityCritical ListContainerScanResultsHighestProblemSeverityEnum = "CRITICAL"
)

var mappingListContainerScanResultsHighestProblemSeverity = map[string]ListContainerScanResultsHighestProblemSeverityEnum{
	"NONE":     ListContainerScanResultsHighestProblemSeverityNone,
	"LOW":      ListContainerScanResultsHighestProblemSeverityLow,
	"MEDIUM":   ListContainerScanResultsHighestProblemSeverityMedium,
	"HIGH":     ListContainerScanResultsHighestProblemSeverityHigh,
	"CRITICAL": ListContainerScanResultsHighestProblemSeverityCritical,
}

// GetListContainerScanResultsHighestProblemSeverityEnumValues Enumerates the set of values for ListContainerScanResultsHighestProblemSeverityEnum
func GetListContainerScanResultsHighestProblemSeverityEnumValues() []ListContainerScanResultsHighestProblemSeverityEnum {
	values := make([]ListContainerScanResultsHighestProblemSeverityEnum, 0)
	for _, v := range mappingListContainerScanResultsHighestProblemSeverity {
		values = append(values, v)
	}
	return values
}

// ListContainerScanResultsSortOrderEnum Enum with underlying type: string
type ListContainerScanResultsSortOrderEnum string

// Set of constants representing the allowable values for ListContainerScanResultsSortOrderEnum
const (
	ListContainerScanResultsSortOrderAsc  ListContainerScanResultsSortOrderEnum = "ASC"
	ListContainerScanResultsSortOrderDesc ListContainerScanResultsSortOrderEnum = "DESC"
)

var mappingListContainerScanResultsSortOrder = map[string]ListContainerScanResultsSortOrderEnum{
	"ASC":  ListContainerScanResultsSortOrderAsc,
	"DESC": ListContainerScanResultsSortOrderDesc,
}

// GetListContainerScanResultsSortOrderEnumValues Enumerates the set of values for ListContainerScanResultsSortOrderEnum
func GetListContainerScanResultsSortOrderEnumValues() []ListContainerScanResultsSortOrderEnum {
	values := make([]ListContainerScanResultsSortOrderEnum, 0)
	for _, v := range mappingListContainerScanResultsSortOrder {
		values = append(values, v)
	}
	return values
}

// ListContainerScanResultsSortByEnum Enum with underlying type: string
type ListContainerScanResultsSortByEnum string

// Set of constants representing the allowable values for ListContainerScanResultsSortByEnum
const (
	ListContainerScanResultsSortByTimestarted            ListContainerScanResultsSortByEnum = "timeStarted"
	ListContainerScanResultsSortByProblemcount           ListContainerScanResultsSortByEnum = "problemCount"
	ListContainerScanResultsSortByHighestproblemseverity ListContainerScanResultsSortByEnum = "highestProblemSeverity"
)

var mappingListContainerScanResultsSortBy = map[string]ListContainerScanResultsSortByEnum{
	"timeStarted":            ListContainerScanResultsSortByTimestarted,
	"problemCount":           ListContainerScanResultsSortByProblemcount,
	"highestProblemSeverity": ListContainerScanResultsSortByHighestproblemseverity,
}

// GetListContainerScanResultsSortByEnumValues Enumerates the set of values for ListContainerScanResultsSortByEnum
func GetListContainerScanResultsSortByEnumValues() []ListContainerScanResultsSortByEnum {
	values := make([]ListContainerScanResultsSortByEnum, 0)
	for _, v := range mappingListContainerScanResultsSortBy {
		values = append(values, v)
	}
	return values
}
