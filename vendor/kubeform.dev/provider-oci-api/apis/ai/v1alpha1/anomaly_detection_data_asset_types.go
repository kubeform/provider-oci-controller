/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type AnomalyDetectionDataAsset struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AnomalyDetectionDataAssetSpec   `json:"spec,omitempty"`
	Status            AnomalyDetectionDataAssetStatus `json:"status,omitempty"`
}

type AnomalyDetectionDataAssetSpecDataSourceDetailsVersionSpecificDetails struct {
	// +optional
	Bucket *string `json:"bucket,omitempty" tf:"bucket"`
	// +optional
	DatabaseName  *string `json:"databaseName,omitempty" tf:"database_name"`
	InfluxVersion *string `json:"influxVersion" tf:"influx_version"`
	// +optional
	OrganizationName *string `json:"organizationName,omitempty" tf:"organization_name"`
	// +optional
	RetentionPolicyName *string `json:"retentionPolicyName,omitempty" tf:"retention_policy_name"`
}

type AnomalyDetectionDataAssetSpecDataSourceDetails struct {
	// +optional
	AtpPasswordSecretID *string `json:"-" sensitive:"true" tf:"atp_password_secret_id"`
	// +optional
	AtpUserName *string `json:"atpUserName,omitempty" tf:"atp_user_name"`
	// +optional
	Bucket *string `json:"bucket,omitempty" tf:"bucket"`
	// +optional
	CwalletFileSecretID *string `json:"cwalletFileSecretID,omitempty" tf:"cwallet_file_secret_id"`
	DataSourceType      *string `json:"dataSourceType" tf:"data_source_type"`
	// +optional
	DatabaseName *string `json:"databaseName,omitempty" tf:"database_name"`
	// +optional
	EwalletFileSecretID *string `json:"ewalletFileSecretID,omitempty" tf:"ewallet_file_secret_id"`
	// +optional
	KeyStoreFileSecretID *string `json:"keyStoreFileSecretID,omitempty" tf:"key_store_file_secret_id"`
	// +optional
	MeasurementName *string `json:"measurementName,omitempty" tf:"measurement_name"`
	// +optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace"`
	// +optional
	Object *string `json:"object,omitempty" tf:"object"`
	// +optional
	OjdbcFileSecretID *string `json:"ojdbcFileSecretID,omitempty" tf:"ojdbc_file_secret_id"`
	// +optional
	PasswordSecretID *string `json:"-" sensitive:"true" tf:"password_secret_id"`
	// +optional
	TableName *string `json:"tableName,omitempty" tf:"table_name"`
	// +optional
	TnsnamesFileSecretID *string `json:"tnsnamesFileSecretID,omitempty" tf:"tnsnames_file_secret_id"`
	// +optional
	TruststoreFileSecretID *string `json:"truststoreFileSecretID,omitempty" tf:"truststore_file_secret_id"`
	// +optional
	Url *string `json:"url,omitempty" tf:"url"`
	// +optional
	UserName *string `json:"userName,omitempty" tf:"user_name"`
	// +optional
	VersionSpecificDetails *AnomalyDetectionDataAssetSpecDataSourceDetailsVersionSpecificDetails `json:"versionSpecificDetails,omitempty" tf:"version_specific_details"`
	// +optional
	WalletPasswordSecretID *string `json:"-" sensitive:"true" tf:"wallet_password_secret_id"`
}

type AnomalyDetectionDataAssetSpec struct {
	State *AnomalyDetectionDataAssetSpecResource `json:"state,omitempty" tf:"-"`

	Resource AnomalyDetectionDataAssetSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type AnomalyDetectionDataAssetSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	CompartmentID     *string                                         `json:"compartmentID" tf:"compartment_id"`
	DataSourceDetails *AnomalyDetectionDataAssetSpecDataSourceDetails `json:"dataSourceDetails" tf:"data_source_details"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	PrivateEndpointID *string `json:"privateEndpointID,omitempty" tf:"private_endpoint_id"`
	ProjectID         *string `json:"projectID" tf:"project_id"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	SystemTags map[string]string `json:"systemTags,omitempty" tf:"system_tags"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	TimeUpdated *string `json:"timeUpdated,omitempty" tf:"time_updated"`
}

type AnomalyDetectionDataAssetStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// AnomalyDetectionDataAssetList is a list of AnomalyDetectionDataAssets
type AnomalyDetectionDataAssetList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of AnomalyDetectionDataAsset CRD objects
	Items []AnomalyDetectionDataAsset `json:"items,omitempty"`
}
