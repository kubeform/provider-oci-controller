/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type AnomalyDetectionModel struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AnomalyDetectionModelSpec   `json:"spec,omitempty"`
	Status            AnomalyDetectionModelStatus `json:"status,omitempty"`
}

type AnomalyDetectionModelSpecModelTrainingDetails struct {
	DataAssetIDS []string `json:"dataAssetIDS" tf:"data_asset_ids"`
	// +optional
	TargetFap *float64 `json:"targetFap,omitempty" tf:"target_fap"`
	// +optional
	TrainingFraction *float64 `json:"trainingFraction,omitempty" tf:"training_fraction"`
}

type AnomalyDetectionModelSpecModelTrainingResultsRowReductionDetails struct {
	// +optional
	IsReductionEnabled *bool `json:"isReductionEnabled,omitempty" tf:"is_reduction_enabled"`
	// +optional
	ReductionMethod *string `json:"reductionMethod,omitempty" tf:"reduction_method"`
	// +optional
	ReductionPercentage *float64 `json:"reductionPercentage,omitempty" tf:"reduction_percentage"`
}

type AnomalyDetectionModelSpecModelTrainingResultsSignalDetails struct {
	// +optional
	Details *string `json:"details,omitempty" tf:"details"`
	// +optional
	Fap *float64 `json:"fap,omitempty" tf:"fap"`
	// +optional
	IsQuantized *bool `json:"isQuantized,omitempty" tf:"is_quantized"`
	// +optional
	Max *float64 `json:"max,omitempty" tf:"max"`
	// +optional
	Min *float64 `json:"min,omitempty" tf:"min"`
	// +optional
	MviRatio *float64 `json:"mviRatio,omitempty" tf:"mvi_ratio"`
	// +optional
	SignalName *string `json:"signalName,omitempty" tf:"signal_name"`
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
	// +optional
	Std *float64 `json:"std,omitempty" tf:"std"`
}

type AnomalyDetectionModelSpecModelTrainingResults struct {
	// +optional
	Fap *float64 `json:"fap,omitempty" tf:"fap"`
	// +optional
	IsTrainingGoalAchieved *bool `json:"isTrainingGoalAchieved,omitempty" tf:"is_training_goal_achieved"`
	// +optional
	MultivariateFap *float64 `json:"multivariateFap,omitempty" tf:"multivariate_fap"`
	// +optional
	RowReductionDetails *AnomalyDetectionModelSpecModelTrainingResultsRowReductionDetails `json:"rowReductionDetails,omitempty" tf:"row_reduction_details"`
	// +optional
	SignalDetails []AnomalyDetectionModelSpecModelTrainingResultsSignalDetails `json:"signalDetails,omitempty" tf:"signal_details"`
	// +optional
	Warning *string `json:"warning,omitempty" tf:"warning"`
}

type AnomalyDetectionModelSpec struct {
	State *AnomalyDetectionModelSpecResource `json:"state,omitempty" tf:"-"`

	Resource AnomalyDetectionModelSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type AnomalyDetectionModelSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	CompartmentID *string `json:"compartmentID" tf:"compartment_id"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	LifecycleDetails     *string                                        `json:"lifecycleDetails,omitempty" tf:"lifecycle_details"`
	ModelTrainingDetails *AnomalyDetectionModelSpecModelTrainingDetails `json:"modelTrainingDetails" tf:"model_training_details"`
	// +optional
	ModelTrainingResults *AnomalyDetectionModelSpecModelTrainingResults `json:"modelTrainingResults,omitempty" tf:"model_training_results"`
	ProjectID            *string                                        `json:"projectID" tf:"project_id"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	SystemTags map[string]string `json:"systemTags,omitempty" tf:"system_tags"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	TimeUpdated *string `json:"timeUpdated,omitempty" tf:"time_updated"`
}

type AnomalyDetectionModelStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// AnomalyDetectionModelList is a list of AnomalyDetectionModels
type AnomalyDetectionModelList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of AnomalyDetectionModel CRD objects
	Items []AnomalyDetectionModel `json:"items,omitempty"`
}
