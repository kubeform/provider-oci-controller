/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type SyntheticsScript struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SyntheticsScriptSpec   `json:"spec,omitempty"`
	Status            SyntheticsScriptStatus `json:"status,omitempty"`
}

type SyntheticsScriptSpecMonitorStatusCountMap struct {
	// +optional
	Disabled *int64 `json:"disabled,omitempty" tf:"disabled"`
	// +optional
	Enabled *int64 `json:"enabled,omitempty" tf:"enabled"`
	// +optional
	Invalid *int64 `json:"invalid,omitempty" tf:"invalid"`
	// +optional
	Total *int64 `json:"total,omitempty" tf:"total"`
}

type SyntheticsScriptSpecParametersScriptParameter struct {
	// +optional
	IsSecret *bool `json:"isSecret,omitempty" tf:"is_secret"`
	// +optional
	ParamName *string `json:"paramName,omitempty" tf:"param_name"`
	// +optional
	ParamValue *string `json:"paramValue,omitempty" tf:"param_value"`
}

type SyntheticsScriptSpecParameters struct {
	// +optional
	IsOverwritten *bool `json:"isOverwritten,omitempty" tf:"is_overwritten"`
	// +optional
	IsSecret  *bool   `json:"isSecret,omitempty" tf:"is_secret"`
	ParamName *string `json:"paramName" tf:"param_name"`
	// +optional
	ParamValue *string `json:"paramValue,omitempty" tf:"param_value"`
	// +optional
	ScriptParameter *SyntheticsScriptSpecParametersScriptParameter `json:"scriptParameter,omitempty" tf:"script_parameter"`
}

type SyntheticsScriptSpec struct {
	State *SyntheticsScriptSpecResource `json:"state,omitempty" tf:"-"`

	Resource SyntheticsScriptSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type SyntheticsScriptSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	ApmDomainID *string `json:"apmDomainID" tf:"apm_domain_id"`
	Content     *string `json:"content" tf:"content"`
	// +optional
	ContentFileName *string `json:"contentFileName,omitempty" tf:"content_file_name"`
	// +optional
	ContentSizeInBytes *int64  `json:"contentSizeInBytes,omitempty" tf:"content_size_in_bytes"`
	ContentType        *string `json:"contentType" tf:"content_type"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	DisplayName *string           `json:"displayName" tf:"display_name"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	MonitorStatusCountMap *SyntheticsScriptSpecMonitorStatusCountMap `json:"monitorStatusCountMap,omitempty" tf:"monitor_status_count_map"`
	// +optional
	Parameters []SyntheticsScriptSpecParameters `json:"parameters,omitempty" tf:"parameters"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	TimeUpdated *string `json:"timeUpdated,omitempty" tf:"time_updated"`
	// +optional
	TimeUploaded *string `json:"timeUploaded,omitempty" tf:"time_uploaded"`
}

type SyntheticsScriptStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// SyntheticsScriptList is a list of SyntheticsScripts
type SyntheticsScriptList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of SyntheticsScript CRD objects
	Items []SyntheticsScript `json:"items,omitempty"`
}
