/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type BdsInstance struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              BdsInstanceSpec   `json:"spec,omitempty"`
	Status            BdsInstanceStatus `json:"status,omitempty"`
}

type BdsInstanceSpecCloudSQLDetailsKerberosDetails struct {
	// +optional
	KeytabFile *string `json:"keytabFile,omitempty" tf:"keytab_file"`
	// +optional
	PrincipalName *string `json:"principalName,omitempty" tf:"principal_name"`
}

type BdsInstanceSpecCloudSQLDetails struct {
	BlockVolumeSizeInGbs *string `json:"blockVolumeSizeInGbs" tf:"block_volume_size_in_gbs"`
	// +optional
	IpAddress *string `json:"ipAddress,omitempty" tf:"ip_address"`
	// +optional
	IsKerberosMappedToDatabaseUsers *bool `json:"isKerberosMappedToDatabaseUsers,omitempty" tf:"is_kerberos_mapped_to_database_users"`
	// +optional
	KerberosDetails []BdsInstanceSpecCloudSQLDetailsKerberosDetails `json:"kerberosDetails,omitempty" tf:"kerberos_details"`
	Shape           *string                                         `json:"shape" tf:"shape"`
}

type BdsInstanceSpecClusterDetails struct {
	// +optional
	AmbariURL *string `json:"ambariURL,omitempty" tf:"ambari_url"`
	// +optional
	BdCellVersion *string `json:"bdCellVersion,omitempty" tf:"bd_cell_version"`
	// +optional
	BdaVersion *string `json:"bdaVersion,omitempty" tf:"bda_version"`
	// +optional
	BdmVersion *string `json:"bdmVersion,omitempty" tf:"bdm_version"`
	// +optional
	BdsVersion *string `json:"bdsVersion,omitempty" tf:"bds_version"`
	// +optional
	BigDataManagerURL *string `json:"bigDataManagerURL,omitempty" tf:"big_data_manager_url"`
	// +optional
	ClouderaManagerURL *string `json:"clouderaManagerURL,omitempty" tf:"cloudera_manager_url"`
	// +optional
	CsqlCellVersion *string `json:"csqlCellVersion,omitempty" tf:"csql_cell_version"`
	// +optional
	DbVersion *string `json:"dbVersion,omitempty" tf:"db_version"`
	// +optional
	HueServerURL *string `json:"hueServerURL,omitempty" tf:"hue_server_url"`
	// +optional
	OsVersion *string `json:"osVersion,omitempty" tf:"os_version"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	TimeRefreshed *string `json:"timeRefreshed,omitempty" tf:"time_refreshed"`
}

type BdsInstanceSpecMasterNode struct {
	BlockVolumeSizeInGbs *string `json:"blockVolumeSizeInGbs" tf:"block_volume_size_in_gbs"`
	NumberOfNodes        *int64  `json:"numberOfNodes" tf:"number_of_nodes"`
	Shape                *string `json:"shape" tf:"shape"`
	SubnetID             *string `json:"subnetID" tf:"subnet_id"`
}

type BdsInstanceSpecNetworkConfig struct {
	// +optional
	CidrBlock *string `json:"cidrBlock,omitempty" tf:"cidr_block"`
	// +optional
	IsNATGatewayRequired *bool `json:"isNATGatewayRequired,omitempty" tf:"is_nat_gateway_required"`
}

type BdsInstanceSpecNodesAttachedBlockVolumes struct {
	// +optional
	VolumeAttachmentID *string `json:"volumeAttachmentID,omitempty" tf:"volume_attachment_id"`
	// +optional
	VolumeSizeInGbs *string `json:"volumeSizeInGbs,omitempty" tf:"volume_size_in_gbs"`
}

type BdsInstanceSpecNodes struct {
	// +optional
	AttachedBlockVolumes []BdsInstanceSpecNodesAttachedBlockVolumes `json:"attachedBlockVolumes,omitempty" tf:"attached_block_volumes"`
	// +optional
	AvailabilityDomain *string `json:"availabilityDomain,omitempty" tf:"availability_domain"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	FaultDomain *string `json:"faultDomain,omitempty" tf:"fault_domain"`
	// +optional
	Hostname *string `json:"hostname,omitempty" tf:"hostname"`
	// +optional
	ImageID *string `json:"imageID,omitempty" tf:"image_id"`
	// +optional
	InstanceID *string `json:"instanceID,omitempty" tf:"instance_id"`
	// +optional
	IpAddress *string `json:"ipAddress,omitempty" tf:"ip_address"`
	// +optional
	NodeType *string `json:"nodeType,omitempty" tf:"node_type"`
	// +optional
	Shape *string `json:"shape,omitempty" tf:"shape"`
	// +optional
	SshFingerprint *string `json:"sshFingerprint,omitempty" tf:"ssh_fingerprint"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	SubnetID *string `json:"subnetID,omitempty" tf:"subnet_id"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
}

type BdsInstanceSpecUtilNode struct {
	BlockVolumeSizeInGbs *string `json:"blockVolumeSizeInGbs" tf:"block_volume_size_in_gbs"`
	NumberOfNodes        *int64  `json:"numberOfNodes" tf:"number_of_nodes"`
	Shape                *string `json:"shape" tf:"shape"`
	SubnetID             *string `json:"subnetID" tf:"subnet_id"`
}

type BdsInstanceSpecWorkerNode struct {
	BlockVolumeSizeInGbs *string `json:"blockVolumeSizeInGbs" tf:"block_volume_size_in_gbs"`
	NumberOfNodes        *int64  `json:"numberOfNodes" tf:"number_of_nodes"`
	Shape                *string `json:"shape" tf:"shape"`
	SubnetID             *string `json:"subnetID" tf:"subnet_id"`
}

type BdsInstanceSpec struct {
	State *BdsInstanceSpecResource `json:"state,omitempty" tf:"-"`

	Resource BdsInstanceSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`
}

type BdsInstanceSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	CloudSQLDetails      *BdsInstanceSpecCloudSQLDetails `json:"cloudSQLDetails,omitempty" tf:"cloud_sql_details"`
	ClusterAdminPassword *string                         `json:"-" sensitive:"true" tf:"cluster_admin_password"`
	// +optional
	ClusterDetails   *BdsInstanceSpecClusterDetails `json:"clusterDetails,omitempty" tf:"cluster_details"`
	ClusterPublicKey *string                        `json:"clusterPublicKey" tf:"cluster_public_key"`
	ClusterVersion   *string                        `json:"clusterVersion" tf:"cluster_version"`
	CompartmentID    *string                        `json:"compartmentID" tf:"compartment_id"`
	// +optional
	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	DisplayName *string           `json:"displayName" tf:"display_name"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	IsCloudSQLConfigured *bool                      `json:"isCloudSQLConfigured,omitempty" tf:"is_cloud_sql_configured"`
	IsHighAvailability   *bool                      `json:"isHighAvailability" tf:"is_high_availability"`
	IsSecure             *bool                      `json:"isSecure" tf:"is_secure"`
	MasterNode           *BdsInstanceSpecMasterNode `json:"masterNode" tf:"master_node"`
	// +optional
	NetworkConfig *BdsInstanceSpecNetworkConfig `json:"networkConfig,omitempty" tf:"network_config"`
	// +optional
	Nodes []BdsInstanceSpecNodes `json:"nodes,omitempty" tf:"nodes"`
	// +optional
	NumberOfNodes *int64 `json:"numberOfNodes,omitempty" tf:"number_of_nodes"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	TimeUpdated *string                    `json:"timeUpdated,omitempty" tf:"time_updated"`
	UtilNode    *BdsInstanceSpecUtilNode   `json:"utilNode" tf:"util_node"`
	WorkerNode  *BdsInstanceSpecWorkerNode `json:"workerNode" tf:"worker_node"`
}

type BdsInstanceStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// BdsInstanceList is a list of BdsInstances
type BdsInstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of BdsInstance CRD objects
	Items []BdsInstance `json:"items,omitempty"`
}
