/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Budget struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              BudgetSpec   `json:"spec,omitempty"`
	Status            BudgetStatus `json:"status,omitempty"`
}

type BudgetSpec struct {
	State *BudgetSpecResource `json:"state,omitempty" tf:"-"`

	Resource BudgetSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`
}

type BudgetSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	ActualSpend *float64 `json:"actualSpend,omitempty" tf:"actual_spend"`
	// +optional
	AlertRuleCount *int64 `json:"alertRuleCount,omitempty" tf:"alert_rule_count"`
	Amount         *int64 `json:"amount" tf:"amount"`
	// +optional
	BudgetProcessingPeriodStartOffset *int64  `json:"budgetProcessingPeriodStartOffset,omitempty" tf:"budget_processing_period_start_offset"`
	CompartmentID                     *string `json:"compartmentID" tf:"compartment_id"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	ForecastedSpend *float64 `json:"forecastedSpend,omitempty" tf:"forecasted_spend"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	ResetPeriod  *string           `json:"resetPeriod" tf:"reset_period"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	// Deprecated
	TargetCompartmentID *string `json:"targetCompartmentID,omitempty" tf:"target_compartment_id"`
	// +optional
	TargetType *string `json:"targetType,omitempty" tf:"target_type"`
	// +optional
	Targets []string `json:"targets,omitempty" tf:"targets"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	TimeSpendComputed *string `json:"timeSpendComputed,omitempty" tf:"time_spend_computed"`
	// +optional
	TimeUpdated *string `json:"timeUpdated,omitempty" tf:"time_updated"`
	// +optional
	Version *int64 `json:"version,omitempty" tf:"version"`
}

type BudgetStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// BudgetList is a list of Budgets
type BudgetList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Budget CRD objects
	Items []Budget `json:"items,omitempty"`
}
