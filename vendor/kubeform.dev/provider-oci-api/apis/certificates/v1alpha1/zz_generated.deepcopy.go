//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "kubeform.dev/apimachinery/api/v1alpha1"

	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	apiv1 "kmodules.xyz/client-go/api/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCaBundle) DeepCopyInto(out *ManagementCaBundle) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCaBundle.
func (in *ManagementCaBundle) DeepCopy() *ManagementCaBundle {
	if in == nil {
		return nil
	}
	out := new(ManagementCaBundle)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagementCaBundle) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCaBundleList) DeepCopyInto(out *ManagementCaBundleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ManagementCaBundle, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCaBundleList.
func (in *ManagementCaBundleList) DeepCopy() *ManagementCaBundleList {
	if in == nil {
		return nil
	}
	out := new(ManagementCaBundleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagementCaBundleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCaBundleSpec) DeepCopyInto(out *ManagementCaBundleSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ManagementCaBundleSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCaBundleSpec.
func (in *ManagementCaBundleSpec) DeepCopy() *ManagementCaBundleSpec {
	if in == nil {
		return nil
	}
	out := new(ManagementCaBundleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCaBundleSpecResource) DeepCopyInto(out *ManagementCaBundleSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.CaBundlePem != nil {
		in, out := &in.CaBundlePem, &out.CaBundlePem
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCaBundleSpecResource.
func (in *ManagementCaBundleSpecResource) DeepCopy() *ManagementCaBundleSpecResource {
	if in == nil {
		return nil
	}
	out := new(ManagementCaBundleSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCaBundleStatus) DeepCopyInto(out *ManagementCaBundleStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCaBundleStatus.
func (in *ManagementCaBundleStatus) DeepCopy() *ManagementCaBundleStatus {
	if in == nil {
		return nil
	}
	out := new(ManagementCaBundleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCertificate) DeepCopyInto(out *ManagementCertificate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCertificate.
func (in *ManagementCertificate) DeepCopy() *ManagementCertificate {
	if in == nil {
		return nil
	}
	out := new(ManagementCertificate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagementCertificate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCertificateAuthority) DeepCopyInto(out *ManagementCertificateAuthority) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCertificateAuthority.
func (in *ManagementCertificateAuthority) DeepCopy() *ManagementCertificateAuthority {
	if in == nil {
		return nil
	}
	out := new(ManagementCertificateAuthority)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagementCertificateAuthority) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCertificateAuthorityList) DeepCopyInto(out *ManagementCertificateAuthorityList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ManagementCertificateAuthority, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCertificateAuthorityList.
func (in *ManagementCertificateAuthorityList) DeepCopy() *ManagementCertificateAuthorityList {
	if in == nil {
		return nil
	}
	out := new(ManagementCertificateAuthorityList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagementCertificateAuthorityList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCertificateAuthoritySpec) DeepCopyInto(out *ManagementCertificateAuthoritySpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ManagementCertificateAuthoritySpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCertificateAuthoritySpec.
func (in *ManagementCertificateAuthoritySpec) DeepCopy() *ManagementCertificateAuthoritySpec {
	if in == nil {
		return nil
	}
	out := new(ManagementCertificateAuthoritySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCertificateAuthoritySpecCertificateAuthorityConfig) DeepCopyInto(out *ManagementCertificateAuthoritySpecCertificateAuthorityConfig) {
	*out = *in
	if in.ConfigType != nil {
		in, out := &in.ConfigType, &out.ConfigType
		*out = new(string)
		**out = **in
	}
	if in.IssuerCertificateAuthorityID != nil {
		in, out := &in.IssuerCertificateAuthorityID, &out.IssuerCertificateAuthorityID
		*out = new(string)
		**out = **in
	}
	if in.SigningAlgorithm != nil {
		in, out := &in.SigningAlgorithm, &out.SigningAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.Subject != nil {
		in, out := &in.Subject, &out.Subject
		*out = new(ManagementCertificateAuthoritySpecCertificateAuthorityConfigSubject)
		(*in).DeepCopyInto(*out)
	}
	if in.Validity != nil {
		in, out := &in.Validity, &out.Validity
		*out = new(ManagementCertificateAuthoritySpecCertificateAuthorityConfigValidity)
		(*in).DeepCopyInto(*out)
	}
	if in.VersionName != nil {
		in, out := &in.VersionName, &out.VersionName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCertificateAuthoritySpecCertificateAuthorityConfig.
func (in *ManagementCertificateAuthoritySpecCertificateAuthorityConfig) DeepCopy() *ManagementCertificateAuthoritySpecCertificateAuthorityConfig {
	if in == nil {
		return nil
	}
	out := new(ManagementCertificateAuthoritySpecCertificateAuthorityConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCertificateAuthoritySpecCertificateAuthorityConfigSubject) DeepCopyInto(out *ManagementCertificateAuthoritySpecCertificateAuthorityConfigSubject) {
	*out = *in
	if in.CommonName != nil {
		in, out := &in.CommonName, &out.CommonName
		*out = new(string)
		**out = **in
	}
	if in.Country != nil {
		in, out := &in.Country, &out.Country
		*out = new(string)
		**out = **in
	}
	if in.DistinguishedNameQualifier != nil {
		in, out := &in.DistinguishedNameQualifier, &out.DistinguishedNameQualifier
		*out = new(string)
		**out = **in
	}
	if in.DomainComponent != nil {
		in, out := &in.DomainComponent, &out.DomainComponent
		*out = new(string)
		**out = **in
	}
	if in.GenerationQualifier != nil {
		in, out := &in.GenerationQualifier, &out.GenerationQualifier
		*out = new(string)
		**out = **in
	}
	if in.GivenName != nil {
		in, out := &in.GivenName, &out.GivenName
		*out = new(string)
		**out = **in
	}
	if in.Initials != nil {
		in, out := &in.Initials, &out.Initials
		*out = new(string)
		**out = **in
	}
	if in.LocalityName != nil {
		in, out := &in.LocalityName, &out.LocalityName
		*out = new(string)
		**out = **in
	}
	if in.Organization != nil {
		in, out := &in.Organization, &out.Organization
		*out = new(string)
		**out = **in
	}
	if in.OrganizationalUnit != nil {
		in, out := &in.OrganizationalUnit, &out.OrganizationalUnit
		*out = new(string)
		**out = **in
	}
	if in.Pseudonym != nil {
		in, out := &in.Pseudonym, &out.Pseudonym
		*out = new(string)
		**out = **in
	}
	if in.SerialNumber != nil {
		in, out := &in.SerialNumber, &out.SerialNumber
		*out = new(string)
		**out = **in
	}
	if in.StateOrProvinceName != nil {
		in, out := &in.StateOrProvinceName, &out.StateOrProvinceName
		*out = new(string)
		**out = **in
	}
	if in.Street != nil {
		in, out := &in.Street, &out.Street
		*out = new(string)
		**out = **in
	}
	if in.Surname != nil {
		in, out := &in.Surname, &out.Surname
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCertificateAuthoritySpecCertificateAuthorityConfigSubject.
func (in *ManagementCertificateAuthoritySpecCertificateAuthorityConfigSubject) DeepCopy() *ManagementCertificateAuthoritySpecCertificateAuthorityConfigSubject {
	if in == nil {
		return nil
	}
	out := new(ManagementCertificateAuthoritySpecCertificateAuthorityConfigSubject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCertificateAuthoritySpecCertificateAuthorityConfigValidity) DeepCopyInto(out *ManagementCertificateAuthoritySpecCertificateAuthorityConfigValidity) {
	*out = *in
	if in.TimeOfValidityNotAfter != nil {
		in, out := &in.TimeOfValidityNotAfter, &out.TimeOfValidityNotAfter
		*out = new(string)
		**out = **in
	}
	if in.TimeOfValidityNotBefore != nil {
		in, out := &in.TimeOfValidityNotBefore, &out.TimeOfValidityNotBefore
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCertificateAuthoritySpecCertificateAuthorityConfigValidity.
func (in *ManagementCertificateAuthoritySpecCertificateAuthorityConfigValidity) DeepCopy() *ManagementCertificateAuthoritySpecCertificateAuthorityConfigValidity {
	if in == nil {
		return nil
	}
	out := new(ManagementCertificateAuthoritySpecCertificateAuthorityConfigValidity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCertificateAuthoritySpecCertificateAuthorityRules) DeepCopyInto(out *ManagementCertificateAuthoritySpecCertificateAuthorityRules) {
	*out = *in
	if in.CertificateAuthorityMaxValidityDuration != nil {
		in, out := &in.CertificateAuthorityMaxValidityDuration, &out.CertificateAuthorityMaxValidityDuration
		*out = new(string)
		**out = **in
	}
	if in.LeafCertificateMaxValidityDuration != nil {
		in, out := &in.LeafCertificateMaxValidityDuration, &out.LeafCertificateMaxValidityDuration
		*out = new(string)
		**out = **in
	}
	if in.RuleType != nil {
		in, out := &in.RuleType, &out.RuleType
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCertificateAuthoritySpecCertificateAuthorityRules.
func (in *ManagementCertificateAuthoritySpecCertificateAuthorityRules) DeepCopy() *ManagementCertificateAuthoritySpecCertificateAuthorityRules {
	if in == nil {
		return nil
	}
	out := new(ManagementCertificateAuthoritySpecCertificateAuthorityRules)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCertificateAuthoritySpecCertificateRevocationListDetails) DeepCopyInto(out *ManagementCertificateAuthoritySpecCertificateRevocationListDetails) {
	*out = *in
	if in.CustomFormattedUrls != nil {
		in, out := &in.CustomFormattedUrls, &out.CustomFormattedUrls
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ObjectStorageConfig != nil {
		in, out := &in.ObjectStorageConfig, &out.ObjectStorageConfig
		*out = new(ManagementCertificateAuthoritySpecCertificateRevocationListDetailsObjectStorageConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCertificateAuthoritySpecCertificateRevocationListDetails.
func (in *ManagementCertificateAuthoritySpecCertificateRevocationListDetails) DeepCopy() *ManagementCertificateAuthoritySpecCertificateRevocationListDetails {
	if in == nil {
		return nil
	}
	out := new(ManagementCertificateAuthoritySpecCertificateRevocationListDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCertificateAuthoritySpecCertificateRevocationListDetailsObjectStorageConfig) DeepCopyInto(out *ManagementCertificateAuthoritySpecCertificateRevocationListDetailsObjectStorageConfig) {
	*out = *in
	if in.ObjectStorageBucketName != nil {
		in, out := &in.ObjectStorageBucketName, &out.ObjectStorageBucketName
		*out = new(string)
		**out = **in
	}
	if in.ObjectStorageNamespace != nil {
		in, out := &in.ObjectStorageNamespace, &out.ObjectStorageNamespace
		*out = new(string)
		**out = **in
	}
	if in.ObjectStorageObjectNameFormat != nil {
		in, out := &in.ObjectStorageObjectNameFormat, &out.ObjectStorageObjectNameFormat
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCertificateAuthoritySpecCertificateRevocationListDetailsObjectStorageConfig.
func (in *ManagementCertificateAuthoritySpecCertificateRevocationListDetailsObjectStorageConfig) DeepCopy() *ManagementCertificateAuthoritySpecCertificateRevocationListDetailsObjectStorageConfig {
	if in == nil {
		return nil
	}
	out := new(ManagementCertificateAuthoritySpecCertificateRevocationListDetailsObjectStorageConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCertificateAuthoritySpecCurrentVersion) DeepCopyInto(out *ManagementCertificateAuthoritySpecCurrentVersion) {
	*out = *in
	if in.CertificateAuthorityID != nil {
		in, out := &in.CertificateAuthorityID, &out.CertificateAuthorityID
		*out = new(string)
		**out = **in
	}
	if in.IssuerCaVersionNumber != nil {
		in, out := &in.IssuerCaVersionNumber, &out.IssuerCaVersionNumber
		*out = new(string)
		**out = **in
	}
	if in.RevocationStatus != nil {
		in, out := &in.RevocationStatus, &out.RevocationStatus
		*out = new(ManagementCertificateAuthoritySpecCurrentVersionRevocationStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.SerialNumber != nil {
		in, out := &in.SerialNumber, &out.SerialNumber
		*out = new(string)
		**out = **in
	}
	if in.Stages != nil {
		in, out := &in.Stages, &out.Stages
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeOfDeletion != nil {
		in, out := &in.TimeOfDeletion, &out.TimeOfDeletion
		*out = new(string)
		**out = **in
	}
	if in.Validity != nil {
		in, out := &in.Validity, &out.Validity
		*out = new(ManagementCertificateAuthoritySpecCurrentVersionValidity)
		(*in).DeepCopyInto(*out)
	}
	if in.VersionName != nil {
		in, out := &in.VersionName, &out.VersionName
		*out = new(string)
		**out = **in
	}
	if in.VersionNumber != nil {
		in, out := &in.VersionNumber, &out.VersionNumber
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCertificateAuthoritySpecCurrentVersion.
func (in *ManagementCertificateAuthoritySpecCurrentVersion) DeepCopy() *ManagementCertificateAuthoritySpecCurrentVersion {
	if in == nil {
		return nil
	}
	out := new(ManagementCertificateAuthoritySpecCurrentVersion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCertificateAuthoritySpecCurrentVersionRevocationStatus) DeepCopyInto(out *ManagementCertificateAuthoritySpecCurrentVersionRevocationStatus) {
	*out = *in
	if in.RevocationReason != nil {
		in, out := &in.RevocationReason, &out.RevocationReason
		*out = new(string)
		**out = **in
	}
	if in.TimeOfRevocation != nil {
		in, out := &in.TimeOfRevocation, &out.TimeOfRevocation
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCertificateAuthoritySpecCurrentVersionRevocationStatus.
func (in *ManagementCertificateAuthoritySpecCurrentVersionRevocationStatus) DeepCopy() *ManagementCertificateAuthoritySpecCurrentVersionRevocationStatus {
	if in == nil {
		return nil
	}
	out := new(ManagementCertificateAuthoritySpecCurrentVersionRevocationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCertificateAuthoritySpecCurrentVersionValidity) DeepCopyInto(out *ManagementCertificateAuthoritySpecCurrentVersionValidity) {
	*out = *in
	if in.TimeOfValidityNotAfter != nil {
		in, out := &in.TimeOfValidityNotAfter, &out.TimeOfValidityNotAfter
		*out = new(string)
		**out = **in
	}
	if in.TimeOfValidityNotBefore != nil {
		in, out := &in.TimeOfValidityNotBefore, &out.TimeOfValidityNotBefore
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCertificateAuthoritySpecCurrentVersionValidity.
func (in *ManagementCertificateAuthoritySpecCurrentVersionValidity) DeepCopy() *ManagementCertificateAuthoritySpecCurrentVersionValidity {
	if in == nil {
		return nil
	}
	out := new(ManagementCertificateAuthoritySpecCurrentVersionValidity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCertificateAuthoritySpecResource) DeepCopyInto(out *ManagementCertificateAuthoritySpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.CertificateAuthorityConfig != nil {
		in, out := &in.CertificateAuthorityConfig, &out.CertificateAuthorityConfig
		*out = new(ManagementCertificateAuthoritySpecCertificateAuthorityConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.CertificateAuthorityRules != nil {
		in, out := &in.CertificateAuthorityRules, &out.CertificateAuthorityRules
		*out = make([]ManagementCertificateAuthoritySpecCertificateAuthorityRules, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CertificateRevocationListDetails != nil {
		in, out := &in.CertificateRevocationListDetails, &out.CertificateRevocationListDetails
		*out = new(ManagementCertificateAuthoritySpecCertificateRevocationListDetails)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ConfigType != nil {
		in, out := &in.ConfigType, &out.ConfigType
		*out = new(string)
		**out = **in
	}
	if in.CurrentVersion != nil {
		in, out := &in.CurrentVersion, &out.CurrentVersion
		*out = new(ManagementCertificateAuthoritySpecCurrentVersion)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.IssuerCertificateAuthorityID != nil {
		in, out := &in.IssuerCertificateAuthorityID, &out.IssuerCertificateAuthorityID
		*out = new(string)
		**out = **in
	}
	if in.KmsKeyID != nil {
		in, out := &in.KmsKeyID, &out.KmsKeyID
		*out = new(string)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SigningAlgorithm != nil {
		in, out := &in.SigningAlgorithm, &out.SigningAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Subject != nil {
		in, out := &in.Subject, &out.Subject
		*out = new(ManagementCertificateAuthoritySpecSubject)
		(*in).DeepCopyInto(*out)
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeOfDeletion != nil {
		in, out := &in.TimeOfDeletion, &out.TimeOfDeletion
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCertificateAuthoritySpecResource.
func (in *ManagementCertificateAuthoritySpecResource) DeepCopy() *ManagementCertificateAuthoritySpecResource {
	if in == nil {
		return nil
	}
	out := new(ManagementCertificateAuthoritySpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCertificateAuthoritySpecSubject) DeepCopyInto(out *ManagementCertificateAuthoritySpecSubject) {
	*out = *in
	if in.CommonName != nil {
		in, out := &in.CommonName, &out.CommonName
		*out = new(string)
		**out = **in
	}
	if in.Country != nil {
		in, out := &in.Country, &out.Country
		*out = new(string)
		**out = **in
	}
	if in.DistinguishedNameQualifier != nil {
		in, out := &in.DistinguishedNameQualifier, &out.DistinguishedNameQualifier
		*out = new(string)
		**out = **in
	}
	if in.DomainComponent != nil {
		in, out := &in.DomainComponent, &out.DomainComponent
		*out = new(string)
		**out = **in
	}
	if in.GenerationQualifier != nil {
		in, out := &in.GenerationQualifier, &out.GenerationQualifier
		*out = new(string)
		**out = **in
	}
	if in.GivenName != nil {
		in, out := &in.GivenName, &out.GivenName
		*out = new(string)
		**out = **in
	}
	if in.Initials != nil {
		in, out := &in.Initials, &out.Initials
		*out = new(string)
		**out = **in
	}
	if in.LocalityName != nil {
		in, out := &in.LocalityName, &out.LocalityName
		*out = new(string)
		**out = **in
	}
	if in.Organization != nil {
		in, out := &in.Organization, &out.Organization
		*out = new(string)
		**out = **in
	}
	if in.OrganizationalUnit != nil {
		in, out := &in.OrganizationalUnit, &out.OrganizationalUnit
		*out = new(string)
		**out = **in
	}
	if in.Pseudonym != nil {
		in, out := &in.Pseudonym, &out.Pseudonym
		*out = new(string)
		**out = **in
	}
	if in.SerialNumber != nil {
		in, out := &in.SerialNumber, &out.SerialNumber
		*out = new(string)
		**out = **in
	}
	if in.StateOrProvinceName != nil {
		in, out := &in.StateOrProvinceName, &out.StateOrProvinceName
		*out = new(string)
		**out = **in
	}
	if in.Street != nil {
		in, out := &in.Street, &out.Street
		*out = new(string)
		**out = **in
	}
	if in.Surname != nil {
		in, out := &in.Surname, &out.Surname
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCertificateAuthoritySpecSubject.
func (in *ManagementCertificateAuthoritySpecSubject) DeepCopy() *ManagementCertificateAuthoritySpecSubject {
	if in == nil {
		return nil
	}
	out := new(ManagementCertificateAuthoritySpecSubject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCertificateAuthorityStatus) DeepCopyInto(out *ManagementCertificateAuthorityStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCertificateAuthorityStatus.
func (in *ManagementCertificateAuthorityStatus) DeepCopy() *ManagementCertificateAuthorityStatus {
	if in == nil {
		return nil
	}
	out := new(ManagementCertificateAuthorityStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCertificateList) DeepCopyInto(out *ManagementCertificateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ManagementCertificate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCertificateList.
func (in *ManagementCertificateList) DeepCopy() *ManagementCertificateList {
	if in == nil {
		return nil
	}
	out := new(ManagementCertificateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagementCertificateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCertificateSpec) DeepCopyInto(out *ManagementCertificateSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ManagementCertificateSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCertificateSpec.
func (in *ManagementCertificateSpec) DeepCopy() *ManagementCertificateSpec {
	if in == nil {
		return nil
	}
	out := new(ManagementCertificateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCertificateSpecCertificateConfig) DeepCopyInto(out *ManagementCertificateSpecCertificateConfig) {
	*out = *in
	if in.CertificateProfileType != nil {
		in, out := &in.CertificateProfileType, &out.CertificateProfileType
		*out = new(string)
		**out = **in
	}
	if in.ConfigType != nil {
		in, out := &in.ConfigType, &out.ConfigType
		*out = new(string)
		**out = **in
	}
	if in.CsrPem != nil {
		in, out := &in.CsrPem, &out.CsrPem
		*out = new(string)
		**out = **in
	}
	if in.IssuerCertificateAuthorityID != nil {
		in, out := &in.IssuerCertificateAuthorityID, &out.IssuerCertificateAuthorityID
		*out = new(string)
		**out = **in
	}
	if in.KeyAlgorithm != nil {
		in, out := &in.KeyAlgorithm, &out.KeyAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.SignatureAlgorithm != nil {
		in, out := &in.SignatureAlgorithm, &out.SignatureAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.Subject != nil {
		in, out := &in.Subject, &out.Subject
		*out = new(ManagementCertificateSpecCertificateConfigSubject)
		(*in).DeepCopyInto(*out)
	}
	if in.SubjectAlternativeNames != nil {
		in, out := &in.SubjectAlternativeNames, &out.SubjectAlternativeNames
		*out = make([]ManagementCertificateSpecCertificateConfigSubjectAlternativeNames, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Validity != nil {
		in, out := &in.Validity, &out.Validity
		*out = new(ManagementCertificateSpecCertificateConfigValidity)
		(*in).DeepCopyInto(*out)
	}
	if in.VersionName != nil {
		in, out := &in.VersionName, &out.VersionName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCertificateSpecCertificateConfig.
func (in *ManagementCertificateSpecCertificateConfig) DeepCopy() *ManagementCertificateSpecCertificateConfig {
	if in == nil {
		return nil
	}
	out := new(ManagementCertificateSpecCertificateConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCertificateSpecCertificateConfigSubject) DeepCopyInto(out *ManagementCertificateSpecCertificateConfigSubject) {
	*out = *in
	if in.CommonName != nil {
		in, out := &in.CommonName, &out.CommonName
		*out = new(string)
		**out = **in
	}
	if in.Country != nil {
		in, out := &in.Country, &out.Country
		*out = new(string)
		**out = **in
	}
	if in.DistinguishedNameQualifier != nil {
		in, out := &in.DistinguishedNameQualifier, &out.DistinguishedNameQualifier
		*out = new(string)
		**out = **in
	}
	if in.DomainComponent != nil {
		in, out := &in.DomainComponent, &out.DomainComponent
		*out = new(string)
		**out = **in
	}
	if in.GenerationQualifier != nil {
		in, out := &in.GenerationQualifier, &out.GenerationQualifier
		*out = new(string)
		**out = **in
	}
	if in.GivenName != nil {
		in, out := &in.GivenName, &out.GivenName
		*out = new(string)
		**out = **in
	}
	if in.Initials != nil {
		in, out := &in.Initials, &out.Initials
		*out = new(string)
		**out = **in
	}
	if in.LocalityName != nil {
		in, out := &in.LocalityName, &out.LocalityName
		*out = new(string)
		**out = **in
	}
	if in.Organization != nil {
		in, out := &in.Organization, &out.Organization
		*out = new(string)
		**out = **in
	}
	if in.OrganizationalUnit != nil {
		in, out := &in.OrganizationalUnit, &out.OrganizationalUnit
		*out = new(string)
		**out = **in
	}
	if in.Pseudonym != nil {
		in, out := &in.Pseudonym, &out.Pseudonym
		*out = new(string)
		**out = **in
	}
	if in.SerialNumber != nil {
		in, out := &in.SerialNumber, &out.SerialNumber
		*out = new(string)
		**out = **in
	}
	if in.StateOrProvinceName != nil {
		in, out := &in.StateOrProvinceName, &out.StateOrProvinceName
		*out = new(string)
		**out = **in
	}
	if in.Street != nil {
		in, out := &in.Street, &out.Street
		*out = new(string)
		**out = **in
	}
	if in.Surname != nil {
		in, out := &in.Surname, &out.Surname
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCertificateSpecCertificateConfigSubject.
func (in *ManagementCertificateSpecCertificateConfigSubject) DeepCopy() *ManagementCertificateSpecCertificateConfigSubject {
	if in == nil {
		return nil
	}
	out := new(ManagementCertificateSpecCertificateConfigSubject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCertificateSpecCertificateConfigSubjectAlternativeNames) DeepCopyInto(out *ManagementCertificateSpecCertificateConfigSubjectAlternativeNames) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCertificateSpecCertificateConfigSubjectAlternativeNames.
func (in *ManagementCertificateSpecCertificateConfigSubjectAlternativeNames) DeepCopy() *ManagementCertificateSpecCertificateConfigSubjectAlternativeNames {
	if in == nil {
		return nil
	}
	out := new(ManagementCertificateSpecCertificateConfigSubjectAlternativeNames)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCertificateSpecCertificateConfigValidity) DeepCopyInto(out *ManagementCertificateSpecCertificateConfigValidity) {
	*out = *in
	if in.TimeOfValidityNotAfter != nil {
		in, out := &in.TimeOfValidityNotAfter, &out.TimeOfValidityNotAfter
		*out = new(string)
		**out = **in
	}
	if in.TimeOfValidityNotBefore != nil {
		in, out := &in.TimeOfValidityNotBefore, &out.TimeOfValidityNotBefore
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCertificateSpecCertificateConfigValidity.
func (in *ManagementCertificateSpecCertificateConfigValidity) DeepCopy() *ManagementCertificateSpecCertificateConfigValidity {
	if in == nil {
		return nil
	}
	out := new(ManagementCertificateSpecCertificateConfigValidity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCertificateSpecCertificateRevocationListDetails) DeepCopyInto(out *ManagementCertificateSpecCertificateRevocationListDetails) {
	*out = *in
	if in.CustomFormattedUrls != nil {
		in, out := &in.CustomFormattedUrls, &out.CustomFormattedUrls
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ObjectStorageConfig != nil {
		in, out := &in.ObjectStorageConfig, &out.ObjectStorageConfig
		*out = new(ManagementCertificateSpecCertificateRevocationListDetailsObjectStorageConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCertificateSpecCertificateRevocationListDetails.
func (in *ManagementCertificateSpecCertificateRevocationListDetails) DeepCopy() *ManagementCertificateSpecCertificateRevocationListDetails {
	if in == nil {
		return nil
	}
	out := new(ManagementCertificateSpecCertificateRevocationListDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCertificateSpecCertificateRevocationListDetailsObjectStorageConfig) DeepCopyInto(out *ManagementCertificateSpecCertificateRevocationListDetailsObjectStorageConfig) {
	*out = *in
	if in.ObjectStorageBucketName != nil {
		in, out := &in.ObjectStorageBucketName, &out.ObjectStorageBucketName
		*out = new(string)
		**out = **in
	}
	if in.ObjectStorageNamespace != nil {
		in, out := &in.ObjectStorageNamespace, &out.ObjectStorageNamespace
		*out = new(string)
		**out = **in
	}
	if in.ObjectStorageObjectNameFormat != nil {
		in, out := &in.ObjectStorageObjectNameFormat, &out.ObjectStorageObjectNameFormat
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCertificateSpecCertificateRevocationListDetailsObjectStorageConfig.
func (in *ManagementCertificateSpecCertificateRevocationListDetailsObjectStorageConfig) DeepCopy() *ManagementCertificateSpecCertificateRevocationListDetailsObjectStorageConfig {
	if in == nil {
		return nil
	}
	out := new(ManagementCertificateSpecCertificateRevocationListDetailsObjectStorageConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCertificateSpecCertificateRules) DeepCopyInto(out *ManagementCertificateSpecCertificateRules) {
	*out = *in
	if in.AdvanceRenewalPeriod != nil {
		in, out := &in.AdvanceRenewalPeriod, &out.AdvanceRenewalPeriod
		*out = new(string)
		**out = **in
	}
	if in.RenewalInterval != nil {
		in, out := &in.RenewalInterval, &out.RenewalInterval
		*out = new(string)
		**out = **in
	}
	if in.RuleType != nil {
		in, out := &in.RuleType, &out.RuleType
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCertificateSpecCertificateRules.
func (in *ManagementCertificateSpecCertificateRules) DeepCopy() *ManagementCertificateSpecCertificateRules {
	if in == nil {
		return nil
	}
	out := new(ManagementCertificateSpecCertificateRules)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCertificateSpecCurrentVersion) DeepCopyInto(out *ManagementCertificateSpecCurrentVersion) {
	*out = *in
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(string)
		**out = **in
	}
	if in.IssuerCaVersionNumber != nil {
		in, out := &in.IssuerCaVersionNumber, &out.IssuerCaVersionNumber
		*out = new(string)
		**out = **in
	}
	if in.RevocationStatus != nil {
		in, out := &in.RevocationStatus, &out.RevocationStatus
		*out = new(ManagementCertificateSpecCurrentVersionRevocationStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.SerialNumber != nil {
		in, out := &in.SerialNumber, &out.SerialNumber
		*out = new(string)
		**out = **in
	}
	if in.Stages != nil {
		in, out := &in.Stages, &out.Stages
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SubjectAlternativeNames != nil {
		in, out := &in.SubjectAlternativeNames, &out.SubjectAlternativeNames
		*out = make([]ManagementCertificateSpecCurrentVersionSubjectAlternativeNames, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeOfDeletion != nil {
		in, out := &in.TimeOfDeletion, &out.TimeOfDeletion
		*out = new(string)
		**out = **in
	}
	if in.Validity != nil {
		in, out := &in.Validity, &out.Validity
		*out = new(ManagementCertificateSpecCurrentVersionValidity)
		(*in).DeepCopyInto(*out)
	}
	if in.VersionName != nil {
		in, out := &in.VersionName, &out.VersionName
		*out = new(string)
		**out = **in
	}
	if in.VersionNumber != nil {
		in, out := &in.VersionNumber, &out.VersionNumber
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCertificateSpecCurrentVersion.
func (in *ManagementCertificateSpecCurrentVersion) DeepCopy() *ManagementCertificateSpecCurrentVersion {
	if in == nil {
		return nil
	}
	out := new(ManagementCertificateSpecCurrentVersion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCertificateSpecCurrentVersionRevocationStatus) DeepCopyInto(out *ManagementCertificateSpecCurrentVersionRevocationStatus) {
	*out = *in
	if in.RevocationReason != nil {
		in, out := &in.RevocationReason, &out.RevocationReason
		*out = new(string)
		**out = **in
	}
	if in.TimeOfRevocation != nil {
		in, out := &in.TimeOfRevocation, &out.TimeOfRevocation
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCertificateSpecCurrentVersionRevocationStatus.
func (in *ManagementCertificateSpecCurrentVersionRevocationStatus) DeepCopy() *ManagementCertificateSpecCurrentVersionRevocationStatus {
	if in == nil {
		return nil
	}
	out := new(ManagementCertificateSpecCurrentVersionRevocationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCertificateSpecCurrentVersionSubjectAlternativeNames) DeepCopyInto(out *ManagementCertificateSpecCurrentVersionSubjectAlternativeNames) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCertificateSpecCurrentVersionSubjectAlternativeNames.
func (in *ManagementCertificateSpecCurrentVersionSubjectAlternativeNames) DeepCopy() *ManagementCertificateSpecCurrentVersionSubjectAlternativeNames {
	if in == nil {
		return nil
	}
	out := new(ManagementCertificateSpecCurrentVersionSubjectAlternativeNames)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCertificateSpecCurrentVersionValidity) DeepCopyInto(out *ManagementCertificateSpecCurrentVersionValidity) {
	*out = *in
	if in.TimeOfValidityNotAfter != nil {
		in, out := &in.TimeOfValidityNotAfter, &out.TimeOfValidityNotAfter
		*out = new(string)
		**out = **in
	}
	if in.TimeOfValidityNotBefore != nil {
		in, out := &in.TimeOfValidityNotBefore, &out.TimeOfValidityNotBefore
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCertificateSpecCurrentVersionValidity.
func (in *ManagementCertificateSpecCurrentVersionValidity) DeepCopy() *ManagementCertificateSpecCurrentVersionValidity {
	if in == nil {
		return nil
	}
	out := new(ManagementCertificateSpecCurrentVersionValidity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCertificateSpecResource) DeepCopyInto(out *ManagementCertificateSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.CertificateConfig != nil {
		in, out := &in.CertificateConfig, &out.CertificateConfig
		*out = new(ManagementCertificateSpecCertificateConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.CertificateProfileType != nil {
		in, out := &in.CertificateProfileType, &out.CertificateProfileType
		*out = new(string)
		**out = **in
	}
	if in.CertificateRevocationListDetails != nil {
		in, out := &in.CertificateRevocationListDetails, &out.CertificateRevocationListDetails
		*out = new(ManagementCertificateSpecCertificateRevocationListDetails)
		(*in).DeepCopyInto(*out)
	}
	if in.CertificateRules != nil {
		in, out := &in.CertificateRules, &out.CertificateRules
		*out = make([]ManagementCertificateSpecCertificateRules, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ConfigType != nil {
		in, out := &in.ConfigType, &out.ConfigType
		*out = new(string)
		**out = **in
	}
	if in.CurrentVersion != nil {
		in, out := &in.CurrentVersion, &out.CurrentVersion
		*out = new(ManagementCertificateSpecCurrentVersion)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.IssuerCertificateAuthorityID != nil {
		in, out := &in.IssuerCertificateAuthorityID, &out.IssuerCertificateAuthorityID
		*out = new(string)
		**out = **in
	}
	if in.KeyAlgorithm != nil {
		in, out := &in.KeyAlgorithm, &out.KeyAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SignatureAlgorithm != nil {
		in, out := &in.SignatureAlgorithm, &out.SignatureAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Subject != nil {
		in, out := &in.Subject, &out.Subject
		*out = new(ManagementCertificateSpecSubject)
		(*in).DeepCopyInto(*out)
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeOfDeletion != nil {
		in, out := &in.TimeOfDeletion, &out.TimeOfDeletion
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCertificateSpecResource.
func (in *ManagementCertificateSpecResource) DeepCopy() *ManagementCertificateSpecResource {
	if in == nil {
		return nil
	}
	out := new(ManagementCertificateSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCertificateSpecSubject) DeepCopyInto(out *ManagementCertificateSpecSubject) {
	*out = *in
	if in.CommonName != nil {
		in, out := &in.CommonName, &out.CommonName
		*out = new(string)
		**out = **in
	}
	if in.Country != nil {
		in, out := &in.Country, &out.Country
		*out = new(string)
		**out = **in
	}
	if in.DistinguishedNameQualifier != nil {
		in, out := &in.DistinguishedNameQualifier, &out.DistinguishedNameQualifier
		*out = new(string)
		**out = **in
	}
	if in.DomainComponent != nil {
		in, out := &in.DomainComponent, &out.DomainComponent
		*out = new(string)
		**out = **in
	}
	if in.GenerationQualifier != nil {
		in, out := &in.GenerationQualifier, &out.GenerationQualifier
		*out = new(string)
		**out = **in
	}
	if in.GivenName != nil {
		in, out := &in.GivenName, &out.GivenName
		*out = new(string)
		**out = **in
	}
	if in.Initials != nil {
		in, out := &in.Initials, &out.Initials
		*out = new(string)
		**out = **in
	}
	if in.LocalityName != nil {
		in, out := &in.LocalityName, &out.LocalityName
		*out = new(string)
		**out = **in
	}
	if in.Organization != nil {
		in, out := &in.Organization, &out.Organization
		*out = new(string)
		**out = **in
	}
	if in.OrganizationalUnit != nil {
		in, out := &in.OrganizationalUnit, &out.OrganizationalUnit
		*out = new(string)
		**out = **in
	}
	if in.Pseudonym != nil {
		in, out := &in.Pseudonym, &out.Pseudonym
		*out = new(string)
		**out = **in
	}
	if in.SerialNumber != nil {
		in, out := &in.SerialNumber, &out.SerialNumber
		*out = new(string)
		**out = **in
	}
	if in.StateOrProvinceName != nil {
		in, out := &in.StateOrProvinceName, &out.StateOrProvinceName
		*out = new(string)
		**out = **in
	}
	if in.Street != nil {
		in, out := &in.Street, &out.Street
		*out = new(string)
		**out = **in
	}
	if in.Surname != nil {
		in, out := &in.Surname, &out.Surname
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCertificateSpecSubject.
func (in *ManagementCertificateSpecSubject) DeepCopy() *ManagementCertificateSpecSubject {
	if in == nil {
		return nil
	}
	out := new(ManagementCertificateSpecSubject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementCertificateStatus) DeepCopyInto(out *ManagementCertificateStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementCertificateStatus.
func (in *ManagementCertificateStatus) DeepCopy() *ManagementCertificateStatus {
	if in == nil {
		return nil
	}
	out := new(ManagementCertificateStatus)
	in.DeepCopyInto(out)
	return out
}
