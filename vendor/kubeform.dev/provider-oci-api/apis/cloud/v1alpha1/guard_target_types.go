/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type GuardTarget struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              GuardTargetSpec   `json:"spec,omitempty"`
	Status            GuardTargetStatus `json:"status,omitempty"`
}

type GuardTargetSpecTargetDetectorRecipesDetectorRulesDetailsConditionGroups struct {
	CompartmentID *string `json:"compartmentID" tf:"compartment_id"`
	Condition     *string `json:"condition" tf:"condition"`
}

type GuardTargetSpecTargetDetectorRecipesDetectorRulesDetailsConfigurationsValues struct {
	// +optional
	ListType *string `json:"listType,omitempty" tf:"list_type"`
	// +optional
	ManagedListType *string `json:"managedListType,omitempty" tf:"managed_list_type"`
	// +optional
	Value *string `json:"value,omitempty" tf:"value"`
}

type GuardTargetSpecTargetDetectorRecipesDetectorRulesDetailsConfigurations struct {
	// +optional
	ConfigKey *string `json:"configKey,omitempty" tf:"config_key"`
	// +optional
	DataType *string `json:"dataType,omitempty" tf:"data_type"`
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// +optional
	Value *string `json:"value,omitempty" tf:"value"`
	// +optional
	Values []GuardTargetSpecTargetDetectorRecipesDetectorRulesDetailsConfigurationsValues `json:"values,omitempty" tf:"values"`
}

type GuardTargetSpecTargetDetectorRecipesDetectorRulesDetails struct {
	// +optional
	ConditionGroups []GuardTargetSpecTargetDetectorRecipesDetectorRulesDetailsConditionGroups `json:"conditionGroups,omitempty" tf:"condition_groups"`
	// +optional
	Configurations []GuardTargetSpecTargetDetectorRecipesDetectorRulesDetailsConfigurations `json:"configurations,omitempty" tf:"configurations"`
	// +optional
	IsConfigurationAllowed *bool `json:"isConfigurationAllowed,omitempty" tf:"is_configuration_allowed"`
	// +optional
	IsEnabled *bool `json:"isEnabled,omitempty" tf:"is_enabled"`
	// +optional
	Labels []string `json:"labels,omitempty" tf:"labels"`
	// +optional
	RiskLevel *string `json:"riskLevel,omitempty" tf:"risk_level"`
}

type GuardTargetSpecTargetDetectorRecipesDetectorRules struct {
	// +optional
	Description *string                                                   `json:"description,omitempty" tf:"description"`
	Details     *GuardTargetSpecTargetDetectorRecipesDetectorRulesDetails `json:"details" tf:"details"`
	// +optional
	Detector       *string `json:"detector,omitempty" tf:"detector"`
	DetectorRuleID *string `json:"detectorRuleID" tf:"detector_rule_id"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	LifecycleDetails *string `json:"lifecycleDetails,omitempty" tf:"lifecycle_details"`
	// +optional
	ManagedListTypes []string `json:"managedListTypes,omitempty" tf:"managed_list_types"`
	// +optional
	Recommendation *string `json:"recommendation,omitempty" tf:"recommendation"`
	// +optional
	ResourceType *string `json:"resourceType,omitempty" tf:"resource_type"`
	// +optional
	ServiceType *string `json:"serviceType,omitempty" tf:"service_type"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	TimeUpdated *string `json:"timeUpdated,omitempty" tf:"time_updated"`
}

type GuardTargetSpecTargetDetectorRecipesEffectiveDetectorRulesDetailsConditionGroups struct {
	// +optional
	CompartmentID *string `json:"compartmentID,omitempty" tf:"compartment_id"`
	// +optional
	Condition *string `json:"condition,omitempty" tf:"condition"`
}

type GuardTargetSpecTargetDetectorRecipesEffectiveDetectorRulesDetailsConfigurationsValues struct {
	// +optional
	ListType *string `json:"listType,omitempty" tf:"list_type"`
	// +optional
	ManagedListType *string `json:"managedListType,omitempty" tf:"managed_list_type"`
	// +optional
	Value *string `json:"value,omitempty" tf:"value"`
}

type GuardTargetSpecTargetDetectorRecipesEffectiveDetectorRulesDetailsConfigurations struct {
	// +optional
	ConfigKey *string `json:"configKey,omitempty" tf:"config_key"`
	// +optional
	DataType *string `json:"dataType,omitempty" tf:"data_type"`
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// +optional
	Value *string `json:"value,omitempty" tf:"value"`
	// +optional
	Values []GuardTargetSpecTargetDetectorRecipesEffectiveDetectorRulesDetailsConfigurationsValues `json:"values,omitempty" tf:"values"`
}

type GuardTargetSpecTargetDetectorRecipesEffectiveDetectorRulesDetails struct {
	// +optional
	ConditionGroups []GuardTargetSpecTargetDetectorRecipesEffectiveDetectorRulesDetailsConditionGroups `json:"conditionGroups,omitempty" tf:"condition_groups"`
	// +optional
	Configurations []GuardTargetSpecTargetDetectorRecipesEffectiveDetectorRulesDetailsConfigurations `json:"configurations,omitempty" tf:"configurations"`
	// +optional
	IsConfigurationAllowed *bool `json:"isConfigurationAllowed,omitempty" tf:"is_configuration_allowed"`
	// +optional
	IsEnabled *bool `json:"isEnabled,omitempty" tf:"is_enabled"`
	// +optional
	Labels []string `json:"labels,omitempty" tf:"labels"`
	// +optional
	RiskLevel *string `json:"riskLevel,omitempty" tf:"risk_level"`
}

type GuardTargetSpecTargetDetectorRecipesEffectiveDetectorRules struct {
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	Details *GuardTargetSpecTargetDetectorRecipesEffectiveDetectorRulesDetails `json:"details,omitempty" tf:"details"`
	// +optional
	Detector *string `json:"detector,omitempty" tf:"detector"`
	// +optional
	DetectorRuleID *string `json:"detectorRuleID,omitempty" tf:"detector_rule_id"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	LifecycleDetails *string `json:"lifecycleDetails,omitempty" tf:"lifecycle_details"`
	// +optional
	ManagedListTypes []string `json:"managedListTypes,omitempty" tf:"managed_list_types"`
	// +optional
	Recommendation *string `json:"recommendation,omitempty" tf:"recommendation"`
	// +optional
	ResourceType *string `json:"resourceType,omitempty" tf:"resource_type"`
	// +optional
	ServiceType *string `json:"serviceType,omitempty" tf:"service_type"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	TimeUpdated *string `json:"timeUpdated,omitempty" tf:"time_updated"`
}

type GuardTargetSpecTargetDetectorRecipes struct {
	// +optional
	CompartmentID *string `json:"compartmentID,omitempty" tf:"compartment_id"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	Detector         *string `json:"detector,omitempty" tf:"detector"`
	DetectorRecipeID *string `json:"detectorRecipeID" tf:"detector_recipe_id"`
	// +optional
	DetectorRules []GuardTargetSpecTargetDetectorRecipesDetectorRules `json:"detectorRules,omitempty" tf:"detector_rules"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	EffectiveDetectorRules []GuardTargetSpecTargetDetectorRecipesEffectiveDetectorRules `json:"effectiveDetectorRules,omitempty" tf:"effective_detector_rules"`
	// +optional
	ID *string `json:"ID,omitempty" tf:"id"`
	// +optional
	Owner *string `json:"owner,omitempty" tf:"owner"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	TimeUpdated *string `json:"timeUpdated,omitempty" tf:"time_updated"`
}

type GuardTargetSpecTargetResponderRecipesEffectiveResponderRulesDetailsConfigurations struct {
	// +optional
	ConfigKey *string `json:"configKey,omitempty" tf:"config_key"`
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// +optional
	Value *string `json:"value,omitempty" tf:"value"`
}

type GuardTargetSpecTargetResponderRecipesEffectiveResponderRulesDetails struct {
	// +optional
	Condition *string `json:"condition,omitempty" tf:"condition"`
	// +optional
	Configurations []GuardTargetSpecTargetResponderRecipesEffectiveResponderRulesDetailsConfigurations `json:"configurations,omitempty" tf:"configurations"`
	// +optional
	IsEnabled *bool `json:"isEnabled,omitempty" tf:"is_enabled"`
	// +optional
	Mode *string `json:"mode,omitempty" tf:"mode"`
}

type GuardTargetSpecTargetResponderRecipesEffectiveResponderRules struct {
	// +optional
	CompartmentID *string `json:"compartmentID,omitempty" tf:"compartment_id"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	Details *GuardTargetSpecTargetResponderRecipesEffectiveResponderRulesDetails `json:"details,omitempty" tf:"details"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	LifecycleDetails *string `json:"lifecycleDetails,omitempty" tf:"lifecycle_details"`
	// +optional
	Policies []string `json:"policies,omitempty" tf:"policies"`
	// +optional
	ResponderRuleID *string `json:"responderRuleID,omitempty" tf:"responder_rule_id"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	SupportedModes []string `json:"supportedModes,omitempty" tf:"supported_modes"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	TimeUpdated *string `json:"timeUpdated,omitempty" tf:"time_updated"`
	// +optional
	Type *string `json:"type,omitempty" tf:"type"`
}

type GuardTargetSpecTargetResponderRecipesResponderRulesDetailsConfigurations struct {
	ConfigKey *string `json:"configKey" tf:"config_key"`
	Name      *string `json:"name" tf:"name"`
	Value     *string `json:"value" tf:"value"`
}

type GuardTargetSpecTargetResponderRecipesResponderRulesDetails struct {
	// +optional
	Condition *string `json:"condition,omitempty" tf:"condition"`
	// +optional
	Configurations []GuardTargetSpecTargetResponderRecipesResponderRulesDetailsConfigurations `json:"configurations,omitempty" tf:"configurations"`
	// +optional
	IsEnabled *bool `json:"isEnabled,omitempty" tf:"is_enabled"`
	// +optional
	Mode *string `json:"mode,omitempty" tf:"mode"`
}

type GuardTargetSpecTargetResponderRecipesResponderRules struct {
	// +optional
	CompartmentID *string `json:"compartmentID,omitempty" tf:"compartment_id"`
	// +optional
	Description *string                                                     `json:"description,omitempty" tf:"description"`
	Details     *GuardTargetSpecTargetResponderRecipesResponderRulesDetails `json:"details" tf:"details"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	LifecycleDetails *string `json:"lifecycleDetails,omitempty" tf:"lifecycle_details"`
	// +optional
	Policies        []string `json:"policies,omitempty" tf:"policies"`
	ResponderRuleID *string  `json:"responderRuleID" tf:"responder_rule_id"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	SupportedModes []string `json:"supportedModes,omitempty" tf:"supported_modes"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	TimeUpdated *string `json:"timeUpdated,omitempty" tf:"time_updated"`
	// +optional
	Type *string `json:"type,omitempty" tf:"type"`
}

type GuardTargetSpecTargetResponderRecipes struct {
	// +optional
	CompartmentID *string `json:"compartmentID,omitempty" tf:"compartment_id"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	EffectiveResponderRules []GuardTargetSpecTargetResponderRecipesEffectiveResponderRules `json:"effectiveResponderRules,omitempty" tf:"effective_responder_rules"`
	// +optional
	ID *string `json:"ID,omitempty" tf:"id"`
	// +optional
	Owner             *string `json:"owner,omitempty" tf:"owner"`
	ResponderRecipeID *string `json:"responderRecipeID" tf:"responder_recipe_id"`
	// +optional
	ResponderRules []GuardTargetSpecTargetResponderRecipesResponderRules `json:"responderRules,omitempty" tf:"responder_rules"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	TimeUpdated *string `json:"timeUpdated,omitempty" tf:"time_updated"`
}

type GuardTargetSpec struct {
	State *GuardTargetSpecResource `json:"state,omitempty" tf:"-"`

	Resource GuardTargetSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`
}

type GuardTargetSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	CompartmentID *string `json:"compartmentID" tf:"compartment_id"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	DisplayName *string `json:"displayName" tf:"display_name"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	InheritedByCompartments []string `json:"inheritedByCompartments,omitempty" tf:"inherited_by_compartments"`
	// +optional
	LifecyleDetails *string `json:"lifecyleDetails,omitempty" tf:"lifecyle_details"`
	// +optional
	RecipeCount *int64 `json:"recipeCount,omitempty" tf:"recipe_count"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	SystemTags map[string]string `json:"systemTags,omitempty" tf:"system_tags"`
	// +optional
	TargetDetectorRecipes []GuardTargetSpecTargetDetectorRecipes `json:"targetDetectorRecipes,omitempty" tf:"target_detector_recipes"`
	TargetResourceID      *string                                `json:"targetResourceID" tf:"target_resource_id"`
	TargetResourceType    *string                                `json:"targetResourceType" tf:"target_resource_type"`
	// +optional
	TargetResponderRecipes []GuardTargetSpecTargetResponderRecipes `json:"targetResponderRecipes,omitempty" tf:"target_responder_recipes"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	TimeUpdated *string `json:"timeUpdated,omitempty" tf:"time_updated"`
}

type GuardTargetStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// GuardTargetList is a list of GuardTargets
type GuardTargetList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of GuardTarget CRD objects
	Items []GuardTarget `json:"items,omitempty"`
}
