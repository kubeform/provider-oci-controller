/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type BootVolume struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              BootVolumeSpec   `json:"spec,omitempty"`
	Status            BootVolumeStatus `json:"status,omitempty"`
}

type BootVolumeSpecBootVolumeReplicas struct {
	AvailabilityDomain *string `json:"availabilityDomain" tf:"availability_domain"`
	// +optional
	BootVolumeReplicaID *string `json:"bootVolumeReplicaID,omitempty" tf:"boot_volume_replica_id"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
}

type BootVolumeSpecSourceDetails struct {
	ID   *string `json:"ID" tf:"id"`
	Type *string `json:"type" tf:"type"`
}

type BootVolumeSpec struct {
	State *BootVolumeSpecResource `json:"state,omitempty" tf:"-"`

	Resource BootVolumeSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`
}

type BootVolumeSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	AutoTunedVpusPerGb *string `json:"autoTunedVpusPerGb,omitempty" tf:"auto_tuned_vpus_per_gb"`
	AvailabilityDomain *string `json:"availabilityDomain" tf:"availability_domain"`
	// +optional
	// Deprecated
	BackupPolicyID *string `json:"backupPolicyID,omitempty" tf:"backup_policy_id"`
	// +optional
	BootVolumeReplicas []BootVolumeSpecBootVolumeReplicas `json:"bootVolumeReplicas,omitempty" tf:"boot_volume_replicas"`
	// +optional
	BootVolumeReplicasDeletion *bool   `json:"bootVolumeReplicasDeletion,omitempty" tf:"boot_volume_replicas_deletion"`
	CompartmentID              *string `json:"compartmentID" tf:"compartment_id"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	ImageID *string `json:"imageID,omitempty" tf:"image_id"`
	// +optional
	IsAutoTuneEnabled *bool `json:"isAutoTuneEnabled,omitempty" tf:"is_auto_tune_enabled"`
	// +optional
	IsHydrated *bool `json:"isHydrated,omitempty" tf:"is_hydrated"`
	// +optional
	KmsKeyID *string `json:"kmsKeyID,omitempty" tf:"kms_key_id"`
	// +optional
	SizeInGbs *string `json:"sizeInGbs,omitempty" tf:"size_in_gbs"`
	// +optional
	SizeInMbs     *string                      `json:"sizeInMbs,omitempty" tf:"size_in_mbs"`
	SourceDetails *BootVolumeSpecSourceDetails `json:"sourceDetails" tf:"source_details"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	SystemTags map[string]string `json:"systemTags,omitempty" tf:"system_tags"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	VolumeGroupID *string `json:"volumeGroupID,omitempty" tf:"volume_group_id"`
	// +optional
	VpusPerGb *string `json:"vpusPerGb,omitempty" tf:"vpus_per_gb"`
}

type BootVolumeStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// BootVolumeList is a list of BootVolumes
type BootVolumeList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of BootVolume CRD objects
	Items []BootVolume `json:"items,omitempty"`
}
