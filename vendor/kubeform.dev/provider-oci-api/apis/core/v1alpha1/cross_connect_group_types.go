/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type CrossConnectGroup struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              CrossConnectGroupSpec   `json:"spec,omitempty"`
	Status            CrossConnectGroupStatus `json:"status,omitempty"`
}

type CrossConnectGroupSpecMacsecPropertiesPrimaryKey struct {
	ConnectivityAssociationKeySecretID       *string `json:"connectivityAssociationKeySecretID" tf:"connectivity_association_key_secret_id"`
	ConnectivityAssociationKeySecretVersion  *string `json:"connectivityAssociationKeySecretVersion" tf:"connectivity_association_key_secret_version"`
	ConnectivityAssociationNameSecretID      *string `json:"connectivityAssociationNameSecretID" tf:"connectivity_association_name_secret_id"`
	ConnectivityAssociationNameSecretVersion *string `json:"connectivityAssociationNameSecretVersion" tf:"connectivity_association_name_secret_version"`
}

type CrossConnectGroupSpecMacsecProperties struct {
	// +optional
	EncryptionCipher *string `json:"encryptionCipher,omitempty" tf:"encryption_cipher"`
	// +optional
	PrimaryKey *CrossConnectGroupSpecMacsecPropertiesPrimaryKey `json:"primaryKey,omitempty" tf:"primary_key"`
	State      *string                                          `json:"state" tf:"state"`
}

type CrossConnectGroupSpec struct {
	State *CrossConnectGroupSpecResource `json:"state,omitempty" tf:"-"`

	Resource CrossConnectGroupSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type CrossConnectGroupSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	CompartmentID *string `json:"compartmentID" tf:"compartment_id"`
	// +optional
	CustomerReferenceName *string `json:"customerReferenceName,omitempty" tf:"customer_reference_name"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	MacsecProperties *CrossConnectGroupSpecMacsecProperties `json:"macsecProperties,omitempty" tf:"macsec_properties"`
	// +optional
	OciLogicalDeviceName *string `json:"ociLogicalDeviceName,omitempty" tf:"oci_logical_device_name"`
	// +optional
	OciPhysicalDeviceName *string `json:"ociPhysicalDeviceName,omitempty" tf:"oci_physical_device_name"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
}

type CrossConnectGroupStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// CrossConnectGroupList is a list of CrossConnectGroups
type CrossConnectGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of CrossConnectGroup CRD objects
	Items []CrossConnectGroup `json:"items,omitempty"`
}
