/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type DrgRouteDistributionStatement struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DrgRouteDistributionStatementSpec   `json:"spec,omitempty"`
	Status            DrgRouteDistributionStatementStatus `json:"status,omitempty"`
}

type DrgRouteDistributionStatementSpecMatchCriteria struct {
	// +optional
	AttachmentType *string `json:"attachmentType,omitempty" tf:"attachment_type"`
	// +optional
	DrgAttachmentID *string `json:"drgAttachmentID,omitempty" tf:"drg_attachment_id"`
	// +optional
	MatchType *string `json:"matchType,omitempty" tf:"match_type"`
}

type DrgRouteDistributionStatementSpec struct {
	State *DrgRouteDistributionStatementSpecResource `json:"state,omitempty" tf:"-"`

	Resource DrgRouteDistributionStatementSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type DrgRouteDistributionStatementSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	Action                 *string                                         `json:"action" tf:"action"`
	DrgRouteDistributionID *string                                         `json:"drgRouteDistributionID" tf:"drg_route_distribution_id"`
	MatchCriteria          *DrgRouteDistributionStatementSpecMatchCriteria `json:"matchCriteria" tf:"match_criteria"`
	Priority               *int64                                          `json:"priority" tf:"priority"`
}

type DrgRouteDistributionStatementStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// DrgRouteDistributionStatementList is a list of DrgRouteDistributionStatements
type DrgRouteDistributionStatementList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of DrgRouteDistributionStatement CRD objects
	Items []DrgRouteDistributionStatement `json:"items,omitempty"`
}
