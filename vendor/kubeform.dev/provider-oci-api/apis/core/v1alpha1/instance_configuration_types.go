/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type InstanceConfiguration struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              InstanceConfigurationSpec   `json:"spec,omitempty"`
	Status            InstanceConfigurationStatus `json:"status,omitempty"`
}

type InstanceConfigurationSpecInstanceDetailsBlockVolumesAttachDetails struct {
	// +optional
	Device *string `json:"device,omitempty" tf:"device"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	IsPvEncryptionInTransitEnabled *bool `json:"isPvEncryptionInTransitEnabled,omitempty" tf:"is_pv_encryption_in_transit_enabled"`
	// +optional
	IsReadOnly *bool `json:"isReadOnly,omitempty" tf:"is_read_only"`
	// +optional
	IsShareable *bool   `json:"isShareable,omitempty" tf:"is_shareable"`
	Type        *string `json:"type" tf:"type"`
	// +optional
	UseCHAP *bool `json:"useCHAP,omitempty" tf:"use_chap"`
}

type InstanceConfigurationSpecInstanceDetailsBlockVolumesCreateDetailsSourceDetails struct {
	// +optional
	ID   *string `json:"ID,omitempty" tf:"id"`
	Type *string `json:"type" tf:"type"`
}

type InstanceConfigurationSpecInstanceDetailsBlockVolumesCreateDetails struct {
	// +optional
	AvailabilityDomain *string `json:"availabilityDomain,omitempty" tf:"availability_domain"`
	// +optional
	BackupPolicyID *string `json:"backupPolicyID,omitempty" tf:"backup_policy_id"`
	// +optional
	CompartmentID *string `json:"compartmentID,omitempty" tf:"compartment_id"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	KmsKeyID *string `json:"kmsKeyID,omitempty" tf:"kms_key_id"`
	// +optional
	SizeInGbs *string `json:"sizeInGbs,omitempty" tf:"size_in_gbs"`
	// +optional
	SourceDetails *InstanceConfigurationSpecInstanceDetailsBlockVolumesCreateDetailsSourceDetails `json:"sourceDetails,omitempty" tf:"source_details"`
	// +optional
	VpusPerGb *string `json:"vpusPerGb,omitempty" tf:"vpus_per_gb"`
}

type InstanceConfigurationSpecInstanceDetailsBlockVolumes struct {
	// +optional
	AttachDetails *InstanceConfigurationSpecInstanceDetailsBlockVolumesAttachDetails `json:"attachDetails,omitempty" tf:"attach_details"`
	// +optional
	CreateDetails *InstanceConfigurationSpecInstanceDetailsBlockVolumesCreateDetails `json:"createDetails,omitempty" tf:"create_details"`
	// +optional
	VolumeID *string `json:"volumeID,omitempty" tf:"volume_id"`
}

type InstanceConfigurationSpecInstanceDetailsLaunchDetailsAgentConfigPluginsConfig struct {
	DesiredState *string `json:"desiredState" tf:"desired_state"`
	Name         *string `json:"name" tf:"name"`
}

type InstanceConfigurationSpecInstanceDetailsLaunchDetailsAgentConfig struct {
	// +optional
	AreAllPluginsDisabled *bool `json:"areAllPluginsDisabled,omitempty" tf:"are_all_plugins_disabled"`
	// +optional
	IsManagementDisabled *bool `json:"isManagementDisabled,omitempty" tf:"is_management_disabled"`
	// +optional
	IsMonitoringDisabled *bool `json:"isMonitoringDisabled,omitempty" tf:"is_monitoring_disabled"`
	// +optional
	PluginsConfig []InstanceConfigurationSpecInstanceDetailsLaunchDetailsAgentConfigPluginsConfig `json:"pluginsConfig,omitempty" tf:"plugins_config"`
}

type InstanceConfigurationSpecInstanceDetailsLaunchDetailsAvailabilityConfig struct {
	// +optional
	RecoveryAction *string `json:"recoveryAction,omitempty" tf:"recovery_action"`
}

type InstanceConfigurationSpecInstanceDetailsLaunchDetailsCreateVnicDetails struct {
	// +optional
	AssignPrivateDNSRecord *bool `json:"assignPrivateDNSRecord,omitempty" tf:"assign_private_dns_record"`
	// +optional
	AssignPublicIP *bool `json:"assignPublicIP,omitempty" tf:"assign_public_ip"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	HostnameLabel *string `json:"hostnameLabel,omitempty" tf:"hostname_label"`
	// +optional
	NsgIDS []string `json:"nsgIDS,omitempty" tf:"nsg_ids"`
	// +optional
	PrivateIP *string `json:"privateIP,omitempty" tf:"private_ip"`
	// +optional
	SkipSourceDestCheck *bool `json:"skipSourceDestCheck,omitempty" tf:"skip_source_dest_check"`
	// +optional
	SubnetID *string `json:"subnetID,omitempty" tf:"subnet_id"`
}

type InstanceConfigurationSpecInstanceDetailsLaunchDetailsInstanceOptions struct {
	// +optional
	AreLegacyImdsEndpointsDisabled *bool `json:"areLegacyImdsEndpointsDisabled,omitempty" tf:"are_legacy_imds_endpoints_disabled"`
}

type InstanceConfigurationSpecInstanceDetailsLaunchDetailsLaunchOptions struct {
	// +optional
	BootVolumeType *string `json:"bootVolumeType,omitempty" tf:"boot_volume_type"`
	// +optional
	Firmware *string `json:"firmware,omitempty" tf:"firmware"`
	// +optional
	IsConsistentVolumeNamingEnabled *bool `json:"isConsistentVolumeNamingEnabled,omitempty" tf:"is_consistent_volume_naming_enabled"`
	// +optional
	IsPvEncryptionInTransitEnabled *bool `json:"isPvEncryptionInTransitEnabled,omitempty" tf:"is_pv_encryption_in_transit_enabled"`
	// +optional
	NetworkType *string `json:"networkType,omitempty" tf:"network_type"`
	// +optional
	RemoteDataVolumeType *string `json:"remoteDataVolumeType,omitempty" tf:"remote_data_volume_type"`
}

type InstanceConfigurationSpecInstanceDetailsLaunchDetailsPlatformConfig struct {
	// +optional
	NumaNodesPerSocket *string `json:"numaNodesPerSocket,omitempty" tf:"numa_nodes_per_socket"`
	Type               *string `json:"type" tf:"type"`
}

type InstanceConfigurationSpecInstanceDetailsLaunchDetailsPreemptibleInstanceConfigPreemptionAction struct {
	// +optional
	PreserveBootVolume *bool   `json:"preserveBootVolume,omitempty" tf:"preserve_boot_volume"`
	Type               *string `json:"type" tf:"type"`
}

type InstanceConfigurationSpecInstanceDetailsLaunchDetailsPreemptibleInstanceConfig struct {
	PreemptionAction *InstanceConfigurationSpecInstanceDetailsLaunchDetailsPreemptibleInstanceConfigPreemptionAction `json:"preemptionAction" tf:"preemption_action"`
}

type InstanceConfigurationSpecInstanceDetailsLaunchDetailsShapeConfig struct {
	// +optional
	BaselineOcpuUtilization *string `json:"baselineOcpuUtilization,omitempty" tf:"baseline_ocpu_utilization"`
	// +optional
	MemoryInGbs *float64 `json:"memoryInGbs,omitempty" tf:"memory_in_gbs"`
	// +optional
	Ocpus *float64 `json:"ocpus,omitempty" tf:"ocpus"`
}

type InstanceConfigurationSpecInstanceDetailsLaunchDetailsSourceDetails struct {
	// +optional
	BootVolumeID *string `json:"bootVolumeID,omitempty" tf:"boot_volume_id"`
	// +optional
	BootVolumeSizeInGbs *string `json:"bootVolumeSizeInGbs,omitempty" tf:"boot_volume_size_in_gbs"`
	// +optional
	ImageID    *string `json:"imageID,omitempty" tf:"image_id"`
	SourceType *string `json:"sourceType" tf:"source_type"`
}

type InstanceConfigurationSpecInstanceDetailsLaunchDetails struct {
	// +optional
	AgentConfig *InstanceConfigurationSpecInstanceDetailsLaunchDetailsAgentConfig `json:"agentConfig,omitempty" tf:"agent_config"`
	// +optional
	AvailabilityConfig *InstanceConfigurationSpecInstanceDetailsLaunchDetailsAvailabilityConfig `json:"availabilityConfig,omitempty" tf:"availability_config"`
	// +optional
	AvailabilityDomain *string `json:"availabilityDomain,omitempty" tf:"availability_domain"`
	// +optional
	CapacityReservationID *string `json:"capacityReservationID,omitempty" tf:"capacity_reservation_id"`
	// +optional
	CompartmentID *string `json:"compartmentID,omitempty" tf:"compartment_id"`
	// +optional
	CreateVnicDetails *InstanceConfigurationSpecInstanceDetailsLaunchDetailsCreateVnicDetails `json:"createVnicDetails,omitempty" tf:"create_vnic_details"`
	// +optional
	DedicatedVmHostID *string `json:"dedicatedVmHostID,omitempty" tf:"dedicated_vm_host_id"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	ExtendedMetadata map[string]string `json:"extendedMetadata,omitempty" tf:"extended_metadata"`
	// +optional
	FaultDomain *string `json:"faultDomain,omitempty" tf:"fault_domain"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	InstanceOptions *InstanceConfigurationSpecInstanceDetailsLaunchDetailsInstanceOptions `json:"instanceOptions,omitempty" tf:"instance_options"`
	// +optional
	IpxeScript *string `json:"ipxeScript,omitempty" tf:"ipxe_script"`
	// +optional
	IsPvEncryptionInTransitEnabled *bool `json:"isPvEncryptionInTransitEnabled,omitempty" tf:"is_pv_encryption_in_transit_enabled"`
	// +optional
	LaunchMode *string `json:"launchMode,omitempty" tf:"launch_mode"`
	// +optional
	LaunchOptions *InstanceConfigurationSpecInstanceDetailsLaunchDetailsLaunchOptions `json:"launchOptions,omitempty" tf:"launch_options"`
	// +optional
	Metadata map[string]string `json:"metadata,omitempty" tf:"metadata"`
	// +optional
	PlatformConfig *InstanceConfigurationSpecInstanceDetailsLaunchDetailsPlatformConfig `json:"platformConfig,omitempty" tf:"platform_config"`
	// +optional
	PreemptibleInstanceConfig *InstanceConfigurationSpecInstanceDetailsLaunchDetailsPreemptibleInstanceConfig `json:"preemptibleInstanceConfig,omitempty" tf:"preemptible_instance_config"`
	// +optional
	PreferredMaintenanceAction *string `json:"preferredMaintenanceAction,omitempty" tf:"preferred_maintenance_action"`
	// +optional
	Shape *string `json:"shape,omitempty" tf:"shape"`
	// +optional
	ShapeConfig *InstanceConfigurationSpecInstanceDetailsLaunchDetailsShapeConfig `json:"shapeConfig,omitempty" tf:"shape_config"`
	// +optional
	SourceDetails *InstanceConfigurationSpecInstanceDetailsLaunchDetailsSourceDetails `json:"sourceDetails,omitempty" tf:"source_details"`
}

type InstanceConfigurationSpecInstanceDetailsSecondaryVnicsCreateVnicDetails struct {
	// +optional
	AssignPrivateDNSRecord *bool `json:"assignPrivateDNSRecord,omitempty" tf:"assign_private_dns_record"`
	// +optional
	AssignPublicIP *bool `json:"assignPublicIP,omitempty" tf:"assign_public_ip"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	HostnameLabel *string `json:"hostnameLabel,omitempty" tf:"hostname_label"`
	// +optional
	NsgIDS []string `json:"nsgIDS,omitempty" tf:"nsg_ids"`
	// +optional
	PrivateIP *string `json:"privateIP,omitempty" tf:"private_ip"`
	// +optional
	SkipSourceDestCheck *bool `json:"skipSourceDestCheck,omitempty" tf:"skip_source_dest_check"`
	// +optional
	SubnetID *string `json:"subnetID,omitempty" tf:"subnet_id"`
}

type InstanceConfigurationSpecInstanceDetailsSecondaryVnics struct {
	// +optional
	CreateVnicDetails *InstanceConfigurationSpecInstanceDetailsSecondaryVnicsCreateVnicDetails `json:"createVnicDetails,omitempty" tf:"create_vnic_details"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	NicIndex *int64 `json:"nicIndex,omitempty" tf:"nic_index"`
}

type InstanceConfigurationSpecInstanceDetails struct {
	// +optional
	BlockVolumes []InstanceConfigurationSpecInstanceDetailsBlockVolumes `json:"blockVolumes,omitempty" tf:"block_volumes"`
	InstanceType *string                                                `json:"instanceType" tf:"instance_type"`
	// +optional
	LaunchDetails *InstanceConfigurationSpecInstanceDetailsLaunchDetails `json:"launchDetails,omitempty" tf:"launch_details"`
	// +optional
	SecondaryVnics []InstanceConfigurationSpecInstanceDetailsSecondaryVnics `json:"secondaryVnics,omitempty" tf:"secondary_vnics"`
}

type InstanceConfigurationSpec struct {
	State *InstanceConfigurationSpecResource `json:"state,omitempty" tf:"-"`

	Resource InstanceConfigurationSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`
}

type InstanceConfigurationSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	CompartmentID *string `json:"compartmentID" tf:"compartment_id"`
	// +optional
	DeferredFields []string `json:"deferredFields,omitempty" tf:"deferred_fields"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	InstanceDetails *InstanceConfigurationSpecInstanceDetails `json:"instanceDetails,omitempty" tf:"instance_details"`
	// +optional
	InstanceID *string `json:"instanceID,omitempty" tf:"instance_id"`
	// +optional
	Source *string `json:"source,omitempty" tf:"source"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
}

type InstanceConfigurationStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// InstanceConfigurationList is a list of InstanceConfigurations
type InstanceConfigurationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of InstanceConfiguration CRD objects
	Items []InstanceConfiguration `json:"items,omitempty"`
}
