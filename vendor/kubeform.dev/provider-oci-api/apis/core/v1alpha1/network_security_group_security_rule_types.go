/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type NetworkSecurityGroupSecurityRule struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              NetworkSecurityGroupSecurityRuleSpec   `json:"spec,omitempty"`
	Status            NetworkSecurityGroupSecurityRuleStatus `json:"status,omitempty"`
}

type NetworkSecurityGroupSecurityRuleSpecIcmpOptions struct {
	// +optional
	Code *int64 `json:"code,omitempty" tf:"code"`
	Type *int64 `json:"type" tf:"type"`
}

type NetworkSecurityGroupSecurityRuleSpecTcpOptionsDestinationPortRange struct {
	Max *int64 `json:"max" tf:"max"`
	Min *int64 `json:"min" tf:"min"`
}

type NetworkSecurityGroupSecurityRuleSpecTcpOptionsSourcePortRange struct {
	Max *int64 `json:"max" tf:"max"`
	Min *int64 `json:"min" tf:"min"`
}

type NetworkSecurityGroupSecurityRuleSpecTcpOptions struct {
	// +optional
	DestinationPortRange *NetworkSecurityGroupSecurityRuleSpecTcpOptionsDestinationPortRange `json:"destinationPortRange,omitempty" tf:"destination_port_range"`
	// +optional
	SourcePortRange *NetworkSecurityGroupSecurityRuleSpecTcpOptionsSourcePortRange `json:"sourcePortRange,omitempty" tf:"source_port_range"`
}

type NetworkSecurityGroupSecurityRuleSpecUdpOptionsDestinationPortRange struct {
	Max *int64 `json:"max" tf:"max"`
	Min *int64 `json:"min" tf:"min"`
}

type NetworkSecurityGroupSecurityRuleSpecUdpOptionsSourcePortRange struct {
	Max *int64 `json:"max" tf:"max"`
	Min *int64 `json:"min" tf:"min"`
}

type NetworkSecurityGroupSecurityRuleSpecUdpOptions struct {
	// +optional
	DestinationPortRange *NetworkSecurityGroupSecurityRuleSpecUdpOptionsDestinationPortRange `json:"destinationPortRange,omitempty" tf:"destination_port_range"`
	// +optional
	SourcePortRange *NetworkSecurityGroupSecurityRuleSpecUdpOptionsSourcePortRange `json:"sourcePortRange,omitempty" tf:"source_port_range"`
}

type NetworkSecurityGroupSecurityRuleSpec struct {
	State *NetworkSecurityGroupSecurityRuleSpecResource `json:"state,omitempty" tf:"-"`

	Resource NetworkSecurityGroupSecurityRuleSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type NetworkSecurityGroupSecurityRuleSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	Destination *string `json:"destination,omitempty" tf:"destination"`
	// +optional
	DestinationType *string `json:"destinationType,omitempty" tf:"destination_type"`
	Direction       *string `json:"direction" tf:"direction"`
	// +optional
	IcmpOptions *NetworkSecurityGroupSecurityRuleSpecIcmpOptions `json:"icmpOptions,omitempty" tf:"icmp_options"`
	// +optional
	IsValid                *bool   `json:"isValid,omitempty" tf:"is_valid"`
	NetworkSecurityGroupID *string `json:"networkSecurityGroupID" tf:"network_security_group_id"`
	Protocol               *string `json:"protocol" tf:"protocol"`
	// +optional
	Source *string `json:"source,omitempty" tf:"source"`
	// +optional
	SourceType *string `json:"sourceType,omitempty" tf:"source_type"`
	// +optional
	Stateless *bool `json:"stateless,omitempty" tf:"stateless"`
	// +optional
	TcpOptions *NetworkSecurityGroupSecurityRuleSpecTcpOptions `json:"tcpOptions,omitempty" tf:"tcp_options"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	UdpOptions *NetworkSecurityGroupSecurityRuleSpecUdpOptions `json:"udpOptions,omitempty" tf:"udp_options"`
}

type NetworkSecurityGroupSecurityRuleStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// NetworkSecurityGroupSecurityRuleList is a list of NetworkSecurityGroupSecurityRules
type NetworkSecurityGroupSecurityRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of NetworkSecurityGroupSecurityRule CRD objects
	Items []NetworkSecurityGroupSecurityRule `json:"items,omitempty"`
}
