/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Subnet struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SubnetSpec   `json:"spec,omitempty"`
	Status            SubnetStatus `json:"status,omitempty"`
}

type SubnetSpec struct {
	State *SubnetSpecResource `json:"state,omitempty" tf:"-"`

	Resource SubnetSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type SubnetSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	AvailabilityDomain *string `json:"availabilityDomain,omitempty" tf:"availability_domain"`
	CidrBlock          *string `json:"cidrBlock" tf:"cidr_block"`
	CompartmentID      *string `json:"compartmentID" tf:"compartment_id"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	// +optional
	DhcpOptionsID *string `json:"dhcpOptionsID,omitempty" tf:"dhcp_options_id"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	DnsLabel *string `json:"dnsLabel,omitempty" tf:"dns_label"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	Ipv6cidrBlock *string `json:"ipv6cidrBlock,omitempty" tf:"ipv6cidr_block"`
	// +optional
	Ipv6virtualRouterIP *string `json:"ipv6virtualRouterIP,omitempty" tf:"ipv6virtual_router_ip"`
	// +optional
	ProhibitInternetIngress *bool `json:"prohibitInternetIngress,omitempty" tf:"prohibit_internet_ingress"`
	// +optional
	ProhibitPublicIPOnVnic *bool `json:"prohibitPublicIPOnVnic,omitempty" tf:"prohibit_public_ip_on_vnic"`
	// +optional
	RouteTableID *string `json:"routeTableID,omitempty" tf:"route_table_id"`
	// +optional
	// +kubebuilder:validation:MaxItems=5
	SecurityListIDS []string `json:"securityListIDS,omitempty" tf:"security_list_ids"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	SubnetDomainName *string `json:"subnetDomainName,omitempty" tf:"subnet_domain_name"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	VcnID       *string `json:"vcnID" tf:"vcn_id"`
	// +optional
	VirtualRouterIP *string `json:"virtualRouterIP,omitempty" tf:"virtual_router_ip"`
	// +optional
	VirtualRouterMAC *string `json:"virtualRouterMAC,omitempty" tf:"virtual_router_mac"`
}

type SubnetStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// SubnetList is a list of Subnets
type SubnetList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Subnet CRD objects
	Items []Subnet `json:"items,omitempty"`
}
