/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type SafeUserAssessment struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SafeUserAssessmentSpec   `json:"spec,omitempty"`
	Status            SafeUserAssessmentStatus `json:"status,omitempty"`
}

type SafeUserAssessmentSpecIgnoredTargets struct {
	// +optional
	LifecycleState *string `json:"lifecycleState,omitempty" tf:"lifecycle_state"`
	// +optional
	TargetID *string `json:"targetID,omitempty" tf:"target_id"`
	// +optional
	UserAssessmentID *string `json:"userAssessmentID,omitempty" tf:"user_assessment_id"`
}

type SafeUserAssessmentSpec struct {
	State *SafeUserAssessmentSpecResource `json:"state,omitempty" tf:"-"`

	Resource SafeUserAssessmentSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type SafeUserAssessmentSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	CompartmentID *string `json:"compartmentID" tf:"compartment_id"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	IgnoredAssessmentIDS []string `json:"ignoredAssessmentIDS,omitempty" tf:"ignored_assessment_ids"`
	// +optional
	IgnoredTargets []SafeUserAssessmentSpecIgnoredTargets `json:"ignoredTargets,omitempty" tf:"ignored_targets"`
	// +optional
	IsBaseline *bool `json:"isBaseline,omitempty" tf:"is_baseline"`
	// +optional
	IsDeviatedFromBaseline *bool `json:"isDeviatedFromBaseline,omitempty" tf:"is_deviated_from_baseline"`
	// +optional
	LastComparedBaselineID *string `json:"lastComparedBaselineID,omitempty" tf:"last_compared_baseline_id"`
	// +optional
	LifecycleDetails *string `json:"lifecycleDetails,omitempty" tf:"lifecycle_details"`
	// +optional
	Schedule *string `json:"schedule,omitempty" tf:"schedule"`
	// +optional
	ScheduleAssessmentID *string `json:"scheduleAssessmentID,omitempty" tf:"schedule_assessment_id"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	Statistics *string `json:"statistics,omitempty" tf:"statistics"`
	// +optional
	SystemTags map[string]string `json:"systemTags,omitempty" tf:"system_tags"`
	TargetID   *string           `json:"targetID" tf:"target_id"`
	// +optional
	TargetIDS []string `json:"targetIDS,omitempty" tf:"target_ids"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	TimeUpdated *string `json:"timeUpdated,omitempty" tf:"time_updated"`
	// +optional
	TriggeredBy *string `json:"triggeredBy,omitempty" tf:"triggered_by"`
	// +optional
	Type *string `json:"type,omitempty" tf:"type"`
}

type SafeUserAssessmentStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// SafeUserAssessmentList is a list of SafeUserAssessments
type SafeUserAssessmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of SafeUserAssessment CRD objects
	Items []SafeUserAssessment `json:"items,omitempty"`
}
