/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type DbHome struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DbHomeSpec   `json:"spec,omitempty"`
	Status            DbHomeStatus `json:"status,omitempty"`
}

type DbHomeSpecDatabaseConnectionStrings struct {
	// +optional
	AllConnectionStrings map[string]string `json:"allConnectionStrings,omitempty" tf:"all_connection_strings"`
	// +optional
	CdbDefault *string `json:"cdbDefault,omitempty" tf:"cdb_default"`
	// +optional
	CdbIPDefault *string `json:"cdbIPDefault,omitempty" tf:"cdb_ip_default"`
}

type DbHomeSpecDatabaseDbBackupConfigBackupDestinationDetails struct {
	// +optional
	ID *string `json:"ID,omitempty" tf:"id"`
	// +optional
	Type *string `json:"type,omitempty" tf:"type"`
}

type DbHomeSpecDatabaseDbBackupConfig struct {
	// +optional
	AutoBackupEnabled *bool `json:"autoBackupEnabled,omitempty" tf:"auto_backup_enabled"`
	// +optional
	AutoBackupWindow *string `json:"autoBackupWindow,omitempty" tf:"auto_backup_window"`
	// +optional
	BackupDestinationDetails []DbHomeSpecDatabaseDbBackupConfigBackupDestinationDetails `json:"backupDestinationDetails,omitempty" tf:"backup_destination_details"`
	// +optional
	RecoveryWindowInDays *int64 `json:"recoveryWindowInDays,omitempty" tf:"recovery_window_in_days"`
}

type DbHomeSpecDatabase struct {
	AdminPassword *string `json:"-" sensitive:"true" tf:"admin_password"`
	// +optional
	BackupID *string `json:"backupID,omitempty" tf:"backup_id"`
	// +optional
	BackupTdePassword *string `json:"-" sensitive:"true" tf:"backup_tde_password"`
	// +optional
	CharacterSet *string `json:"characterSet,omitempty" tf:"character_set"`
	// +optional
	ConnectionStrings []DbHomeSpecDatabaseConnectionStrings `json:"connectionStrings,omitempty" tf:"connection_strings"`
	// +optional
	DatabaseID *string `json:"databaseID,omitempty" tf:"database_id"`
	// +optional
	DatabaseSoftwareImageID *string `json:"databaseSoftwareImageID,omitempty" tf:"database_software_image_id"`
	// +optional
	DbBackupConfig *DbHomeSpecDatabaseDbBackupConfig `json:"dbBackupConfig,omitempty" tf:"db_backup_config"`
	// +optional
	DbName *string `json:"dbName,omitempty" tf:"db_name"`
	// +optional
	DbUniqueName *string `json:"dbUniqueName,omitempty" tf:"db_unique_name"`
	// +optional
	DbWorkload *string `json:"dbWorkload,omitempty" tf:"db_workload"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	ID *string `json:"ID,omitempty" tf:"id"`
	// +optional
	LifecycleDetails *string `json:"lifecycleDetails,omitempty" tf:"lifecycle_details"`
	// +optional
	NcharacterSet *string `json:"ncharacterSet,omitempty" tf:"ncharacter_set"`
	// +optional
	OneOffPatches []string `json:"oneOffPatches,omitempty" tf:"one_off_patches"`
	// +optional
	PdbName *string `json:"pdbName,omitempty" tf:"pdb_name"`
	// +optional
	SidPrefix *string `json:"sidPrefix,omitempty" tf:"sid_prefix"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	TdeWalletPassword *string `json:"-" sensitive:"true" tf:"tde_wallet_password"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	TimeStampForPointInTimeRecovery *string `json:"timeStampForPointInTimeRecovery,omitempty" tf:"time_stamp_for_point_in_time_recovery"`
}

type DbHomeSpec struct {
	State *DbHomeSpecResource `json:"state,omitempty" tf:"-"`

	Resource DbHomeSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type DbHomeSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	CompartmentID *string             `json:"compartmentID,omitempty" tf:"compartment_id"`
	Database      *DbHomeSpecDatabase `json:"database" tf:"database"`
	// +optional
	DatabaseSoftwareImageID *string `json:"databaseSoftwareImageID,omitempty" tf:"database_software_image_id"`
	// +optional
	DbHomeLocation *string `json:"dbHomeLocation,omitempty" tf:"db_home_location"`
	// +optional
	DbSystemID *string `json:"dbSystemID,omitempty" tf:"db_system_id"`
	// +optional
	DbVersion *string `json:"dbVersion,omitempty" tf:"db_version"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	IsDesupportedVersion *bool `json:"isDesupportedVersion,omitempty" tf:"is_desupported_version"`
	// +optional
	KmsKeyID *string `json:"kmsKeyID,omitempty" tf:"kms_key_id"`
	// +optional
	KmsKeyVersionID *string `json:"kmsKeyVersionID,omitempty" tf:"kms_key_version_id"`
	// +optional
	LastPatchHistoryEntryID *string `json:"lastPatchHistoryEntryID,omitempty" tf:"last_patch_history_entry_id"`
	// +optional
	LifecycleDetails *string `json:"lifecycleDetails,omitempty" tf:"lifecycle_details"`
	// +optional
	Source *string `json:"source,omitempty" tf:"source"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	VmClusterID *string `json:"vmClusterID,omitempty" tf:"vm_cluster_id"`
}

type DbHomeStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// DbHomeList is a list of DbHomes
type DbHomeList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of DbHome CRD objects
	Items []DbHome `json:"items,omitempty"`
}
