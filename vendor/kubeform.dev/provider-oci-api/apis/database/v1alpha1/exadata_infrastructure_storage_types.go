/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ExadataInfrastructureStorage struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ExadataInfrastructureStorageSpec   `json:"spec,omitempty"`
	Status            ExadataInfrastructureStorageStatus `json:"status,omitempty"`
}

type ExadataInfrastructureStorageSpecContacts struct {
	Email *string `json:"email" tf:"email"`
	// +optional
	IsContactMosValidated *bool   `json:"isContactMosValidated,omitempty" tf:"is_contact_mos_validated"`
	IsPrimary             *bool   `json:"isPrimary" tf:"is_primary"`
	Name                  *string `json:"name" tf:"name"`
	// +optional
	PhoneNumber *string `json:"phoneNumber,omitempty" tf:"phone_number"`
}

type ExadataInfrastructureStorageSpecMaintenanceWindowDaysOfWeek struct {
	Name *string `json:"name" tf:"name"`
}

type ExadataInfrastructureStorageSpecMaintenanceWindowMonths struct {
	Name *string `json:"name" tf:"name"`
}

type ExadataInfrastructureStorageSpecMaintenanceWindow struct {
	// +optional
	DaysOfWeek []ExadataInfrastructureStorageSpecMaintenanceWindowDaysOfWeek `json:"daysOfWeek,omitempty" tf:"days_of_week"`
	// +optional
	// +kubebuilder:validation:MaxItems=20
	HoursOfDay []int64 `json:"hoursOfDay,omitempty" tf:"hours_of_day"`
	// +optional
	LeadTimeInWeeks *int64 `json:"leadTimeInWeeks,omitempty" tf:"lead_time_in_weeks"`
	// +optional
	Months     []ExadataInfrastructureStorageSpecMaintenanceWindowMonths `json:"months,omitempty" tf:"months"`
	Preference *string                                                   `json:"preference" tf:"preference"`
	// +optional
	// +kubebuilder:validation:MaxItems=4
	// +kubebuilder:validation:MinItems=1
	WeeksOfMonth []int64 `json:"weeksOfMonth,omitempty" tf:"weeks_of_month"`
}

type ExadataInfrastructureStorageSpec struct {
	State *ExadataInfrastructureStorageSpecResource `json:"state,omitempty" tf:"-"`

	Resource ExadataInfrastructureStorageSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`
}

type ExadataInfrastructureStorageSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	ActivatedStorageCount *int64 `json:"activatedStorageCount,omitempty" tf:"activated_storage_count"`
	// +optional
	ActivationFile *string `json:"activationFile,omitempty" tf:"activation_file"`
	// +optional
	AdditionalStorageCount   *int64  `json:"additionalStorageCount,omitempty" tf:"additional_storage_count"`
	AdminNetworkCIDR         *string `json:"adminNetworkCIDR" tf:"admin_network_cidr"`
	CloudControlPlaneServer1 *string `json:"cloudControlPlaneServer1" tf:"cloud_control_plane_server1"`
	CloudControlPlaneServer2 *string `json:"cloudControlPlaneServer2" tf:"cloud_control_plane_server2"`
	CompartmentID            *string `json:"compartmentID" tf:"compartment_id"`
	// +optional
	ComputeCount *int64 `json:"computeCount,omitempty" tf:"compute_count"`
	// +optional
	Contacts []ExadataInfrastructureStorageSpecContacts `json:"contacts,omitempty" tf:"contacts"`
	// +optional
	CorporateProxy *string `json:"corporateProxy,omitempty" tf:"corporate_proxy"`
	// +optional
	CpusEnabled *int64 `json:"cpusEnabled,omitempty" tf:"cpus_enabled"`
	// +optional
	CsiNumber *string `json:"csiNumber,omitempty" tf:"csi_number"`
	// +optional
	DataStorageSizeInTbs *float64 `json:"dataStorageSizeInTbs,omitempty" tf:"data_storage_size_in_tbs"`
	// +optional
	DbNodeStorageSizeInGbs *int64 `json:"dbNodeStorageSizeInGbs,omitempty" tf:"db_node_storage_size_in_gbs"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	DisplayName *string           `json:"displayName" tf:"display_name"`
	DnsServer   []string          `json:"dnsServer" tf:"dns_server"`
	// +optional
	ExadataInfrastructureID *string `json:"exadataInfrastructureID,omitempty" tf:"exadata_infrastructure_id"`
	// +optional
	FreeformTags          map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	Gateway               *string           `json:"gateway" tf:"gateway"`
	InfiniBandNetworkCIDR *string           `json:"infiniBandNetworkCIDR" tf:"infini_band_network_cidr"`
	// +optional
	LifecycleDetails *string `json:"lifecycleDetails,omitempty" tf:"lifecycle_details"`
	// +optional
	MaintenanceSloStatus *string `json:"maintenanceSloStatus,omitempty" tf:"maintenance_slo_status"`
	// +optional
	MaintenanceWindow *ExadataInfrastructureStorageSpecMaintenanceWindow `json:"maintenanceWindow,omitempty" tf:"maintenance_window"`
	// +optional
	MaxCPUCount *int64 `json:"maxCPUCount,omitempty" tf:"max_cpu_count"`
	// +optional
	MaxDataStorageInTbs *float64 `json:"maxDataStorageInTbs,omitempty" tf:"max_data_storage_in_tbs"`
	// +optional
	MaxDbNodeStorageInGbs *int64 `json:"maxDbNodeStorageInGbs,omitempty" tf:"max_db_node_storage_in_gbs"`
	// +optional
	MaxMemoryInGbs *int64 `json:"maxMemoryInGbs,omitempty" tf:"max_memory_in_gbs"`
	// +optional
	MemorySizeInGbs *int64   `json:"memorySizeInGbs,omitempty" tf:"memory_size_in_gbs"`
	Netmask         *string  `json:"netmask" tf:"netmask"`
	NtpServer       []string `json:"ntpServer" tf:"ntp_server"`
	Shape           *string  `json:"shape" tf:"shape"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	StorageCount *int64 `json:"storageCount,omitempty" tf:"storage_count"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	TimeZone    *string `json:"timeZone" tf:"time_zone"`
}

type ExadataInfrastructureStorageStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ExadataInfrastructureStorageList is a list of ExadataInfrastructureStorages
type ExadataInfrastructureStorageList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ExadataInfrastructureStorage CRD objects
	Items []ExadataInfrastructureStorage `json:"items,omitempty"`
}
