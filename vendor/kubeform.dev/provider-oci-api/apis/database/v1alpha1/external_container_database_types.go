/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ExternalContainerDatabase struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ExternalContainerDatabaseSpec   `json:"spec,omitempty"`
	Status            ExternalContainerDatabaseStatus `json:"status,omitempty"`
}

type ExternalContainerDatabaseSpecDatabaseManagementConfig struct {
	// +optional
	DatabaseManagementConnectionID *string `json:"databaseManagementConnectionID,omitempty" tf:"database_management_connection_id"`
	// +optional
	DatabaseManagementStatus *string `json:"databaseManagementStatus,omitempty" tf:"database_management_status"`
	// +optional
	LicenseModel *string `json:"licenseModel,omitempty" tf:"license_model"`
}

type ExternalContainerDatabaseSpec struct {
	State *ExternalContainerDatabaseSpecResource `json:"state,omitempty" tf:"-"`

	Resource ExternalContainerDatabaseSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type ExternalContainerDatabaseSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	CharacterSet  *string `json:"characterSet,omitempty" tf:"character_set"`
	CompartmentID *string `json:"compartmentID" tf:"compartment_id"`
	// +optional
	DatabaseConfiguration *string `json:"databaseConfiguration,omitempty" tf:"database_configuration"`
	// +optional
	DatabaseEdition *string `json:"databaseEdition,omitempty" tf:"database_edition"`
	// +optional
	DatabaseManagementConfig *ExternalContainerDatabaseSpecDatabaseManagementConfig `json:"databaseManagementConfig,omitempty" tf:"database_management_config"`
	// +optional
	DatabaseVersion *string `json:"databaseVersion,omitempty" tf:"database_version"`
	// +optional
	DbID *string `json:"dbID,omitempty" tf:"db_id"`
	// +optional
	DbPacks *string `json:"dbPacks,omitempty" tf:"db_packs"`
	// +optional
	DbUniqueName *string `json:"dbUniqueName,omitempty" tf:"db_unique_name"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	DisplayName *string           `json:"displayName" tf:"display_name"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	LifecycleDetails *string `json:"lifecycleDetails,omitempty" tf:"lifecycle_details"`
	// +optional
	NcharacterSet *string `json:"ncharacterSet,omitempty" tf:"ncharacter_set"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	TimeZone *string `json:"timeZone,omitempty" tf:"time_zone"`
}

type ExternalContainerDatabaseStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ExternalContainerDatabaseList is a list of ExternalContainerDatabases
type ExternalContainerDatabaseList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ExternalContainerDatabase CRD objects
	Items []ExternalContainerDatabase `json:"items,omitempty"`
}
