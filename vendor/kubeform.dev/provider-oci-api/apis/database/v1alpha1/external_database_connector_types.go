/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ExternalDatabaseConnector struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ExternalDatabaseConnectorSpec   `json:"spec,omitempty"`
	Status            ExternalDatabaseConnectorStatus `json:"status,omitempty"`
}

type ExternalDatabaseConnectorSpecConnectionCredentials struct {
	// +optional
	CredentialName *string `json:"credentialName,omitempty" tf:"credential_name"`
	// +optional
	CredentialType *string `json:"credentialType,omitempty" tf:"credential_type"`
	// +optional
	Password *string `json:"-" sensitive:"true" tf:"password"`
	// +optional
	Role *string `json:"role,omitempty" tf:"role"`
	// +optional
	Username *string `json:"username,omitempty" tf:"username"`
}

type ExternalDatabaseConnectorSpecConnectionString struct {
	Hostname *string `json:"hostname" tf:"hostname"`
	Port     *int64  `json:"port" tf:"port"`
	Protocol *string `json:"protocol" tf:"protocol"`
	Service  *string `json:"service" tf:"service"`
}

type ExternalDatabaseConnectorSpec struct {
	State *ExternalDatabaseConnectorSpecResource `json:"state,omitempty" tf:"-"`

	Resource ExternalDatabaseConnectorSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type ExternalDatabaseConnectorSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	CompartmentID         *string                                             `json:"compartmentID,omitempty" tf:"compartment_id"`
	ConnectionCredentials *ExternalDatabaseConnectorSpecConnectionCredentials `json:"connectionCredentials" tf:"connection_credentials"`
	// +optional
	ConnectionStatus *string                                        `json:"connectionStatus,omitempty" tf:"connection_status"`
	ConnectionString *ExternalDatabaseConnectorSpecConnectionString `json:"connectionString" tf:"connection_string"`
	ConnectorAgentID *string                                        `json:"connectorAgentID" tf:"connector_agent_id"`
	// +optional
	ConnectorType *string `json:"connectorType,omitempty" tf:"connector_type"`
	// +optional
	DefinedTags        map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	DisplayName        *string           `json:"displayName" tf:"display_name"`
	ExternalDatabaseID *string           `json:"externalDatabaseID" tf:"external_database_id"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	LifecycleDetails *string `json:"lifecycleDetails,omitempty" tf:"lifecycle_details"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	TimeConnectionStatusLastUpdated *string `json:"timeConnectionStatusLastUpdated,omitempty" tf:"time_connection_status_last_updated"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
}

type ExternalDatabaseConnectorStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ExternalDatabaseConnectorList is a list of ExternalDatabaseConnectors
type ExternalDatabaseConnectorList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ExternalDatabaseConnector CRD objects
	Items []ExternalDatabaseConnector `json:"items,omitempty"`
}
