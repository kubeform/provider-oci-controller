/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type MigrationConnection struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              MigrationConnectionSpec   `json:"spec,omitempty"`
	Status            MigrationConnectionStatus `json:"status,omitempty"`
}

type MigrationConnectionSpecAdminCredentials struct {
	Password *string `json:"-" sensitive:"true" tf:"password"`
	Username *string `json:"username" tf:"username"`
}

type MigrationConnectionSpecConnectDescriptor struct {
	// +optional
	ConnectString *string `json:"connectString,omitempty" tf:"connect_string"`
	// +optional
	DatabaseServiceName *string `json:"databaseServiceName,omitempty" tf:"database_service_name"`
	// +optional
	Host *string `json:"host,omitempty" tf:"host"`
	// +optional
	Port *int64 `json:"port,omitempty" tf:"port"`
}

type MigrationConnectionSpecPrivateEndpoint struct {
	CompartmentID *string `json:"compartmentID" tf:"compartment_id"`
	// +optional
	ID       *string `json:"ID,omitempty" tf:"id"`
	SubnetID *string `json:"subnetID" tf:"subnet_id"`
	VcnID    *string `json:"vcnID" tf:"vcn_id"`
}

type MigrationConnectionSpecSshDetails struct {
	Host   *string `json:"host" tf:"host"`
	Sshkey *string `json:"sshkey" tf:"sshkey"`
	// +optional
	SudoLocation *string `json:"sudoLocation,omitempty" tf:"sudo_location"`
	User         *string `json:"user" tf:"user"`
}

type MigrationConnectionSpecVaultDetails struct {
	CompartmentID *string `json:"compartmentID" tf:"compartment_id"`
	KeyID         *string `json:"keyID" tf:"key_id"`
	VaultID       *string `json:"vaultID" tf:"vault_id"`
}

type MigrationConnectionSpec struct {
	State *MigrationConnectionSpecResource `json:"state,omitempty" tf:"-"`

	Resource MigrationConnectionSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`
}

type MigrationConnectionSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	AdminCredentials *MigrationConnectionSpecAdminCredentials `json:"adminCredentials" tf:"admin_credentials"`
	// +optional
	CertificateTdn *string `json:"certificateTdn,omitempty" tf:"certificate_tdn"`
	CompartmentID  *string `json:"compartmentID" tf:"compartment_id"`
	// +optional
	ConnectDescriptor *MigrationConnectionSpecConnectDescriptor `json:"connectDescriptor,omitempty" tf:"connect_descriptor"`
	// +optional
	CredentialsSecretID *string `json:"credentialsSecretID,omitempty" tf:"credentials_secret_id"`
	// +optional
	DatabaseID   *string `json:"databaseID,omitempty" tf:"database_id"`
	DatabaseType *string `json:"databaseType" tf:"database_type"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	LifecycleDetails *string `json:"lifecycleDetails,omitempty" tf:"lifecycle_details"`
	// +optional
	PrivateEndpoint *MigrationConnectionSpecPrivateEndpoint `json:"privateEndpoint,omitempty" tf:"private_endpoint"`
	// +optional
	SshDetails *MigrationConnectionSpecSshDetails `json:"sshDetails,omitempty" tf:"ssh_details"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	SystemTags map[string]string `json:"systemTags,omitempty" tf:"system_tags"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	TimeUpdated *string `json:"timeUpdated,omitempty" tf:"time_updated"`
	// +optional
	TlsKeystore *string `json:"tlsKeystore,omitempty" tf:"tls_keystore"`
	// +optional
	TlsWallet    *string                              `json:"tlsWallet,omitempty" tf:"tls_wallet"`
	VaultDetails *MigrationConnectionSpecVaultDetails `json:"vaultDetails" tf:"vault_details"`
}

type MigrationConnectionStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// MigrationConnectionList is a list of MigrationConnections
type MigrationConnectionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of MigrationConnection CRD objects
	Items []MigrationConnection `json:"items,omitempty"`
}
