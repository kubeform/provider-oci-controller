/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type PluggableDatabasesRemoteClone struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              PluggableDatabasesRemoteCloneSpec   `json:"spec,omitempty"`
	Status            PluggableDatabasesRemoteCloneStatus `json:"status,omitempty"`
}

type PluggableDatabasesRemoteCloneSpecConnectionStrings struct {
	// +optional
	AllConnectionStrings map[string]string `json:"allConnectionStrings,omitempty" tf:"all_connection_strings"`
	// +optional
	PdbDefault *string `json:"pdbDefault,omitempty" tf:"pdb_default"`
	// +optional
	PdbIPDefault *string `json:"pdbIPDefault,omitempty" tf:"pdb_ip_default"`
}

type PluggableDatabasesRemoteCloneSpec struct {
	State *PluggableDatabasesRemoteCloneSpecResource `json:"state,omitempty" tf:"-"`

	Resource PluggableDatabasesRemoteCloneSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`
}

type PluggableDatabasesRemoteCloneSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	ClonedPdbName *string `json:"clonedPdbName" tf:"cloned_pdb_name"`
	// +optional
	CompartmentID *string `json:"compartmentID,omitempty" tf:"compartment_id"`
	// +optional
	ConnectionStrings *PluggableDatabasesRemoteCloneSpecConnectionStrings `json:"connectionStrings,omitempty" tf:"connection_strings"`
	// +optional
	ContainerDatabaseID *string `json:"containerDatabaseID,omitempty" tf:"container_database_id"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	IsRestricted *bool `json:"isRestricted,omitempty" tf:"is_restricted"`
	// +optional
	LifecycleDetails *string `json:"lifecycleDetails,omitempty" tf:"lifecycle_details"`
	// +optional
	OpenMode         *string `json:"openMode,omitempty" tf:"open_mode"`
	PdbAdminPassword *string `json:"-" sensitive:"true" tf:"pdb_admin_password"`
	// +optional
	PdbName                        *string `json:"pdbName,omitempty" tf:"pdb_name"`
	PluggableDatabaseID            *string `json:"pluggableDatabaseID" tf:"pluggable_database_id"`
	SourceContainerDbAdminPassword *string `json:"-" sensitive:"true" tf:"source_container_db_admin_password"`
	// +optional
	State                     *string `json:"state,omitempty" tf:"state"`
	TargetContainerDatabaseID *string `json:"targetContainerDatabaseID" tf:"target_container_database_id"`
	TargetTdeWalletPassword   *string `json:"-" sensitive:"true" tf:"target_tde_wallet_password"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
}

type PluggableDatabasesRemoteCloneStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// PluggableDatabasesRemoteCloneList is a list of PluggableDatabasesRemoteClones
type PluggableDatabasesRemoteCloneList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of PluggableDatabasesRemoteClone CRD objects
	Items []PluggableDatabasesRemoteClone `json:"items,omitempty"`
}
