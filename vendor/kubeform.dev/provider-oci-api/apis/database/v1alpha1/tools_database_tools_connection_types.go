/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ToolsDatabaseToolsConnection struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ToolsDatabaseToolsConnectionSpec   `json:"spec,omitempty"`
	Status            ToolsDatabaseToolsConnectionStatus `json:"status,omitempty"`
}

type ToolsDatabaseToolsConnectionSpecKeyStoresKeyStoreContent struct {
	// +optional
	SecretID  *string `json:"secretID,omitempty" tf:"secret_id"`
	ValueType *string `json:"valueType" tf:"value_type"`
}

type ToolsDatabaseToolsConnectionSpecKeyStoresKeyStorePassword struct {
	// +optional
	SecretID  *string `json:"secretID,omitempty" tf:"secret_id"`
	ValueType *string `json:"valueType" tf:"value_type"`
}

type ToolsDatabaseToolsConnectionSpecKeyStores struct {
	// +optional
	KeyStoreContent *ToolsDatabaseToolsConnectionSpecKeyStoresKeyStoreContent `json:"keyStoreContent,omitempty" tf:"key_store_content"`
	// +optional
	KeyStorePassword *ToolsDatabaseToolsConnectionSpecKeyStoresKeyStorePassword `json:"keyStorePassword,omitempty" tf:"key_store_password"`
	// +optional
	KeyStoreType *string `json:"keyStoreType,omitempty" tf:"key_store_type"`
}

type ToolsDatabaseToolsConnectionSpecRelatedResource struct {
	EntityType *string `json:"entityType" tf:"entity_type"`
	Identifier *string `json:"identifier" tf:"identifier"`
}

type ToolsDatabaseToolsConnectionSpecUserPassword struct {
	// +optional
	SecretID  *string `json:"secretID,omitempty" tf:"secret_id"`
	ValueType *string `json:"valueType" tf:"value_type"`
}

type ToolsDatabaseToolsConnectionSpec struct {
	State *ToolsDatabaseToolsConnectionSpecResource `json:"state,omitempty" tf:"-"`

	Resource ToolsDatabaseToolsConnectionSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type ToolsDatabaseToolsConnectionSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	AdvancedProperties map[string]string `json:"advancedProperties,omitempty" tf:"advanced_properties"`
	CompartmentID      *string           `json:"compartmentID" tf:"compartment_id"`
	// +optional
	ConnectionString *string `json:"connectionString,omitempty" tf:"connection_string"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	DisplayName *string           `json:"displayName" tf:"display_name"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	KeyStores []ToolsDatabaseToolsConnectionSpecKeyStores `json:"keyStores,omitempty" tf:"key_stores"`
	// +optional
	LifecycleDetails *string `json:"lifecycleDetails,omitempty" tf:"lifecycle_details"`
	// +optional
	PrivateEndpointID *string `json:"privateEndpointID,omitempty" tf:"private_endpoint_id"`
	// +optional
	RelatedResource *ToolsDatabaseToolsConnectionSpecRelatedResource `json:"relatedResource,omitempty" tf:"related_resource"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	SystemTags map[string]string `json:"systemTags,omitempty" tf:"system_tags"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	TimeUpdated *string `json:"timeUpdated,omitempty" tf:"time_updated"`
	Type        *string `json:"type" tf:"type"`
	// +optional
	UserName *string `json:"userName,omitempty" tf:"user_name"`
	// +optional
	UserPassword *ToolsDatabaseToolsConnectionSpecUserPassword `json:"userPassword,omitempty" tf:"user_password"`
}

type ToolsDatabaseToolsConnectionStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ToolsDatabaseToolsConnectionList is a list of ToolsDatabaseToolsConnections
type ToolsDatabaseToolsConnectionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ToolsDatabaseToolsConnection CRD objects
	Items []ToolsDatabaseToolsConnection `json:"items,omitempty"`
}
