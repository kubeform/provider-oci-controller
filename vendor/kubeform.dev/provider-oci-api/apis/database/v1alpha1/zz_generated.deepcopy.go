// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "kubeform.dev/apimachinery/api/v1alpha1"

	corev1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "kmodules.xyz/client-go/api/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousContainerDatabase) DeepCopyInto(out *AutonomousContainerDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousContainerDatabase.
func (in *AutonomousContainerDatabase) DeepCopy() *AutonomousContainerDatabase {
	if in == nil {
		return nil
	}
	out := new(AutonomousContainerDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutonomousContainerDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousContainerDatabaseDataguardAssociationOperation) DeepCopyInto(out *AutonomousContainerDatabaseDataguardAssociationOperation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousContainerDatabaseDataguardAssociationOperation.
func (in *AutonomousContainerDatabaseDataguardAssociationOperation) DeepCopy() *AutonomousContainerDatabaseDataguardAssociationOperation {
	if in == nil {
		return nil
	}
	out := new(AutonomousContainerDatabaseDataguardAssociationOperation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutonomousContainerDatabaseDataguardAssociationOperation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousContainerDatabaseDataguardAssociationOperationList) DeepCopyInto(out *AutonomousContainerDatabaseDataguardAssociationOperationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AutonomousContainerDatabaseDataguardAssociationOperation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousContainerDatabaseDataguardAssociationOperationList.
func (in *AutonomousContainerDatabaseDataguardAssociationOperationList) DeepCopy() *AutonomousContainerDatabaseDataguardAssociationOperationList {
	if in == nil {
		return nil
	}
	out := new(AutonomousContainerDatabaseDataguardAssociationOperationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutonomousContainerDatabaseDataguardAssociationOperationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousContainerDatabaseDataguardAssociationOperationSpec) DeepCopyInto(out *AutonomousContainerDatabaseDataguardAssociationOperationSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(AutonomousContainerDatabaseDataguardAssociationOperationSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousContainerDatabaseDataguardAssociationOperationSpec.
func (in *AutonomousContainerDatabaseDataguardAssociationOperationSpec) DeepCopy() *AutonomousContainerDatabaseDataguardAssociationOperationSpec {
	if in == nil {
		return nil
	}
	out := new(AutonomousContainerDatabaseDataguardAssociationOperationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousContainerDatabaseDataguardAssociationOperationSpecResource) DeepCopyInto(out *AutonomousContainerDatabaseDataguardAssociationOperationSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AutonomousContainerDatabaseDataguardAssociationID != nil {
		in, out := &in.AutonomousContainerDatabaseDataguardAssociationID, &out.AutonomousContainerDatabaseDataguardAssociationID
		*out = new(string)
		**out = **in
	}
	if in.AutonomousContainerDatabaseID != nil {
		in, out := &in.AutonomousContainerDatabaseID, &out.AutonomousContainerDatabaseID
		*out = new(string)
		**out = **in
	}
	if in.Operation != nil {
		in, out := &in.Operation, &out.Operation
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousContainerDatabaseDataguardAssociationOperationSpecResource.
func (in *AutonomousContainerDatabaseDataguardAssociationOperationSpecResource) DeepCopy() *AutonomousContainerDatabaseDataguardAssociationOperationSpecResource {
	if in == nil {
		return nil
	}
	out := new(AutonomousContainerDatabaseDataguardAssociationOperationSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousContainerDatabaseDataguardAssociationOperationStatus) DeepCopyInto(out *AutonomousContainerDatabaseDataguardAssociationOperationStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousContainerDatabaseDataguardAssociationOperationStatus.
func (in *AutonomousContainerDatabaseDataguardAssociationOperationStatus) DeepCopy() *AutonomousContainerDatabaseDataguardAssociationOperationStatus {
	if in == nil {
		return nil
	}
	out := new(AutonomousContainerDatabaseDataguardAssociationOperationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousContainerDatabaseList) DeepCopyInto(out *AutonomousContainerDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AutonomousContainerDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousContainerDatabaseList.
func (in *AutonomousContainerDatabaseList) DeepCopy() *AutonomousContainerDatabaseList {
	if in == nil {
		return nil
	}
	out := new(AutonomousContainerDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutonomousContainerDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousContainerDatabaseSpec) DeepCopyInto(out *AutonomousContainerDatabaseSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(AutonomousContainerDatabaseSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousContainerDatabaseSpec.
func (in *AutonomousContainerDatabaseSpec) DeepCopy() *AutonomousContainerDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(AutonomousContainerDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousContainerDatabaseSpecBackupConfig) DeepCopyInto(out *AutonomousContainerDatabaseSpecBackupConfig) {
	*out = *in
	if in.BackupDestinationDetails != nil {
		in, out := &in.BackupDestinationDetails, &out.BackupDestinationDetails
		*out = new(AutonomousContainerDatabaseSpecBackupConfigBackupDestinationDetails)
		(*in).DeepCopyInto(*out)
	}
	if in.RecoveryWindowInDays != nil {
		in, out := &in.RecoveryWindowInDays, &out.RecoveryWindowInDays
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousContainerDatabaseSpecBackupConfig.
func (in *AutonomousContainerDatabaseSpecBackupConfig) DeepCopy() *AutonomousContainerDatabaseSpecBackupConfig {
	if in == nil {
		return nil
	}
	out := new(AutonomousContainerDatabaseSpecBackupConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousContainerDatabaseSpecBackupConfigBackupDestinationDetails) DeepCopyInto(out *AutonomousContainerDatabaseSpecBackupConfigBackupDestinationDetails) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InternetProxy != nil {
		in, out := &in.InternetProxy, &out.InternetProxy
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VpcPassword != nil {
		in, out := &in.VpcPassword, &out.VpcPassword
		*out = new(string)
		**out = **in
	}
	if in.VpcUser != nil {
		in, out := &in.VpcUser, &out.VpcUser
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousContainerDatabaseSpecBackupConfigBackupDestinationDetails.
func (in *AutonomousContainerDatabaseSpecBackupConfigBackupDestinationDetails) DeepCopy() *AutonomousContainerDatabaseSpecBackupConfigBackupDestinationDetails {
	if in == nil {
		return nil
	}
	out := new(AutonomousContainerDatabaseSpecBackupConfigBackupDestinationDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousContainerDatabaseSpecMaintenanceWindow) DeepCopyInto(out *AutonomousContainerDatabaseSpecMaintenanceWindow) {
	*out = *in
	if in.DaysOfWeek != nil {
		in, out := &in.DaysOfWeek, &out.DaysOfWeek
		*out = make([]AutonomousContainerDatabaseSpecMaintenanceWindowDaysOfWeek, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HoursOfDay != nil {
		in, out := &in.HoursOfDay, &out.HoursOfDay
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.LeadTimeInWeeks != nil {
		in, out := &in.LeadTimeInWeeks, &out.LeadTimeInWeeks
		*out = new(int64)
		**out = **in
	}
	if in.Months != nil {
		in, out := &in.Months, &out.Months
		*out = make([]AutonomousContainerDatabaseSpecMaintenanceWindowMonths, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Preference != nil {
		in, out := &in.Preference, &out.Preference
		*out = new(string)
		**out = **in
	}
	if in.WeeksOfMonth != nil {
		in, out := &in.WeeksOfMonth, &out.WeeksOfMonth
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousContainerDatabaseSpecMaintenanceWindow.
func (in *AutonomousContainerDatabaseSpecMaintenanceWindow) DeepCopy() *AutonomousContainerDatabaseSpecMaintenanceWindow {
	if in == nil {
		return nil
	}
	out := new(AutonomousContainerDatabaseSpecMaintenanceWindow)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousContainerDatabaseSpecMaintenanceWindowDaysOfWeek) DeepCopyInto(out *AutonomousContainerDatabaseSpecMaintenanceWindowDaysOfWeek) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousContainerDatabaseSpecMaintenanceWindowDaysOfWeek.
func (in *AutonomousContainerDatabaseSpecMaintenanceWindowDaysOfWeek) DeepCopy() *AutonomousContainerDatabaseSpecMaintenanceWindowDaysOfWeek {
	if in == nil {
		return nil
	}
	out := new(AutonomousContainerDatabaseSpecMaintenanceWindowDaysOfWeek)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousContainerDatabaseSpecMaintenanceWindowDetails) DeepCopyInto(out *AutonomousContainerDatabaseSpecMaintenanceWindowDetails) {
	*out = *in
	if in.DaysOfWeek != nil {
		in, out := &in.DaysOfWeek, &out.DaysOfWeek
		*out = make([]AutonomousContainerDatabaseSpecMaintenanceWindowDetailsDaysOfWeek, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HoursOfDay != nil {
		in, out := &in.HoursOfDay, &out.HoursOfDay
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.LeadTimeInWeeks != nil {
		in, out := &in.LeadTimeInWeeks, &out.LeadTimeInWeeks
		*out = new(int64)
		**out = **in
	}
	if in.Months != nil {
		in, out := &in.Months, &out.Months
		*out = make([]AutonomousContainerDatabaseSpecMaintenanceWindowDetailsMonths, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Preference != nil {
		in, out := &in.Preference, &out.Preference
		*out = new(string)
		**out = **in
	}
	if in.WeeksOfMonth != nil {
		in, out := &in.WeeksOfMonth, &out.WeeksOfMonth
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousContainerDatabaseSpecMaintenanceWindowDetails.
func (in *AutonomousContainerDatabaseSpecMaintenanceWindowDetails) DeepCopy() *AutonomousContainerDatabaseSpecMaintenanceWindowDetails {
	if in == nil {
		return nil
	}
	out := new(AutonomousContainerDatabaseSpecMaintenanceWindowDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousContainerDatabaseSpecMaintenanceWindowDetailsDaysOfWeek) DeepCopyInto(out *AutonomousContainerDatabaseSpecMaintenanceWindowDetailsDaysOfWeek) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousContainerDatabaseSpecMaintenanceWindowDetailsDaysOfWeek.
func (in *AutonomousContainerDatabaseSpecMaintenanceWindowDetailsDaysOfWeek) DeepCopy() *AutonomousContainerDatabaseSpecMaintenanceWindowDetailsDaysOfWeek {
	if in == nil {
		return nil
	}
	out := new(AutonomousContainerDatabaseSpecMaintenanceWindowDetailsDaysOfWeek)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousContainerDatabaseSpecMaintenanceWindowDetailsMonths) DeepCopyInto(out *AutonomousContainerDatabaseSpecMaintenanceWindowDetailsMonths) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousContainerDatabaseSpecMaintenanceWindowDetailsMonths.
func (in *AutonomousContainerDatabaseSpecMaintenanceWindowDetailsMonths) DeepCopy() *AutonomousContainerDatabaseSpecMaintenanceWindowDetailsMonths {
	if in == nil {
		return nil
	}
	out := new(AutonomousContainerDatabaseSpecMaintenanceWindowDetailsMonths)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousContainerDatabaseSpecMaintenanceWindowMonths) DeepCopyInto(out *AutonomousContainerDatabaseSpecMaintenanceWindowMonths) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousContainerDatabaseSpecMaintenanceWindowMonths.
func (in *AutonomousContainerDatabaseSpecMaintenanceWindowMonths) DeepCopy() *AutonomousContainerDatabaseSpecMaintenanceWindowMonths {
	if in == nil {
		return nil
	}
	out := new(AutonomousContainerDatabaseSpecMaintenanceWindowMonths)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousContainerDatabaseSpecPeerAutonomousContainerDatabaseBackupConfig) DeepCopyInto(out *AutonomousContainerDatabaseSpecPeerAutonomousContainerDatabaseBackupConfig) {
	*out = *in
	if in.BackupDestinationDetails != nil {
		in, out := &in.BackupDestinationDetails, &out.BackupDestinationDetails
		*out = make([]AutonomousContainerDatabaseSpecPeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetails, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RecoveryWindowInDays != nil {
		in, out := &in.RecoveryWindowInDays, &out.RecoveryWindowInDays
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousContainerDatabaseSpecPeerAutonomousContainerDatabaseBackupConfig.
func (in *AutonomousContainerDatabaseSpecPeerAutonomousContainerDatabaseBackupConfig) DeepCopy() *AutonomousContainerDatabaseSpecPeerAutonomousContainerDatabaseBackupConfig {
	if in == nil {
		return nil
	}
	out := new(AutonomousContainerDatabaseSpecPeerAutonomousContainerDatabaseBackupConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousContainerDatabaseSpecPeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetails) DeepCopyInto(out *AutonomousContainerDatabaseSpecPeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetails) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InternetProxy != nil {
		in, out := &in.InternetProxy, &out.InternetProxy
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VpcPassword != nil {
		in, out := &in.VpcPassword, &out.VpcPassword
		*out = new(string)
		**out = **in
	}
	if in.VpcUser != nil {
		in, out := &in.VpcUser, &out.VpcUser
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousContainerDatabaseSpecPeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetails.
func (in *AutonomousContainerDatabaseSpecPeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetails) DeepCopy() *AutonomousContainerDatabaseSpecPeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetails {
	if in == nil {
		return nil
	}
	out := new(AutonomousContainerDatabaseSpecPeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousContainerDatabaseSpecResource) DeepCopyInto(out *AutonomousContainerDatabaseSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AutonomousExadataInfrastructureID != nil {
		in, out := &in.AutonomousExadataInfrastructureID, &out.AutonomousExadataInfrastructureID
		*out = new(string)
		**out = **in
	}
	if in.AutonomousVmClusterID != nil {
		in, out := &in.AutonomousVmClusterID, &out.AutonomousVmClusterID
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupConfig != nil {
		in, out := &in.BackupConfig, &out.BackupConfig
		*out = new(AutonomousContainerDatabaseSpecBackupConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DbUniqueName != nil {
		in, out := &in.DbUniqueName, &out.DbUniqueName
		*out = new(string)
		**out = **in
	}
	if in.DbVersion != nil {
		in, out := &in.DbVersion, &out.DbVersion
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.InfrastructureType != nil {
		in, out := &in.InfrastructureType, &out.InfrastructureType
		*out = new(string)
		**out = **in
	}
	if in.KeyStoreID != nil {
		in, out := &in.KeyStoreID, &out.KeyStoreID
		*out = new(string)
		**out = **in
	}
	if in.KeyStoreWalletName != nil {
		in, out := &in.KeyStoreWalletName, &out.KeyStoreWalletName
		*out = new(string)
		**out = **in
	}
	if in.KmsKeyID != nil {
		in, out := &in.KmsKeyID, &out.KmsKeyID
		*out = new(string)
		**out = **in
	}
	if in.LastMaintenanceRunID != nil {
		in, out := &in.LastMaintenanceRunID, &out.LastMaintenanceRunID
		*out = new(string)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceWindow != nil {
		in, out := &in.MaintenanceWindow, &out.MaintenanceWindow
		*out = new(AutonomousContainerDatabaseSpecMaintenanceWindow)
		(*in).DeepCopyInto(*out)
	}
	if in.MaintenanceWindowDetails != nil {
		in, out := &in.MaintenanceWindowDetails, &out.MaintenanceWindowDetails
		*out = new(AutonomousContainerDatabaseSpecMaintenanceWindowDetails)
		(*in).DeepCopyInto(*out)
	}
	if in.NextMaintenanceRunID != nil {
		in, out := &in.NextMaintenanceRunID, &out.NextMaintenanceRunID
		*out = new(string)
		**out = **in
	}
	if in.PatchID != nil {
		in, out := &in.PatchID, &out.PatchID
		*out = new(string)
		**out = **in
	}
	if in.PatchModel != nil {
		in, out := &in.PatchModel, &out.PatchModel
		*out = new(string)
		**out = **in
	}
	if in.PeerAutonomousContainerDatabaseBackupConfig != nil {
		in, out := &in.PeerAutonomousContainerDatabaseBackupConfig, &out.PeerAutonomousContainerDatabaseBackupConfig
		*out = new(AutonomousContainerDatabaseSpecPeerAutonomousContainerDatabaseBackupConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.PeerAutonomousContainerDatabaseCompartmentID != nil {
		in, out := &in.PeerAutonomousContainerDatabaseCompartmentID, &out.PeerAutonomousContainerDatabaseCompartmentID
		*out = new(string)
		**out = **in
	}
	if in.PeerAutonomousContainerDatabaseDisplayName != nil {
		in, out := &in.PeerAutonomousContainerDatabaseDisplayName, &out.PeerAutonomousContainerDatabaseDisplayName
		*out = new(string)
		**out = **in
	}
	if in.PeerAutonomousExadataInfrastructureID != nil {
		in, out := &in.PeerAutonomousExadataInfrastructureID, &out.PeerAutonomousExadataInfrastructureID
		*out = new(string)
		**out = **in
	}
	if in.PeerAutonomousVmClusterID != nil {
		in, out := &in.PeerAutonomousVmClusterID, &out.PeerAutonomousVmClusterID
		*out = new(string)
		**out = **in
	}
	if in.PeerDbUniqueName != nil {
		in, out := &in.PeerDbUniqueName, &out.PeerDbUniqueName
		*out = new(string)
		**out = **in
	}
	if in.ProtectionMode != nil {
		in, out := &in.ProtectionMode, &out.ProtectionMode
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.RotateKeyTrigger != nil {
		in, out := &in.RotateKeyTrigger, &out.RotateKeyTrigger
		*out = new(bool)
		**out = **in
	}
	if in.ServiceLevelAgreementType != nil {
		in, out := &in.ServiceLevelAgreementType, &out.ServiceLevelAgreementType
		*out = new(string)
		**out = **in
	}
	if in.StandbyMaintenanceBufferInDays != nil {
		in, out := &in.StandbyMaintenanceBufferInDays, &out.StandbyMaintenanceBufferInDays
		*out = new(int64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.VaultID != nil {
		in, out := &in.VaultID, &out.VaultID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousContainerDatabaseSpecResource.
func (in *AutonomousContainerDatabaseSpecResource) DeepCopy() *AutonomousContainerDatabaseSpecResource {
	if in == nil {
		return nil
	}
	out := new(AutonomousContainerDatabaseSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousContainerDatabaseStatus) DeepCopyInto(out *AutonomousContainerDatabaseStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousContainerDatabaseStatus.
func (in *AutonomousContainerDatabaseStatus) DeepCopy() *AutonomousContainerDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(AutonomousContainerDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabase) DeepCopyInto(out *AutonomousDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabase.
func (in *AutonomousDatabase) DeepCopy() *AutonomousDatabase {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutonomousDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseBackup) DeepCopyInto(out *AutonomousDatabaseBackup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseBackup.
func (in *AutonomousDatabaseBackup) DeepCopy() *AutonomousDatabaseBackup {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseBackup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutonomousDatabaseBackup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseBackupList) DeepCopyInto(out *AutonomousDatabaseBackupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AutonomousDatabaseBackup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseBackupList.
func (in *AutonomousDatabaseBackupList) DeepCopy() *AutonomousDatabaseBackupList {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseBackupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutonomousDatabaseBackupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseBackupSpec) DeepCopyInto(out *AutonomousDatabaseBackupSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(AutonomousDatabaseBackupSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseBackupSpec.
func (in *AutonomousDatabaseBackupSpec) DeepCopy() *AutonomousDatabaseBackupSpec {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseBackupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseBackupSpecResource) DeepCopyInto(out *AutonomousDatabaseBackupSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AutonomousDatabaseID != nil {
		in, out := &in.AutonomousDatabaseID, &out.AutonomousDatabaseID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseSizeInTbs != nil {
		in, out := &in.DatabaseSizeInTbs, &out.DatabaseSizeInTbs
		*out = new(float64)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.IsAutomatic != nil {
		in, out := &in.IsAutomatic, &out.IsAutomatic
		*out = new(bool)
		**out = **in
	}
	if in.IsRestorable != nil {
		in, out := &in.IsRestorable, &out.IsRestorable
		*out = new(bool)
		**out = **in
	}
	if in.KeyStoreID != nil {
		in, out := &in.KeyStoreID, &out.KeyStoreID
		*out = new(string)
		**out = **in
	}
	if in.KeyStoreWalletName != nil {
		in, out := &in.KeyStoreWalletName, &out.KeyStoreWalletName
		*out = new(string)
		**out = **in
	}
	if in.KmsKeyID != nil {
		in, out := &in.KmsKeyID, &out.KmsKeyID
		*out = new(string)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeEnded != nil {
		in, out := &in.TimeEnded, &out.TimeEnded
		*out = new(string)
		**out = **in
	}
	if in.TimeStarted != nil {
		in, out := &in.TimeStarted, &out.TimeStarted
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VaultID != nil {
		in, out := &in.VaultID, &out.VaultID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseBackupSpecResource.
func (in *AutonomousDatabaseBackupSpecResource) DeepCopy() *AutonomousDatabaseBackupSpecResource {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseBackupSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseBackupStatus) DeepCopyInto(out *AutonomousDatabaseBackupStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseBackupStatus.
func (in *AutonomousDatabaseBackupStatus) DeepCopy() *AutonomousDatabaseBackupStatus {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseBackupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseInstanceWalletManagement) DeepCopyInto(out *AutonomousDatabaseInstanceWalletManagement) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseInstanceWalletManagement.
func (in *AutonomousDatabaseInstanceWalletManagement) DeepCopy() *AutonomousDatabaseInstanceWalletManagement {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseInstanceWalletManagement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutonomousDatabaseInstanceWalletManagement) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseInstanceWalletManagementList) DeepCopyInto(out *AutonomousDatabaseInstanceWalletManagementList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AutonomousDatabaseInstanceWalletManagement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseInstanceWalletManagementList.
func (in *AutonomousDatabaseInstanceWalletManagementList) DeepCopy() *AutonomousDatabaseInstanceWalletManagementList {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseInstanceWalletManagementList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutonomousDatabaseInstanceWalletManagementList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseInstanceWalletManagementSpec) DeepCopyInto(out *AutonomousDatabaseInstanceWalletManagementSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(AutonomousDatabaseInstanceWalletManagementSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseInstanceWalletManagementSpec.
func (in *AutonomousDatabaseInstanceWalletManagementSpec) DeepCopy() *AutonomousDatabaseInstanceWalletManagementSpec {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseInstanceWalletManagementSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseInstanceWalletManagementSpecResource) DeepCopyInto(out *AutonomousDatabaseInstanceWalletManagementSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AutonomousDatabaseID != nil {
		in, out := &in.AutonomousDatabaseID, &out.AutonomousDatabaseID
		*out = new(string)
		**out = **in
	}
	if in.ShouldRotate != nil {
		in, out := &in.ShouldRotate, &out.ShouldRotate
		*out = new(bool)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeRotated != nil {
		in, out := &in.TimeRotated, &out.TimeRotated
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseInstanceWalletManagementSpecResource.
func (in *AutonomousDatabaseInstanceWalletManagementSpecResource) DeepCopy() *AutonomousDatabaseInstanceWalletManagementSpecResource {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseInstanceWalletManagementSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseInstanceWalletManagementStatus) DeepCopyInto(out *AutonomousDatabaseInstanceWalletManagementStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseInstanceWalletManagementStatus.
func (in *AutonomousDatabaseInstanceWalletManagementStatus) DeepCopy() *AutonomousDatabaseInstanceWalletManagementStatus {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseInstanceWalletManagementStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseList) DeepCopyInto(out *AutonomousDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AutonomousDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseList.
func (in *AutonomousDatabaseList) DeepCopy() *AutonomousDatabaseList {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutonomousDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseRegionalWalletManagement) DeepCopyInto(out *AutonomousDatabaseRegionalWalletManagement) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseRegionalWalletManagement.
func (in *AutonomousDatabaseRegionalWalletManagement) DeepCopy() *AutonomousDatabaseRegionalWalletManagement {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseRegionalWalletManagement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutonomousDatabaseRegionalWalletManagement) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseRegionalWalletManagementList) DeepCopyInto(out *AutonomousDatabaseRegionalWalletManagementList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AutonomousDatabaseRegionalWalletManagement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseRegionalWalletManagementList.
func (in *AutonomousDatabaseRegionalWalletManagementList) DeepCopy() *AutonomousDatabaseRegionalWalletManagementList {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseRegionalWalletManagementList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutonomousDatabaseRegionalWalletManagementList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseRegionalWalletManagementSpec) DeepCopyInto(out *AutonomousDatabaseRegionalWalletManagementSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(AutonomousDatabaseRegionalWalletManagementSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseRegionalWalletManagementSpec.
func (in *AutonomousDatabaseRegionalWalletManagementSpec) DeepCopy() *AutonomousDatabaseRegionalWalletManagementSpec {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseRegionalWalletManagementSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseRegionalWalletManagementSpecResource) DeepCopyInto(out *AutonomousDatabaseRegionalWalletManagementSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.ShouldRotate != nil {
		in, out := &in.ShouldRotate, &out.ShouldRotate
		*out = new(bool)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeRotated != nil {
		in, out := &in.TimeRotated, &out.TimeRotated
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseRegionalWalletManagementSpecResource.
func (in *AutonomousDatabaseRegionalWalletManagementSpecResource) DeepCopy() *AutonomousDatabaseRegionalWalletManagementSpecResource {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseRegionalWalletManagementSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseRegionalWalletManagementStatus) DeepCopyInto(out *AutonomousDatabaseRegionalWalletManagementStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseRegionalWalletManagementStatus.
func (in *AutonomousDatabaseRegionalWalletManagementStatus) DeepCopy() *AutonomousDatabaseRegionalWalletManagementStatus {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseRegionalWalletManagementStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseSpec) DeepCopyInto(out *AutonomousDatabaseSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(AutonomousDatabaseSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseSpec.
func (in *AutonomousDatabaseSpec) DeepCopy() *AutonomousDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseSpecApexDetails) DeepCopyInto(out *AutonomousDatabaseSpecApexDetails) {
	*out = *in
	if in.ApexVersion != nil {
		in, out := &in.ApexVersion, &out.ApexVersion
		*out = new(string)
		**out = **in
	}
	if in.OrdsVersion != nil {
		in, out := &in.OrdsVersion, &out.OrdsVersion
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseSpecApexDetails.
func (in *AutonomousDatabaseSpecApexDetails) DeepCopy() *AutonomousDatabaseSpecApexDetails {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseSpecApexDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseSpecBackupConfig) DeepCopyInto(out *AutonomousDatabaseSpecBackupConfig) {
	*out = *in
	if in.ManualBackupBucketName != nil {
		in, out := &in.ManualBackupBucketName, &out.ManualBackupBucketName
		*out = new(string)
		**out = **in
	}
	if in.ManualBackupType != nil {
		in, out := &in.ManualBackupType, &out.ManualBackupType
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseSpecBackupConfig.
func (in *AutonomousDatabaseSpecBackupConfig) DeepCopy() *AutonomousDatabaseSpecBackupConfig {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseSpecBackupConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseSpecConnectionStrings) DeepCopyInto(out *AutonomousDatabaseSpecConnectionStrings) {
	*out = *in
	if in.AllConnectionStrings != nil {
		in, out := &in.AllConnectionStrings, &out.AllConnectionStrings
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Dedicated != nil {
		in, out := &in.Dedicated, &out.Dedicated
		*out = new(string)
		**out = **in
	}
	if in.High != nil {
		in, out := &in.High, &out.High
		*out = new(string)
		**out = **in
	}
	if in.Low != nil {
		in, out := &in.Low, &out.Low
		*out = new(string)
		**out = **in
	}
	if in.Medium != nil {
		in, out := &in.Medium, &out.Medium
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseSpecConnectionStrings.
func (in *AutonomousDatabaseSpecConnectionStrings) DeepCopy() *AutonomousDatabaseSpecConnectionStrings {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseSpecConnectionStrings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseSpecConnectionUrls) DeepCopyInto(out *AutonomousDatabaseSpecConnectionUrls) {
	*out = *in
	if in.ApexURL != nil {
		in, out := &in.ApexURL, &out.ApexURL
		*out = new(string)
		**out = **in
	}
	if in.GraphStudioURL != nil {
		in, out := &in.GraphStudioURL, &out.GraphStudioURL
		*out = new(string)
		**out = **in
	}
	if in.MachineLearningUserManagementURL != nil {
		in, out := &in.MachineLearningUserManagementURL, &out.MachineLearningUserManagementURL
		*out = new(string)
		**out = **in
	}
	if in.SqlDevWebURL != nil {
		in, out := &in.SqlDevWebURL, &out.SqlDevWebURL
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseSpecConnectionUrls.
func (in *AutonomousDatabaseSpecConnectionUrls) DeepCopy() *AutonomousDatabaseSpecConnectionUrls {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseSpecConnectionUrls)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseSpecCustomerContacts) DeepCopyInto(out *AutonomousDatabaseSpecCustomerContacts) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseSpecCustomerContacts.
func (in *AutonomousDatabaseSpecCustomerContacts) DeepCopy() *AutonomousDatabaseSpecCustomerContacts {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseSpecCustomerContacts)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseSpecKeyHistoryEntry) DeepCopyInto(out *AutonomousDatabaseSpecKeyHistoryEntry) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.TimeActivated != nil {
		in, out := &in.TimeActivated, &out.TimeActivated
		*out = new(string)
		**out = **in
	}
	if in.VaultID != nil {
		in, out := &in.VaultID, &out.VaultID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseSpecKeyHistoryEntry.
func (in *AutonomousDatabaseSpecKeyHistoryEntry) DeepCopy() *AutonomousDatabaseSpecKeyHistoryEntry {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseSpecKeyHistoryEntry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseSpecResource) DeepCopyInto(out *AutonomousDatabaseSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdminPassword != nil {
		in, out := &in.AdminPassword, &out.AdminPassword
		*out = new(string)
		**out = **in
	}
	if in.ApexDetails != nil {
		in, out := &in.ApexDetails, &out.ApexDetails
		*out = new(AutonomousDatabaseSpecApexDetails)
		(*in).DeepCopyInto(*out)
	}
	if in.ArePrimaryWhitelistedIPSUsed != nil {
		in, out := &in.ArePrimaryWhitelistedIPSUsed, &out.ArePrimaryWhitelistedIPSUsed
		*out = new(bool)
		**out = **in
	}
	if in.AutonomousContainerDatabaseID != nil {
		in, out := &in.AutonomousContainerDatabaseID, &out.AutonomousContainerDatabaseID
		*out = new(string)
		**out = **in
	}
	if in.AutonomousDatabaseBackupID != nil {
		in, out := &in.AutonomousDatabaseBackupID, &out.AutonomousDatabaseBackupID
		*out = new(string)
		**out = **in
	}
	if in.AutonomousDatabaseID != nil {
		in, out := &in.AutonomousDatabaseID, &out.AutonomousDatabaseID
		*out = new(string)
		**out = **in
	}
	if in.AvailableUpgradeVersions != nil {
		in, out := &in.AvailableUpgradeVersions, &out.AvailableUpgradeVersions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.BackupConfig != nil {
		in, out := &in.BackupConfig, &out.BackupConfig
		*out = new(AutonomousDatabaseSpecBackupConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.CloneType != nil {
		in, out := &in.CloneType, &out.CloneType
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ConnectionStrings != nil {
		in, out := &in.ConnectionStrings, &out.ConnectionStrings
		*out = new(AutonomousDatabaseSpecConnectionStrings)
		(*in).DeepCopyInto(*out)
	}
	if in.ConnectionUrls != nil {
		in, out := &in.ConnectionUrls, &out.ConnectionUrls
		*out = new(AutonomousDatabaseSpecConnectionUrls)
		(*in).DeepCopyInto(*out)
	}
	if in.CpuCoreCount != nil {
		in, out := &in.CpuCoreCount, &out.CpuCoreCount
		*out = new(int64)
		**out = **in
	}
	if in.CustomerContacts != nil {
		in, out := &in.CustomerContacts, &out.CustomerContacts
		*out = make([]AutonomousDatabaseSpecCustomerContacts, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataSafeStatus != nil {
		in, out := &in.DataSafeStatus, &out.DataSafeStatus
		*out = new(string)
		**out = **in
	}
	if in.DataStorageSizeInGb != nil {
		in, out := &in.DataStorageSizeInGb, &out.DataStorageSizeInGb
		*out = new(int64)
		**out = **in
	}
	if in.DataStorageSizeInTbs != nil {
		in, out := &in.DataStorageSizeInTbs, &out.DataStorageSizeInTbs
		*out = new(int64)
		**out = **in
	}
	if in.DbName != nil {
		in, out := &in.DbName, &out.DbName
		*out = new(string)
		**out = **in
	}
	if in.DbVersion != nil {
		in, out := &in.DbVersion, &out.DbVersion
		*out = new(string)
		**out = **in
	}
	if in.DbWorkload != nil {
		in, out := &in.DbWorkload, &out.DbWorkload
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FailedDataRecoveryInSeconds != nil {
		in, out := &in.FailedDataRecoveryInSeconds, &out.FailedDataRecoveryInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.InfrastructureType != nil {
		in, out := &in.InfrastructureType, &out.InfrastructureType
		*out = new(string)
		**out = **in
	}
	if in.IsAccessControlEnabled != nil {
		in, out := &in.IsAccessControlEnabled, &out.IsAccessControlEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsAutoScalingEnabled != nil {
		in, out := &in.IsAutoScalingEnabled, &out.IsAutoScalingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsDataGuardEnabled != nil {
		in, out := &in.IsDataGuardEnabled, &out.IsDataGuardEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsDedicated != nil {
		in, out := &in.IsDedicated, &out.IsDedicated
		*out = new(bool)
		**out = **in
	}
	if in.IsFreeTier != nil {
		in, out := &in.IsFreeTier, &out.IsFreeTier
		*out = new(bool)
		**out = **in
	}
	if in.IsPreview != nil {
		in, out := &in.IsPreview, &out.IsPreview
		*out = new(bool)
		**out = **in
	}
	if in.IsPreviewVersionWithServiceTermsAccepted != nil {
		in, out := &in.IsPreviewVersionWithServiceTermsAccepted, &out.IsPreviewVersionWithServiceTermsAccepted
		*out = new(bool)
		**out = **in
	}
	if in.IsRefreshableClone != nil {
		in, out := &in.IsRefreshableClone, &out.IsRefreshableClone
		*out = new(bool)
		**out = **in
	}
	if in.KeyHistoryEntry != nil {
		in, out := &in.KeyHistoryEntry, &out.KeyHistoryEntry
		*out = make([]AutonomousDatabaseSpecKeyHistoryEntry, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyStoreID != nil {
		in, out := &in.KeyStoreID, &out.KeyStoreID
		*out = new(string)
		**out = **in
	}
	if in.KeyStoreWalletName != nil {
		in, out := &in.KeyStoreWalletName, &out.KeyStoreWalletName
		*out = new(string)
		**out = **in
	}
	if in.KmsKeyID != nil {
		in, out := &in.KmsKeyID, &out.KmsKeyID
		*out = new(string)
		**out = **in
	}
	if in.KmsKeyLifecycleDetails != nil {
		in, out := &in.KmsKeyLifecycleDetails, &out.KmsKeyLifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.LicenseModel != nil {
		in, out := &in.LicenseModel, &out.LicenseModel
		*out = new(string)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.NsgIDS != nil {
		in, out := &in.NsgIDS, &out.NsgIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.OcpuCount != nil {
		in, out := &in.OcpuCount, &out.OcpuCount
		*out = new(float64)
		**out = **in
	}
	if in.OpenMode != nil {
		in, out := &in.OpenMode, &out.OpenMode
		*out = new(string)
		**out = **in
	}
	if in.OperationsInsightsStatus != nil {
		in, out := &in.OperationsInsightsStatus, &out.OperationsInsightsStatus
		*out = new(string)
		**out = **in
	}
	if in.PermissionLevel != nil {
		in, out := &in.PermissionLevel, &out.PermissionLevel
		*out = new(string)
		**out = **in
	}
	if in.PrivateEndpoint != nil {
		in, out := &in.PrivateEndpoint, &out.PrivateEndpoint
		*out = new(string)
		**out = **in
	}
	if in.PrivateEndpointIP != nil {
		in, out := &in.PrivateEndpointIP, &out.PrivateEndpointIP
		*out = new(string)
		**out = **in
	}
	if in.PrivateEndpointLabel != nil {
		in, out := &in.PrivateEndpointLabel, &out.PrivateEndpointLabel
		*out = new(string)
		**out = **in
	}
	if in.RefreshableMode != nil {
		in, out := &in.RefreshableMode, &out.RefreshableMode
		*out = new(string)
		**out = **in
	}
	if in.RefreshableStatus != nil {
		in, out := &in.RefreshableStatus, &out.RefreshableStatus
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.RotateKeyTrigger != nil {
		in, out := &in.RotateKeyTrigger, &out.RotateKeyTrigger
		*out = new(bool)
		**out = **in
	}
	if in.ServiceConsoleURL != nil {
		in, out := &in.ServiceConsoleURL, &out.ServiceConsoleURL
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.SourceID != nil {
		in, out := &in.SourceID, &out.SourceID
		*out = new(string)
		**out = **in
	}
	if in.StandbyDb != nil {
		in, out := &in.StandbyDb, &out.StandbyDb
		*out = new(AutonomousDatabaseSpecStandbyDb)
		(*in).DeepCopyInto(*out)
	}
	if in.StandbyWhitelistedIPS != nil {
		in, out := &in.StandbyWhitelistedIPS, &out.StandbyWhitelistedIPS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SwitchoverTo != nil {
		in, out := &in.SwitchoverTo, &out.SwitchoverTo
		*out = new(string)
		**out = **in
	}
	if in.SystemTags != nil {
		in, out := &in.SystemTags, &out.SystemTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeDeletionOfFreeAutonomousDatabase != nil {
		in, out := &in.TimeDeletionOfFreeAutonomousDatabase, &out.TimeDeletionOfFreeAutonomousDatabase
		*out = new(string)
		**out = **in
	}
	if in.TimeMaintenanceBegin != nil {
		in, out := &in.TimeMaintenanceBegin, &out.TimeMaintenanceBegin
		*out = new(string)
		**out = **in
	}
	if in.TimeMaintenanceEnd != nil {
		in, out := &in.TimeMaintenanceEnd, &out.TimeMaintenanceEnd
		*out = new(string)
		**out = **in
	}
	if in.TimeOfLastFailover != nil {
		in, out := &in.TimeOfLastFailover, &out.TimeOfLastFailover
		*out = new(string)
		**out = **in
	}
	if in.TimeOfLastRefresh != nil {
		in, out := &in.TimeOfLastRefresh, &out.TimeOfLastRefresh
		*out = new(string)
		**out = **in
	}
	if in.TimeOfLastRefreshPoint != nil {
		in, out := &in.TimeOfLastRefreshPoint, &out.TimeOfLastRefreshPoint
		*out = new(string)
		**out = **in
	}
	if in.TimeOfLastSwitchover != nil {
		in, out := &in.TimeOfLastSwitchover, &out.TimeOfLastSwitchover
		*out = new(string)
		**out = **in
	}
	if in.TimeOfNextRefresh != nil {
		in, out := &in.TimeOfNextRefresh, &out.TimeOfNextRefresh
		*out = new(string)
		**out = **in
	}
	if in.TimeReclamationOfFreeAutonomousDatabase != nil {
		in, out := &in.TimeReclamationOfFreeAutonomousDatabase, &out.TimeReclamationOfFreeAutonomousDatabase
		*out = new(string)
		**out = **in
	}
	if in.Timestamp != nil {
		in, out := &in.Timestamp, &out.Timestamp
		*out = new(string)
		**out = **in
	}
	if in.UsedDataStorageSizeInTbs != nil {
		in, out := &in.UsedDataStorageSizeInTbs, &out.UsedDataStorageSizeInTbs
		*out = new(int64)
		**out = **in
	}
	if in.VaultID != nil {
		in, out := &in.VaultID, &out.VaultID
		*out = new(string)
		**out = **in
	}
	if in.WhitelistedIPS != nil {
		in, out := &in.WhitelistedIPS, &out.WhitelistedIPS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseSpecResource.
func (in *AutonomousDatabaseSpecResource) DeepCopy() *AutonomousDatabaseSpecResource {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseSpecStandbyDb) DeepCopyInto(out *AutonomousDatabaseSpecStandbyDb) {
	*out = *in
	if in.LagTimeInSeconds != nil {
		in, out := &in.LagTimeInSeconds, &out.LagTimeInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseSpecStandbyDb.
func (in *AutonomousDatabaseSpecStandbyDb) DeepCopy() *AutonomousDatabaseSpecStandbyDb {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseSpecStandbyDb)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseStatus) DeepCopyInto(out *AutonomousDatabaseStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseStatus.
func (in *AutonomousDatabaseStatus) DeepCopy() *AutonomousDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseWallet) DeepCopyInto(out *AutonomousDatabaseWallet) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseWallet.
func (in *AutonomousDatabaseWallet) DeepCopy() *AutonomousDatabaseWallet {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseWallet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutonomousDatabaseWallet) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseWalletList) DeepCopyInto(out *AutonomousDatabaseWalletList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AutonomousDatabaseWallet, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseWalletList.
func (in *AutonomousDatabaseWalletList) DeepCopy() *AutonomousDatabaseWalletList {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseWalletList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutonomousDatabaseWalletList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseWalletSpec) DeepCopyInto(out *AutonomousDatabaseWalletSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(AutonomousDatabaseWalletSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseWalletSpec.
func (in *AutonomousDatabaseWalletSpec) DeepCopy() *AutonomousDatabaseWalletSpec {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseWalletSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseWalletSpecResource) DeepCopyInto(out *AutonomousDatabaseWalletSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AutonomousDatabaseID != nil {
		in, out := &in.AutonomousDatabaseID, &out.AutonomousDatabaseID
		*out = new(string)
		**out = **in
	}
	if in.Base64EncodeContent != nil {
		in, out := &in.Base64EncodeContent, &out.Base64EncodeContent
		*out = new(bool)
		**out = **in
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.GenerateType != nil {
		in, out := &in.GenerateType, &out.GenerateType
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseWalletSpecResource.
func (in *AutonomousDatabaseWalletSpecResource) DeepCopy() *AutonomousDatabaseWalletSpecResource {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseWalletSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseWalletStatus) DeepCopyInto(out *AutonomousDatabaseWalletStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseWalletStatus.
func (in *AutonomousDatabaseWalletStatus) DeepCopy() *AutonomousDatabaseWalletStatus {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseWalletStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousExadataInfrastructure) DeepCopyInto(out *AutonomousExadataInfrastructure) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousExadataInfrastructure.
func (in *AutonomousExadataInfrastructure) DeepCopy() *AutonomousExadataInfrastructure {
	if in == nil {
		return nil
	}
	out := new(AutonomousExadataInfrastructure)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutonomousExadataInfrastructure) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousExadataInfrastructureList) DeepCopyInto(out *AutonomousExadataInfrastructureList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AutonomousExadataInfrastructure, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousExadataInfrastructureList.
func (in *AutonomousExadataInfrastructureList) DeepCopy() *AutonomousExadataInfrastructureList {
	if in == nil {
		return nil
	}
	out := new(AutonomousExadataInfrastructureList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutonomousExadataInfrastructureList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousExadataInfrastructureSpec) DeepCopyInto(out *AutonomousExadataInfrastructureSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(AutonomousExadataInfrastructureSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousExadataInfrastructureSpec.
func (in *AutonomousExadataInfrastructureSpec) DeepCopy() *AutonomousExadataInfrastructureSpec {
	if in == nil {
		return nil
	}
	out := new(AutonomousExadataInfrastructureSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousExadataInfrastructureSpecMaintenanceWindow) DeepCopyInto(out *AutonomousExadataInfrastructureSpecMaintenanceWindow) {
	*out = *in
	if in.DaysOfWeek != nil {
		in, out := &in.DaysOfWeek, &out.DaysOfWeek
		*out = make([]AutonomousExadataInfrastructureSpecMaintenanceWindowDaysOfWeek, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HoursOfDay != nil {
		in, out := &in.HoursOfDay, &out.HoursOfDay
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.LeadTimeInWeeks != nil {
		in, out := &in.LeadTimeInWeeks, &out.LeadTimeInWeeks
		*out = new(int64)
		**out = **in
	}
	if in.Months != nil {
		in, out := &in.Months, &out.Months
		*out = make([]AutonomousExadataInfrastructureSpecMaintenanceWindowMonths, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Preference != nil {
		in, out := &in.Preference, &out.Preference
		*out = new(string)
		**out = **in
	}
	if in.WeeksOfMonth != nil {
		in, out := &in.WeeksOfMonth, &out.WeeksOfMonth
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousExadataInfrastructureSpecMaintenanceWindow.
func (in *AutonomousExadataInfrastructureSpecMaintenanceWindow) DeepCopy() *AutonomousExadataInfrastructureSpecMaintenanceWindow {
	if in == nil {
		return nil
	}
	out := new(AutonomousExadataInfrastructureSpecMaintenanceWindow)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousExadataInfrastructureSpecMaintenanceWindowDaysOfWeek) DeepCopyInto(out *AutonomousExadataInfrastructureSpecMaintenanceWindowDaysOfWeek) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousExadataInfrastructureSpecMaintenanceWindowDaysOfWeek.
func (in *AutonomousExadataInfrastructureSpecMaintenanceWindowDaysOfWeek) DeepCopy() *AutonomousExadataInfrastructureSpecMaintenanceWindowDaysOfWeek {
	if in == nil {
		return nil
	}
	out := new(AutonomousExadataInfrastructureSpecMaintenanceWindowDaysOfWeek)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousExadataInfrastructureSpecMaintenanceWindowDetails) DeepCopyInto(out *AutonomousExadataInfrastructureSpecMaintenanceWindowDetails) {
	*out = *in
	if in.DaysOfWeek != nil {
		in, out := &in.DaysOfWeek, &out.DaysOfWeek
		*out = make([]AutonomousExadataInfrastructureSpecMaintenanceWindowDetailsDaysOfWeek, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HoursOfDay != nil {
		in, out := &in.HoursOfDay, &out.HoursOfDay
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.LeadTimeInWeeks != nil {
		in, out := &in.LeadTimeInWeeks, &out.LeadTimeInWeeks
		*out = new(int64)
		**out = **in
	}
	if in.Months != nil {
		in, out := &in.Months, &out.Months
		*out = make([]AutonomousExadataInfrastructureSpecMaintenanceWindowDetailsMonths, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Preference != nil {
		in, out := &in.Preference, &out.Preference
		*out = new(string)
		**out = **in
	}
	if in.WeeksOfMonth != nil {
		in, out := &in.WeeksOfMonth, &out.WeeksOfMonth
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousExadataInfrastructureSpecMaintenanceWindowDetails.
func (in *AutonomousExadataInfrastructureSpecMaintenanceWindowDetails) DeepCopy() *AutonomousExadataInfrastructureSpecMaintenanceWindowDetails {
	if in == nil {
		return nil
	}
	out := new(AutonomousExadataInfrastructureSpecMaintenanceWindowDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousExadataInfrastructureSpecMaintenanceWindowDetailsDaysOfWeek) DeepCopyInto(out *AutonomousExadataInfrastructureSpecMaintenanceWindowDetailsDaysOfWeek) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousExadataInfrastructureSpecMaintenanceWindowDetailsDaysOfWeek.
func (in *AutonomousExadataInfrastructureSpecMaintenanceWindowDetailsDaysOfWeek) DeepCopy() *AutonomousExadataInfrastructureSpecMaintenanceWindowDetailsDaysOfWeek {
	if in == nil {
		return nil
	}
	out := new(AutonomousExadataInfrastructureSpecMaintenanceWindowDetailsDaysOfWeek)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousExadataInfrastructureSpecMaintenanceWindowDetailsMonths) DeepCopyInto(out *AutonomousExadataInfrastructureSpecMaintenanceWindowDetailsMonths) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousExadataInfrastructureSpecMaintenanceWindowDetailsMonths.
func (in *AutonomousExadataInfrastructureSpecMaintenanceWindowDetailsMonths) DeepCopy() *AutonomousExadataInfrastructureSpecMaintenanceWindowDetailsMonths {
	if in == nil {
		return nil
	}
	out := new(AutonomousExadataInfrastructureSpecMaintenanceWindowDetailsMonths)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousExadataInfrastructureSpecMaintenanceWindowMonths) DeepCopyInto(out *AutonomousExadataInfrastructureSpecMaintenanceWindowMonths) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousExadataInfrastructureSpecMaintenanceWindowMonths.
func (in *AutonomousExadataInfrastructureSpecMaintenanceWindowMonths) DeepCopy() *AutonomousExadataInfrastructureSpecMaintenanceWindowMonths {
	if in == nil {
		return nil
	}
	out := new(AutonomousExadataInfrastructureSpecMaintenanceWindowMonths)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousExadataInfrastructureSpecResource) DeepCopyInto(out *AutonomousExadataInfrastructureSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CreateAsync != nil {
		in, out := &in.CreateAsync, &out.CreateAsync
		*out = new(bool)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.LastMaintenanceRunID != nil {
		in, out := &in.LastMaintenanceRunID, &out.LastMaintenanceRunID
		*out = new(string)
		**out = **in
	}
	if in.LicenseModel != nil {
		in, out := &in.LicenseModel, &out.LicenseModel
		*out = new(string)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceWindow != nil {
		in, out := &in.MaintenanceWindow, &out.MaintenanceWindow
		*out = new(AutonomousExadataInfrastructureSpecMaintenanceWindow)
		(*in).DeepCopyInto(*out)
	}
	if in.MaintenanceWindowDetails != nil {
		in, out := &in.MaintenanceWindowDetails, &out.MaintenanceWindowDetails
		*out = new(AutonomousExadataInfrastructureSpecMaintenanceWindowDetails)
		(*in).DeepCopyInto(*out)
	}
	if in.NextMaintenanceRunID != nil {
		in, out := &in.NextMaintenanceRunID, &out.NextMaintenanceRunID
		*out = new(string)
		**out = **in
	}
	if in.NsgIDS != nil {
		in, out := &in.NsgIDS, &out.NsgIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ScanDNSName != nil {
		in, out := &in.ScanDNSName, &out.ScanDNSName
		*out = new(string)
		**out = **in
	}
	if in.Shape != nil {
		in, out := &in.Shape, &out.Shape
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousExadataInfrastructureSpecResource.
func (in *AutonomousExadataInfrastructureSpecResource) DeepCopy() *AutonomousExadataInfrastructureSpecResource {
	if in == nil {
		return nil
	}
	out := new(AutonomousExadataInfrastructureSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousExadataInfrastructureStatus) DeepCopyInto(out *AutonomousExadataInfrastructureStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousExadataInfrastructureStatus.
func (in *AutonomousExadataInfrastructureStatus) DeepCopy() *AutonomousExadataInfrastructureStatus {
	if in == nil {
		return nil
	}
	out := new(AutonomousExadataInfrastructureStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousVmCluster) DeepCopyInto(out *AutonomousVmCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousVmCluster.
func (in *AutonomousVmCluster) DeepCopy() *AutonomousVmCluster {
	if in == nil {
		return nil
	}
	out := new(AutonomousVmCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutonomousVmCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousVmClusterList) DeepCopyInto(out *AutonomousVmClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AutonomousVmCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousVmClusterList.
func (in *AutonomousVmClusterList) DeepCopy() *AutonomousVmClusterList {
	if in == nil {
		return nil
	}
	out := new(AutonomousVmClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutonomousVmClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousVmClusterSpec) DeepCopyInto(out *AutonomousVmClusterSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(AutonomousVmClusterSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousVmClusterSpec.
func (in *AutonomousVmClusterSpec) DeepCopy() *AutonomousVmClusterSpec {
	if in == nil {
		return nil
	}
	out := new(AutonomousVmClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousVmClusterSpecResource) DeepCopyInto(out *AutonomousVmClusterSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AvailableCpus != nil {
		in, out := &in.AvailableCpus, &out.AvailableCpus
		*out = new(int64)
		**out = **in
	}
	if in.AvailableDataStorageSizeInTbs != nil {
		in, out := &in.AvailableDataStorageSizeInTbs, &out.AvailableDataStorageSizeInTbs
		*out = new(float64)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CpusEnabled != nil {
		in, out := &in.CpusEnabled, &out.CpusEnabled
		*out = new(int64)
		**out = **in
	}
	if in.DataStorageSizeInTbs != nil {
		in, out := &in.DataStorageSizeInTbs, &out.DataStorageSizeInTbs
		*out = new(float64)
		**out = **in
	}
	if in.DbNodeStorageSizeInGbs != nil {
		in, out := &in.DbNodeStorageSizeInGbs, &out.DbNodeStorageSizeInGbs
		*out = new(int64)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExadataInfrastructureID != nil {
		in, out := &in.ExadataInfrastructureID, &out.ExadataInfrastructureID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.IsLocalBackupEnabled != nil {
		in, out := &in.IsLocalBackupEnabled, &out.IsLocalBackupEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LicenseModel != nil {
		in, out := &in.LicenseModel, &out.LicenseModel
		*out = new(string)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.MemorySizeInGbs != nil {
		in, out := &in.MemorySizeInGbs, &out.MemorySizeInGbs
		*out = new(int64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
	if in.VmClusterNetworkID != nil {
		in, out := &in.VmClusterNetworkID, &out.VmClusterNetworkID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousVmClusterSpecResource.
func (in *AutonomousVmClusterSpecResource) DeepCopy() *AutonomousVmClusterSpecResource {
	if in == nil {
		return nil
	}
	out := new(AutonomousVmClusterSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousVmClusterStatus) DeepCopyInto(out *AutonomousVmClusterStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousVmClusterStatus.
func (in *AutonomousVmClusterStatus) DeepCopy() *AutonomousVmClusterStatus {
	if in == nil {
		return nil
	}
	out := new(AutonomousVmClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Backup) DeepCopyInto(out *Backup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Backup.
func (in *Backup) DeepCopy() *Backup {
	if in == nil {
		return nil
	}
	out := new(Backup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Backup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupDestination) DeepCopyInto(out *BackupDestination) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupDestination.
func (in *BackupDestination) DeepCopy() *BackupDestination {
	if in == nil {
		return nil
	}
	out := new(BackupDestination)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackupDestination) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupDestinationList) DeepCopyInto(out *BackupDestinationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BackupDestination, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupDestinationList.
func (in *BackupDestinationList) DeepCopy() *BackupDestinationList {
	if in == nil {
		return nil
	}
	out := new(BackupDestinationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackupDestinationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupDestinationSpec) DeepCopyInto(out *BackupDestinationSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(BackupDestinationSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupDestinationSpec.
func (in *BackupDestinationSpec) DeepCopy() *BackupDestinationSpec {
	if in == nil {
		return nil
	}
	out := new(BackupDestinationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupDestinationSpecAssociatedDatabases) DeepCopyInto(out *BackupDestinationSpecAssociatedDatabases) {
	*out = *in
	if in.DbName != nil {
		in, out := &in.DbName, &out.DbName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupDestinationSpecAssociatedDatabases.
func (in *BackupDestinationSpecAssociatedDatabases) DeepCopy() *BackupDestinationSpecAssociatedDatabases {
	if in == nil {
		return nil
	}
	out := new(BackupDestinationSpecAssociatedDatabases)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupDestinationSpecMountTypeDetails) DeepCopyInto(out *BackupDestinationSpecMountTypeDetails) {
	*out = *in
	if in.LocalMountPointPath != nil {
		in, out := &in.LocalMountPointPath, &out.LocalMountPointPath
		*out = new(string)
		**out = **in
	}
	if in.MountType != nil {
		in, out := &in.MountType, &out.MountType
		*out = new(string)
		**out = **in
	}
	if in.NfsServer != nil {
		in, out := &in.NfsServer, &out.NfsServer
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NfsServerExport != nil {
		in, out := &in.NfsServerExport, &out.NfsServerExport
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupDestinationSpecMountTypeDetails.
func (in *BackupDestinationSpecMountTypeDetails) DeepCopy() *BackupDestinationSpecMountTypeDetails {
	if in == nil {
		return nil
	}
	out := new(BackupDestinationSpecMountTypeDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupDestinationSpecResource) DeepCopyInto(out *BackupDestinationSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AssociatedDatabases != nil {
		in, out := &in.AssociatedDatabases, &out.AssociatedDatabases
		*out = make([]BackupDestinationSpecAssociatedDatabases, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.LocalMountPointPath != nil {
		in, out := &in.LocalMountPointPath, &out.LocalMountPointPath
		*out = new(string)
		**out = **in
	}
	if in.MountTypeDetails != nil {
		in, out := &in.MountTypeDetails, &out.MountTypeDetails
		*out = new(BackupDestinationSpecMountTypeDetails)
		(*in).DeepCopyInto(*out)
	}
	if in.NfsMountType != nil {
		in, out := &in.NfsMountType, &out.NfsMountType
		*out = new(string)
		**out = **in
	}
	if in.NfsServer != nil {
		in, out := &in.NfsServer, &out.NfsServer
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NfsServerExport != nil {
		in, out := &in.NfsServerExport, &out.NfsServerExport
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VpcUsers != nil {
		in, out := &in.VpcUsers, &out.VpcUsers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupDestinationSpecResource.
func (in *BackupDestinationSpecResource) DeepCopy() *BackupDestinationSpecResource {
	if in == nil {
		return nil
	}
	out := new(BackupDestinationSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupDestinationStatus) DeepCopyInto(out *BackupDestinationStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupDestinationStatus.
func (in *BackupDestinationStatus) DeepCopy() *BackupDestinationStatus {
	if in == nil {
		return nil
	}
	out := new(BackupDestinationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupList) DeepCopyInto(out *BackupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Backup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupList.
func (in *BackupList) DeepCopy() *BackupList {
	if in == nil {
		return nil
	}
	out := new(BackupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupSpec) DeepCopyInto(out *BackupSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(BackupSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupSpec.
func (in *BackupSpec) DeepCopy() *BackupSpec {
	if in == nil {
		return nil
	}
	out := new(BackupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupSpecResource) DeepCopyInto(out *BackupSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseEdition != nil {
		in, out := &in.DatabaseEdition, &out.DatabaseEdition
		*out = new(string)
		**out = **in
	}
	if in.DatabaseID != nil {
		in, out := &in.DatabaseID, &out.DatabaseID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseSizeInGbs != nil {
		in, out := &in.DatabaseSizeInGbs, &out.DatabaseSizeInGbs
		*out = new(float64)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.KmsKeyID != nil {
		in, out := &in.KmsKeyID, &out.KmsKeyID
		*out = new(string)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.Shape != nil {
		in, out := &in.Shape, &out.Shape
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeEnded != nil {
		in, out := &in.TimeEnded, &out.TimeEnded
		*out = new(string)
		**out = **in
	}
	if in.TimeStarted != nil {
		in, out := &in.TimeStarted, &out.TimeStarted
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupSpecResource.
func (in *BackupSpecResource) DeepCopy() *BackupSpecResource {
	if in == nil {
		return nil
	}
	out := new(BackupSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupStatus) DeepCopyInto(out *BackupStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupStatus.
func (in *BackupStatus) DeepCopy() *BackupStatus {
	if in == nil {
		return nil
	}
	out := new(BackupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudExadataInfrastructure) DeepCopyInto(out *CloudExadataInfrastructure) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudExadataInfrastructure.
func (in *CloudExadataInfrastructure) DeepCopy() *CloudExadataInfrastructure {
	if in == nil {
		return nil
	}
	out := new(CloudExadataInfrastructure)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CloudExadataInfrastructure) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudExadataInfrastructureList) DeepCopyInto(out *CloudExadataInfrastructureList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CloudExadataInfrastructure, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudExadataInfrastructureList.
func (in *CloudExadataInfrastructureList) DeepCopy() *CloudExadataInfrastructureList {
	if in == nil {
		return nil
	}
	out := new(CloudExadataInfrastructureList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CloudExadataInfrastructureList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudExadataInfrastructureSpec) DeepCopyInto(out *CloudExadataInfrastructureSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(CloudExadataInfrastructureSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudExadataInfrastructureSpec.
func (in *CloudExadataInfrastructureSpec) DeepCopy() *CloudExadataInfrastructureSpec {
	if in == nil {
		return nil
	}
	out := new(CloudExadataInfrastructureSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudExadataInfrastructureSpecCustomerContacts) DeepCopyInto(out *CloudExadataInfrastructureSpecCustomerContacts) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudExadataInfrastructureSpecCustomerContacts.
func (in *CloudExadataInfrastructureSpecCustomerContacts) DeepCopy() *CloudExadataInfrastructureSpecCustomerContacts {
	if in == nil {
		return nil
	}
	out := new(CloudExadataInfrastructureSpecCustomerContacts)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudExadataInfrastructureSpecMaintenanceWindow) DeepCopyInto(out *CloudExadataInfrastructureSpecMaintenanceWindow) {
	*out = *in
	if in.DaysOfWeek != nil {
		in, out := &in.DaysOfWeek, &out.DaysOfWeek
		*out = make([]CloudExadataInfrastructureSpecMaintenanceWindowDaysOfWeek, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HoursOfDay != nil {
		in, out := &in.HoursOfDay, &out.HoursOfDay
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.LeadTimeInWeeks != nil {
		in, out := &in.LeadTimeInWeeks, &out.LeadTimeInWeeks
		*out = new(int64)
		**out = **in
	}
	if in.Months != nil {
		in, out := &in.Months, &out.Months
		*out = make([]CloudExadataInfrastructureSpecMaintenanceWindowMonths, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Preference != nil {
		in, out := &in.Preference, &out.Preference
		*out = new(string)
		**out = **in
	}
	if in.WeeksOfMonth != nil {
		in, out := &in.WeeksOfMonth, &out.WeeksOfMonth
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudExadataInfrastructureSpecMaintenanceWindow.
func (in *CloudExadataInfrastructureSpecMaintenanceWindow) DeepCopy() *CloudExadataInfrastructureSpecMaintenanceWindow {
	if in == nil {
		return nil
	}
	out := new(CloudExadataInfrastructureSpecMaintenanceWindow)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudExadataInfrastructureSpecMaintenanceWindowDaysOfWeek) DeepCopyInto(out *CloudExadataInfrastructureSpecMaintenanceWindowDaysOfWeek) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudExadataInfrastructureSpecMaintenanceWindowDaysOfWeek.
func (in *CloudExadataInfrastructureSpecMaintenanceWindowDaysOfWeek) DeepCopy() *CloudExadataInfrastructureSpecMaintenanceWindowDaysOfWeek {
	if in == nil {
		return nil
	}
	out := new(CloudExadataInfrastructureSpecMaintenanceWindowDaysOfWeek)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudExadataInfrastructureSpecMaintenanceWindowMonths) DeepCopyInto(out *CloudExadataInfrastructureSpecMaintenanceWindowMonths) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudExadataInfrastructureSpecMaintenanceWindowMonths.
func (in *CloudExadataInfrastructureSpecMaintenanceWindowMonths) DeepCopy() *CloudExadataInfrastructureSpecMaintenanceWindowMonths {
	if in == nil {
		return nil
	}
	out := new(CloudExadataInfrastructureSpecMaintenanceWindowMonths)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudExadataInfrastructureSpecResource) DeepCopyInto(out *CloudExadataInfrastructureSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.AvailableStorageSizeInGbs != nil {
		in, out := &in.AvailableStorageSizeInGbs, &out.AvailableStorageSizeInGbs
		*out = new(int64)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ComputeCount != nil {
		in, out := &in.ComputeCount, &out.ComputeCount
		*out = new(int64)
		**out = **in
	}
	if in.CustomerContacts != nil {
		in, out := &in.CustomerContacts, &out.CustomerContacts
		*out = make([]CloudExadataInfrastructureSpecCustomerContacts, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LastMaintenanceRunID != nil {
		in, out := &in.LastMaintenanceRunID, &out.LastMaintenanceRunID
		*out = new(string)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceWindow != nil {
		in, out := &in.MaintenanceWindow, &out.MaintenanceWindow
		*out = new(CloudExadataInfrastructureSpecMaintenanceWindow)
		(*in).DeepCopyInto(*out)
	}
	if in.NextMaintenanceRunID != nil {
		in, out := &in.NextMaintenanceRunID, &out.NextMaintenanceRunID
		*out = new(string)
		**out = **in
	}
	if in.Shape != nil {
		in, out := &in.Shape, &out.Shape
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.StorageCount != nil {
		in, out := &in.StorageCount, &out.StorageCount
		*out = new(int64)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TotalStorageSizeInGbs != nil {
		in, out := &in.TotalStorageSizeInGbs, &out.TotalStorageSizeInGbs
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudExadataInfrastructureSpecResource.
func (in *CloudExadataInfrastructureSpecResource) DeepCopy() *CloudExadataInfrastructureSpecResource {
	if in == nil {
		return nil
	}
	out := new(CloudExadataInfrastructureSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudExadataInfrastructureStatus) DeepCopyInto(out *CloudExadataInfrastructureStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudExadataInfrastructureStatus.
func (in *CloudExadataInfrastructureStatus) DeepCopy() *CloudExadataInfrastructureStatus {
	if in == nil {
		return nil
	}
	out := new(CloudExadataInfrastructureStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudVmCluster) DeepCopyInto(out *CloudVmCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudVmCluster.
func (in *CloudVmCluster) DeepCopy() *CloudVmCluster {
	if in == nil {
		return nil
	}
	out := new(CloudVmCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CloudVmCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudVmClusterList) DeepCopyInto(out *CloudVmClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CloudVmCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudVmClusterList.
func (in *CloudVmClusterList) DeepCopy() *CloudVmClusterList {
	if in == nil {
		return nil
	}
	out := new(CloudVmClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CloudVmClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudVmClusterSpec) DeepCopyInto(out *CloudVmClusterSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(CloudVmClusterSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudVmClusterSpec.
func (in *CloudVmClusterSpec) DeepCopy() *CloudVmClusterSpec {
	if in == nil {
		return nil
	}
	out := new(CloudVmClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudVmClusterSpecIormConfigCache) DeepCopyInto(out *CloudVmClusterSpecIormConfigCache) {
	*out = *in
	if in.DbPlans != nil {
		in, out := &in.DbPlans, &out.DbPlans
		*out = make([]CloudVmClusterSpecIormConfigCacheDbPlans, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.Objective != nil {
		in, out := &in.Objective, &out.Objective
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudVmClusterSpecIormConfigCache.
func (in *CloudVmClusterSpecIormConfigCache) DeepCopy() *CloudVmClusterSpecIormConfigCache {
	if in == nil {
		return nil
	}
	out := new(CloudVmClusterSpecIormConfigCache)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudVmClusterSpecIormConfigCacheDbPlans) DeepCopyInto(out *CloudVmClusterSpecIormConfigCacheDbPlans) {
	*out = *in
	if in.DbName != nil {
		in, out := &in.DbName, &out.DbName
		*out = new(string)
		**out = **in
	}
	if in.FlashCacheLimit != nil {
		in, out := &in.FlashCacheLimit, &out.FlashCacheLimit
		*out = new(string)
		**out = **in
	}
	if in.Share != nil {
		in, out := &in.Share, &out.Share
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudVmClusterSpecIormConfigCacheDbPlans.
func (in *CloudVmClusterSpecIormConfigCacheDbPlans) DeepCopy() *CloudVmClusterSpecIormConfigCacheDbPlans {
	if in == nil {
		return nil
	}
	out := new(CloudVmClusterSpecIormConfigCacheDbPlans)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudVmClusterSpecResource) DeepCopyInto(out *CloudVmClusterSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupNetworkNsgIDS != nil {
		in, out := &in.BackupNetworkNsgIDS, &out.BackupNetworkNsgIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.BackupSubnetID != nil {
		in, out := &in.BackupSubnetID, &out.BackupSubnetID
		*out = new(string)
		**out = **in
	}
	if in.CloudExadataInfrastructureID != nil {
		in, out := &in.CloudExadataInfrastructureID, &out.CloudExadataInfrastructureID
		*out = new(string)
		**out = **in
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CpuCoreCount != nil {
		in, out := &in.CpuCoreCount, &out.CpuCoreCount
		*out = new(int64)
		**out = **in
	}
	if in.CreateAsync != nil {
		in, out := &in.CreateAsync, &out.CreateAsync
		*out = new(bool)
		**out = **in
	}
	if in.DataStoragePercentage != nil {
		in, out := &in.DataStoragePercentage, &out.DataStoragePercentage
		*out = new(int64)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DiskRedundancy != nil {
		in, out := &in.DiskRedundancy, &out.DiskRedundancy
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.GiVersion != nil {
		in, out := &in.GiVersion, &out.GiVersion
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.IormConfigCache != nil {
		in, out := &in.IormConfigCache, &out.IormConfigCache
		*out = new(CloudVmClusterSpecIormConfigCache)
		(*in).DeepCopyInto(*out)
	}
	if in.IsLocalBackupEnabled != nil {
		in, out := &in.IsLocalBackupEnabled, &out.IsLocalBackupEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSparseDiskgroupEnabled != nil {
		in, out := &in.IsSparseDiskgroupEnabled, &out.IsSparseDiskgroupEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LastUpdateHistoryEntryID != nil {
		in, out := &in.LastUpdateHistoryEntryID, &out.LastUpdateHistoryEntryID
		*out = new(string)
		**out = **in
	}
	if in.LicenseModel != nil {
		in, out := &in.LicenseModel, &out.LicenseModel
		*out = new(string)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.ListenerPort != nil {
		in, out := &in.ListenerPort, &out.ListenerPort
		*out = new(string)
		**out = **in
	}
	if in.NodeCount != nil {
		in, out := &in.NodeCount, &out.NodeCount
		*out = new(int64)
		**out = **in
	}
	if in.NsgIDS != nil {
		in, out := &in.NsgIDS, &out.NsgIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ScanDNSName != nil {
		in, out := &in.ScanDNSName, &out.ScanDNSName
		*out = new(string)
		**out = **in
	}
	if in.ScanDNSRecordID != nil {
		in, out := &in.ScanDNSRecordID, &out.ScanDNSRecordID
		*out = new(string)
		**out = **in
	}
	if in.ScanIPIDS != nil {
		in, out := &in.ScanIPIDS, &out.ScanIPIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Shape != nil {
		in, out := &in.Shape, &out.Shape
		*out = new(string)
		**out = **in
	}
	if in.SshPublicKeys != nil {
		in, out := &in.SshPublicKeys, &out.SshPublicKeys
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.StorageSizeInGbs != nil {
		in, out := &in.StorageSizeInGbs, &out.StorageSizeInGbs
		*out = new(int64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SystemVersion != nil {
		in, out := &in.SystemVersion, &out.SystemVersion
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
	if in.VipIDS != nil {
		in, out := &in.VipIDS, &out.VipIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudVmClusterSpecResource.
func (in *CloudVmClusterSpecResource) DeepCopy() *CloudVmClusterSpecResource {
	if in == nil {
		return nil
	}
	out := new(CloudVmClusterSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudVmClusterStatus) DeepCopyInto(out *CloudVmClusterStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudVmClusterStatus.
func (in *CloudVmClusterStatus) DeepCopy() *CloudVmClusterStatus {
	if in == nil {
		return nil
	}
	out := new(CloudVmClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataGuardAssociation) DeepCopyInto(out *DataGuardAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataGuardAssociation.
func (in *DataGuardAssociation) DeepCopy() *DataGuardAssociation {
	if in == nil {
		return nil
	}
	out := new(DataGuardAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataGuardAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataGuardAssociationList) DeepCopyInto(out *DataGuardAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataGuardAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataGuardAssociationList.
func (in *DataGuardAssociationList) DeepCopy() *DataGuardAssociationList {
	if in == nil {
		return nil
	}
	out := new(DataGuardAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataGuardAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataGuardAssociationSpec) DeepCopyInto(out *DataGuardAssociationSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(DataGuardAssociationSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataGuardAssociationSpec.
func (in *DataGuardAssociationSpec) DeepCopy() *DataGuardAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(DataGuardAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataGuardAssociationSpecResource) DeepCopyInto(out *DataGuardAssociationSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.ApplyLag != nil {
		in, out := &in.ApplyLag, &out.ApplyLag
		*out = new(string)
		**out = **in
	}
	if in.ApplyRate != nil {
		in, out := &in.ApplyRate, &out.ApplyRate
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupNetworkNsgIDS != nil {
		in, out := &in.BackupNetworkNsgIDS, &out.BackupNetworkNsgIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.CreateAsync != nil {
		in, out := &in.CreateAsync, &out.CreateAsync
		*out = new(bool)
		**out = **in
	}
	if in.CreationType != nil {
		in, out := &in.CreationType, &out.CreationType
		*out = new(string)
		**out = **in
	}
	if in.DatabaseAdminPassword != nil {
		in, out := &in.DatabaseAdminPassword, &out.DatabaseAdminPassword
		*out = new(string)
		**out = **in
	}
	if in.DatabaseID != nil {
		in, out := &in.DatabaseID, &out.DatabaseID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseSoftwareImageID != nil {
		in, out := &in.DatabaseSoftwareImageID, &out.DatabaseSoftwareImageID
		*out = new(string)
		**out = **in
	}
	if in.DeleteStandbyDbHomeOnDelete != nil {
		in, out := &in.DeleteStandbyDbHomeOnDelete, &out.DeleteStandbyDbHomeOnDelete
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.NsgIDS != nil {
		in, out := &in.NsgIDS, &out.NsgIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PeerDataGuardAssociationID != nil {
		in, out := &in.PeerDataGuardAssociationID, &out.PeerDataGuardAssociationID
		*out = new(string)
		**out = **in
	}
	if in.PeerDatabaseID != nil {
		in, out := &in.PeerDatabaseID, &out.PeerDatabaseID
		*out = new(string)
		**out = **in
	}
	if in.PeerDbHomeID != nil {
		in, out := &in.PeerDbHomeID, &out.PeerDbHomeID
		*out = new(string)
		**out = **in
	}
	if in.PeerDbSystemID != nil {
		in, out := &in.PeerDbSystemID, &out.PeerDbSystemID
		*out = new(string)
		**out = **in
	}
	if in.PeerRole != nil {
		in, out := &in.PeerRole, &out.PeerRole
		*out = new(string)
		**out = **in
	}
	if in.PeerVmClusterID != nil {
		in, out := &in.PeerVmClusterID, &out.PeerVmClusterID
		*out = new(string)
		**out = **in
	}
	if in.ProtectionMode != nil {
		in, out := &in.ProtectionMode, &out.ProtectionMode
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Shape != nil {
		in, out := &in.Shape, &out.Shape
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TransportType != nil {
		in, out := &in.TransportType, &out.TransportType
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataGuardAssociationSpecResource.
func (in *DataGuardAssociationSpecResource) DeepCopy() *DataGuardAssociationSpecResource {
	if in == nil {
		return nil
	}
	out := new(DataGuardAssociationSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataGuardAssociationStatus) DeepCopyInto(out *DataGuardAssociationStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataGuardAssociationStatus.
func (in *DataGuardAssociationStatus) DeepCopy() *DataGuardAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(DataGuardAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Database) DeepCopyInto(out *Database) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Database.
func (in *Database) DeepCopy() *Database {
	if in == nil {
		return nil
	}
	out := new(Database)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Database) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseList) DeepCopyInto(out *DatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Database, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseList.
func (in *DatabaseList) DeepCopy() *DatabaseList {
	if in == nil {
		return nil
	}
	out := new(DatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseSoftwareImage) DeepCopyInto(out *DatabaseSoftwareImage) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseSoftwareImage.
func (in *DatabaseSoftwareImage) DeepCopy() *DatabaseSoftwareImage {
	if in == nil {
		return nil
	}
	out := new(DatabaseSoftwareImage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatabaseSoftwareImage) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseSoftwareImageList) DeepCopyInto(out *DatabaseSoftwareImageList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DatabaseSoftwareImage, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseSoftwareImageList.
func (in *DatabaseSoftwareImageList) DeepCopy() *DatabaseSoftwareImageList {
	if in == nil {
		return nil
	}
	out := new(DatabaseSoftwareImageList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatabaseSoftwareImageList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseSoftwareImageSpec) DeepCopyInto(out *DatabaseSoftwareImageSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(DatabaseSoftwareImageSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseSoftwareImageSpec.
func (in *DatabaseSoftwareImageSpec) DeepCopy() *DatabaseSoftwareImageSpec {
	if in == nil {
		return nil
	}
	out := new(DatabaseSoftwareImageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseSoftwareImageSpecResource) DeepCopyInto(out *DatabaseSoftwareImageSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseSoftwareImageIncludedPatches != nil {
		in, out := &in.DatabaseSoftwareImageIncludedPatches, &out.DatabaseSoftwareImageIncludedPatches
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DatabaseSoftwareImageOneOffPatches != nil {
		in, out := &in.DatabaseSoftwareImageOneOffPatches, &out.DatabaseSoftwareImageOneOffPatches
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DatabaseVersion != nil {
		in, out := &in.DatabaseVersion, &out.DatabaseVersion
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ImageShapeFamily != nil {
		in, out := &in.ImageShapeFamily, &out.ImageShapeFamily
		*out = new(string)
		**out = **in
	}
	if in.ImageType != nil {
		in, out := &in.ImageType, &out.ImageType
		*out = new(string)
		**out = **in
	}
	if in.IncludedPatchesSummary != nil {
		in, out := &in.IncludedPatchesSummary, &out.IncludedPatchesSummary
		*out = new(string)
		**out = **in
	}
	if in.IsUpgradeSupported != nil {
		in, out := &in.IsUpgradeSupported, &out.IsUpgradeSupported
		*out = new(bool)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.LsInventory != nil {
		in, out := &in.LsInventory, &out.LsInventory
		*out = new(string)
		**out = **in
	}
	if in.PatchSet != nil {
		in, out := &in.PatchSet, &out.PatchSet
		*out = new(string)
		**out = **in
	}
	if in.SourceDbHomeID != nil {
		in, out := &in.SourceDbHomeID, &out.SourceDbHomeID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseSoftwareImageSpecResource.
func (in *DatabaseSoftwareImageSpecResource) DeepCopy() *DatabaseSoftwareImageSpecResource {
	if in == nil {
		return nil
	}
	out := new(DatabaseSoftwareImageSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseSoftwareImageStatus) DeepCopyInto(out *DatabaseSoftwareImageStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseSoftwareImageStatus.
func (in *DatabaseSoftwareImageStatus) DeepCopy() *DatabaseSoftwareImageStatus {
	if in == nil {
		return nil
	}
	out := new(DatabaseSoftwareImageStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseSpec) DeepCopyInto(out *DatabaseSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(DatabaseSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseSpec.
func (in *DatabaseSpec) DeepCopy() *DatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(DatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseSpecConnectionStrings) DeepCopyInto(out *DatabaseSpecConnectionStrings) {
	*out = *in
	if in.AllConnectionStrings != nil {
		in, out := &in.AllConnectionStrings, &out.AllConnectionStrings
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.CdbDefault != nil {
		in, out := &in.CdbDefault, &out.CdbDefault
		*out = new(string)
		**out = **in
	}
	if in.CdbIPDefault != nil {
		in, out := &in.CdbIPDefault, &out.CdbIPDefault
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseSpecConnectionStrings.
func (in *DatabaseSpecConnectionStrings) DeepCopy() *DatabaseSpecConnectionStrings {
	if in == nil {
		return nil
	}
	out := new(DatabaseSpecConnectionStrings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseSpecDatabase) DeepCopyInto(out *DatabaseSpecDatabase) {
	*out = *in
	if in.AdminPassword != nil {
		in, out := &in.AdminPassword, &out.AdminPassword
		*out = new(string)
		**out = **in
	}
	if in.BackupID != nil {
		in, out := &in.BackupID, &out.BackupID
		*out = new(string)
		**out = **in
	}
	if in.BackupTdePassword != nil {
		in, out := &in.BackupTdePassword, &out.BackupTdePassword
		*out = new(string)
		**out = **in
	}
	if in.CharacterSet != nil {
		in, out := &in.CharacterSet, &out.CharacterSet
		*out = new(string)
		**out = **in
	}
	if in.DatabaseSoftwareImageID != nil {
		in, out := &in.DatabaseSoftwareImageID, &out.DatabaseSoftwareImageID
		*out = new(string)
		**out = **in
	}
	if in.DbBackupConfig != nil {
		in, out := &in.DbBackupConfig, &out.DbBackupConfig
		*out = new(DatabaseSpecDatabaseDbBackupConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.DbName != nil {
		in, out := &in.DbName, &out.DbName
		*out = new(string)
		**out = **in
	}
	if in.DbUniqueName != nil {
		in, out := &in.DbUniqueName, &out.DbUniqueName
		*out = new(string)
		**out = **in
	}
	if in.DbWorkload != nil {
		in, out := &in.DbWorkload, &out.DbWorkload
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.NcharacterSet != nil {
		in, out := &in.NcharacterSet, &out.NcharacterSet
		*out = new(string)
		**out = **in
	}
	if in.PdbName != nil {
		in, out := &in.PdbName, &out.PdbName
		*out = new(string)
		**out = **in
	}
	if in.TdeWalletPassword != nil {
		in, out := &in.TdeWalletPassword, &out.TdeWalletPassword
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseSpecDatabase.
func (in *DatabaseSpecDatabase) DeepCopy() *DatabaseSpecDatabase {
	if in == nil {
		return nil
	}
	out := new(DatabaseSpecDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseSpecDatabaseDbBackupConfig) DeepCopyInto(out *DatabaseSpecDatabaseDbBackupConfig) {
	*out = *in
	if in.AutoBackupEnabled != nil {
		in, out := &in.AutoBackupEnabled, &out.AutoBackupEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoBackupWindow != nil {
		in, out := &in.AutoBackupWindow, &out.AutoBackupWindow
		*out = new(string)
		**out = **in
	}
	if in.BackupDestinationDetails != nil {
		in, out := &in.BackupDestinationDetails, &out.BackupDestinationDetails
		*out = make([]DatabaseSpecDatabaseDbBackupConfigBackupDestinationDetails, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RecoveryWindowInDays != nil {
		in, out := &in.RecoveryWindowInDays, &out.RecoveryWindowInDays
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseSpecDatabaseDbBackupConfig.
func (in *DatabaseSpecDatabaseDbBackupConfig) DeepCopy() *DatabaseSpecDatabaseDbBackupConfig {
	if in == nil {
		return nil
	}
	out := new(DatabaseSpecDatabaseDbBackupConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseSpecDatabaseDbBackupConfigBackupDestinationDetails) DeepCopyInto(out *DatabaseSpecDatabaseDbBackupConfigBackupDestinationDetails) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseSpecDatabaseDbBackupConfigBackupDestinationDetails.
func (in *DatabaseSpecDatabaseDbBackupConfigBackupDestinationDetails) DeepCopy() *DatabaseSpecDatabaseDbBackupConfigBackupDestinationDetails {
	if in == nil {
		return nil
	}
	out := new(DatabaseSpecDatabaseDbBackupConfigBackupDestinationDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseSpecDbBackupConfig) DeepCopyInto(out *DatabaseSpecDbBackupConfig) {
	*out = *in
	if in.AutoBackupEnabled != nil {
		in, out := &in.AutoBackupEnabled, &out.AutoBackupEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoBackupWindow != nil {
		in, out := &in.AutoBackupWindow, &out.AutoBackupWindow
		*out = new(string)
		**out = **in
	}
	if in.BackupDestinationDetails != nil {
		in, out := &in.BackupDestinationDetails, &out.BackupDestinationDetails
		*out = make([]DatabaseSpecDbBackupConfigBackupDestinationDetails, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RecoveryWindowInDays != nil {
		in, out := &in.RecoveryWindowInDays, &out.RecoveryWindowInDays
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseSpecDbBackupConfig.
func (in *DatabaseSpecDbBackupConfig) DeepCopy() *DatabaseSpecDbBackupConfig {
	if in == nil {
		return nil
	}
	out := new(DatabaseSpecDbBackupConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseSpecDbBackupConfigBackupDestinationDetails) DeepCopyInto(out *DatabaseSpecDbBackupConfigBackupDestinationDetails) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseSpecDbBackupConfigBackupDestinationDetails.
func (in *DatabaseSpecDbBackupConfigBackupDestinationDetails) DeepCopy() *DatabaseSpecDbBackupConfigBackupDestinationDetails {
	if in == nil {
		return nil
	}
	out := new(DatabaseSpecDbBackupConfigBackupDestinationDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseSpecResource) DeepCopyInto(out *DatabaseSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.CharacterSet != nil {
		in, out := &in.CharacterSet, &out.CharacterSet
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ConnectionStrings != nil {
		in, out := &in.ConnectionStrings, &out.ConnectionStrings
		*out = new(DatabaseSpecConnectionStrings)
		(*in).DeepCopyInto(*out)
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(DatabaseSpecDatabase)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseSoftwareImageID != nil {
		in, out := &in.DatabaseSoftwareImageID, &out.DatabaseSoftwareImageID
		*out = new(string)
		**out = **in
	}
	if in.DbBackupConfig != nil {
		in, out := &in.DbBackupConfig, &out.DbBackupConfig
		*out = new(DatabaseSpecDbBackupConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.DbHomeID != nil {
		in, out := &in.DbHomeID, &out.DbHomeID
		*out = new(string)
		**out = **in
	}
	if in.DbName != nil {
		in, out := &in.DbName, &out.DbName
		*out = new(string)
		**out = **in
	}
	if in.DbSystemID != nil {
		in, out := &in.DbSystemID, &out.DbSystemID
		*out = new(string)
		**out = **in
	}
	if in.DbUniqueName != nil {
		in, out := &in.DbUniqueName, &out.DbUniqueName
		*out = new(string)
		**out = **in
	}
	if in.DbVersion != nil {
		in, out := &in.DbVersion, &out.DbVersion
		*out = new(string)
		**out = **in
	}
	if in.DbWorkload != nil {
		in, out := &in.DbWorkload, &out.DbWorkload
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.KmsKeyID != nil {
		in, out := &in.KmsKeyID, &out.KmsKeyID
		*out = new(string)
		**out = **in
	}
	if in.KmsKeyMigration != nil {
		in, out := &in.KmsKeyMigration, &out.KmsKeyMigration
		*out = new(bool)
		**out = **in
	}
	if in.KmsKeyRotation != nil {
		in, out := &in.KmsKeyRotation, &out.KmsKeyRotation
		*out = new(int64)
		**out = **in
	}
	if in.KmsKeyVersionID != nil {
		in, out := &in.KmsKeyVersionID, &out.KmsKeyVersionID
		*out = new(string)
		**out = **in
	}
	if in.LastBackupTimestamp != nil {
		in, out := &in.LastBackupTimestamp, &out.LastBackupTimestamp
		*out = new(string)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.NcharacterSet != nil {
		in, out := &in.NcharacterSet, &out.NcharacterSet
		*out = new(string)
		**out = **in
	}
	if in.PdbName != nil {
		in, out := &in.PdbName, &out.PdbName
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.SourceDatabasePointInTimeRecoveryTimestamp != nil {
		in, out := &in.SourceDatabasePointInTimeRecoveryTimestamp, &out.SourceDatabasePointInTimeRecoveryTimestamp
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.VmClusterID != nil {
		in, out := &in.VmClusterID, &out.VmClusterID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseSpecResource.
func (in *DatabaseSpecResource) DeepCopy() *DatabaseSpecResource {
	if in == nil {
		return nil
	}
	out := new(DatabaseSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseStatus) DeepCopyInto(out *DatabaseStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseStatus.
func (in *DatabaseStatus) DeepCopy() *DatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(DatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseUpgrade) DeepCopyInto(out *DatabaseUpgrade) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseUpgrade.
func (in *DatabaseUpgrade) DeepCopy() *DatabaseUpgrade {
	if in == nil {
		return nil
	}
	out := new(DatabaseUpgrade)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatabaseUpgrade) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseUpgradeList) DeepCopyInto(out *DatabaseUpgradeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DatabaseUpgrade, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseUpgradeList.
func (in *DatabaseUpgradeList) DeepCopy() *DatabaseUpgradeList {
	if in == nil {
		return nil
	}
	out := new(DatabaseUpgradeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatabaseUpgradeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseUpgradeSpec) DeepCopyInto(out *DatabaseUpgradeSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(DatabaseUpgradeSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseUpgradeSpec.
func (in *DatabaseUpgradeSpec) DeepCopy() *DatabaseUpgradeSpec {
	if in == nil {
		return nil
	}
	out := new(DatabaseUpgradeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseUpgradeSpecConnectionStrings) DeepCopyInto(out *DatabaseUpgradeSpecConnectionStrings) {
	*out = *in
	if in.AllConnectionStrings != nil {
		in, out := &in.AllConnectionStrings, &out.AllConnectionStrings
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.CdbDefault != nil {
		in, out := &in.CdbDefault, &out.CdbDefault
		*out = new(string)
		**out = **in
	}
	if in.CdbIPDefault != nil {
		in, out := &in.CdbIPDefault, &out.CdbIPDefault
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseUpgradeSpecConnectionStrings.
func (in *DatabaseUpgradeSpecConnectionStrings) DeepCopy() *DatabaseUpgradeSpecConnectionStrings {
	if in == nil {
		return nil
	}
	out := new(DatabaseUpgradeSpecConnectionStrings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseUpgradeSpecDatabaseUpgradeSourceDetails) DeepCopyInto(out *DatabaseUpgradeSpecDatabaseUpgradeSourceDetails) {
	*out = *in
	if in.DatabaseSoftwareImageID != nil {
		in, out := &in.DatabaseSoftwareImageID, &out.DatabaseSoftwareImageID
		*out = new(string)
		**out = **in
	}
	if in.DbVersion != nil {
		in, out := &in.DbVersion, &out.DbVersion
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseUpgradeSpecDatabaseUpgradeSourceDetails.
func (in *DatabaseUpgradeSpecDatabaseUpgradeSourceDetails) DeepCopy() *DatabaseUpgradeSpecDatabaseUpgradeSourceDetails {
	if in == nil {
		return nil
	}
	out := new(DatabaseUpgradeSpecDatabaseUpgradeSourceDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseUpgradeSpecDbBackupConfig) DeepCopyInto(out *DatabaseUpgradeSpecDbBackupConfig) {
	*out = *in
	if in.AutoBackupEnabled != nil {
		in, out := &in.AutoBackupEnabled, &out.AutoBackupEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoBackupWindow != nil {
		in, out := &in.AutoBackupWindow, &out.AutoBackupWindow
		*out = new(string)
		**out = **in
	}
	if in.BackupDestinationDetails != nil {
		in, out := &in.BackupDestinationDetails, &out.BackupDestinationDetails
		*out = make([]DatabaseUpgradeSpecDbBackupConfigBackupDestinationDetails, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RecoveryWindowInDays != nil {
		in, out := &in.RecoveryWindowInDays, &out.RecoveryWindowInDays
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseUpgradeSpecDbBackupConfig.
func (in *DatabaseUpgradeSpecDbBackupConfig) DeepCopy() *DatabaseUpgradeSpecDbBackupConfig {
	if in == nil {
		return nil
	}
	out := new(DatabaseUpgradeSpecDbBackupConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseUpgradeSpecDbBackupConfigBackupDestinationDetails) DeepCopyInto(out *DatabaseUpgradeSpecDbBackupConfigBackupDestinationDetails) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InternetProxy != nil {
		in, out := &in.InternetProxy, &out.InternetProxy
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VpcPassword != nil {
		in, out := &in.VpcPassword, &out.VpcPassword
		*out = new(string)
		**out = **in
	}
	if in.VpcUser != nil {
		in, out := &in.VpcUser, &out.VpcUser
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseUpgradeSpecDbBackupConfigBackupDestinationDetails.
func (in *DatabaseUpgradeSpecDbBackupConfigBackupDestinationDetails) DeepCopy() *DatabaseUpgradeSpecDbBackupConfigBackupDestinationDetails {
	if in == nil {
		return nil
	}
	out := new(DatabaseUpgradeSpecDbBackupConfigBackupDestinationDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseUpgradeSpecResource) DeepCopyInto(out *DatabaseUpgradeSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.CharacterSet != nil {
		in, out := &in.CharacterSet, &out.CharacterSet
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ConnectionStrings != nil {
		in, out := &in.ConnectionStrings, &out.ConnectionStrings
		*out = new(DatabaseUpgradeSpecConnectionStrings)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseID != nil {
		in, out := &in.DatabaseID, &out.DatabaseID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseSoftwareImageID != nil {
		in, out := &in.DatabaseSoftwareImageID, &out.DatabaseSoftwareImageID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseUpgradeSourceDetails != nil {
		in, out := &in.DatabaseUpgradeSourceDetails, &out.DatabaseUpgradeSourceDetails
		*out = new(DatabaseUpgradeSpecDatabaseUpgradeSourceDetails)
		(*in).DeepCopyInto(*out)
	}
	if in.DbBackupConfig != nil {
		in, out := &in.DbBackupConfig, &out.DbBackupConfig
		*out = new(DatabaseUpgradeSpecDbBackupConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.DbHomeID != nil {
		in, out := &in.DbHomeID, &out.DbHomeID
		*out = new(string)
		**out = **in
	}
	if in.DbName != nil {
		in, out := &in.DbName, &out.DbName
		*out = new(string)
		**out = **in
	}
	if in.DbSystemID != nil {
		in, out := &in.DbSystemID, &out.DbSystemID
		*out = new(string)
		**out = **in
	}
	if in.DbUniqueName != nil {
		in, out := &in.DbUniqueName, &out.DbUniqueName
		*out = new(string)
		**out = **in
	}
	if in.DbWorkload != nil {
		in, out := &in.DbWorkload, &out.DbWorkload
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LastBackupTimestamp != nil {
		in, out := &in.LastBackupTimestamp, &out.LastBackupTimestamp
		*out = new(string)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.NcharacterSet != nil {
		in, out := &in.NcharacterSet, &out.NcharacterSet
		*out = new(string)
		**out = **in
	}
	if in.PdbName != nil {
		in, out := &in.PdbName, &out.PdbName
		*out = new(string)
		**out = **in
	}
	if in.SourceDatabasePointInTimeRecoveryTimestamp != nil {
		in, out := &in.SourceDatabasePointInTimeRecoveryTimestamp, &out.SourceDatabasePointInTimeRecoveryTimestamp
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.VmClusterID != nil {
		in, out := &in.VmClusterID, &out.VmClusterID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseUpgradeSpecResource.
func (in *DatabaseUpgradeSpecResource) DeepCopy() *DatabaseUpgradeSpecResource {
	if in == nil {
		return nil
	}
	out := new(DatabaseUpgradeSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseUpgradeStatus) DeepCopyInto(out *DatabaseUpgradeStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseUpgradeStatus.
func (in *DatabaseUpgradeStatus) DeepCopy() *DatabaseUpgradeStatus {
	if in == nil {
		return nil
	}
	out := new(DatabaseUpgradeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbHome) DeepCopyInto(out *DbHome) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbHome.
func (in *DbHome) DeepCopy() *DbHome {
	if in == nil {
		return nil
	}
	out := new(DbHome)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DbHome) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbHomeList) DeepCopyInto(out *DbHomeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DbHome, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbHomeList.
func (in *DbHomeList) DeepCopy() *DbHomeList {
	if in == nil {
		return nil
	}
	out := new(DbHomeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DbHomeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbHomeSpec) DeepCopyInto(out *DbHomeSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(DbHomeSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbHomeSpec.
func (in *DbHomeSpec) DeepCopy() *DbHomeSpec {
	if in == nil {
		return nil
	}
	out := new(DbHomeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbHomeSpecDatabase) DeepCopyInto(out *DbHomeSpecDatabase) {
	*out = *in
	if in.AdminPassword != nil {
		in, out := &in.AdminPassword, &out.AdminPassword
		*out = new(string)
		**out = **in
	}
	if in.BackupID != nil {
		in, out := &in.BackupID, &out.BackupID
		*out = new(string)
		**out = **in
	}
	if in.BackupTdePassword != nil {
		in, out := &in.BackupTdePassword, &out.BackupTdePassword
		*out = new(string)
		**out = **in
	}
	if in.CharacterSet != nil {
		in, out := &in.CharacterSet, &out.CharacterSet
		*out = new(string)
		**out = **in
	}
	if in.ConnectionStrings != nil {
		in, out := &in.ConnectionStrings, &out.ConnectionStrings
		*out = make([]DbHomeSpecDatabaseConnectionStrings, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatabaseID != nil {
		in, out := &in.DatabaseID, &out.DatabaseID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseSoftwareImageID != nil {
		in, out := &in.DatabaseSoftwareImageID, &out.DatabaseSoftwareImageID
		*out = new(string)
		**out = **in
	}
	if in.DbBackupConfig != nil {
		in, out := &in.DbBackupConfig, &out.DbBackupConfig
		*out = new(DbHomeSpecDatabaseDbBackupConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.DbName != nil {
		in, out := &in.DbName, &out.DbName
		*out = new(string)
		**out = **in
	}
	if in.DbUniqueName != nil {
		in, out := &in.DbUniqueName, &out.DbUniqueName
		*out = new(string)
		**out = **in
	}
	if in.DbWorkload != nil {
		in, out := &in.DbWorkload, &out.DbWorkload
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.NcharacterSet != nil {
		in, out := &in.NcharacterSet, &out.NcharacterSet
		*out = new(string)
		**out = **in
	}
	if in.OneOffPatches != nil {
		in, out := &in.OneOffPatches, &out.OneOffPatches
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PdbName != nil {
		in, out := &in.PdbName, &out.PdbName
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TdeWalletPassword != nil {
		in, out := &in.TdeWalletPassword, &out.TdeWalletPassword
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeStampForPointInTimeRecovery != nil {
		in, out := &in.TimeStampForPointInTimeRecovery, &out.TimeStampForPointInTimeRecovery
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbHomeSpecDatabase.
func (in *DbHomeSpecDatabase) DeepCopy() *DbHomeSpecDatabase {
	if in == nil {
		return nil
	}
	out := new(DbHomeSpecDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbHomeSpecDatabaseConnectionStrings) DeepCopyInto(out *DbHomeSpecDatabaseConnectionStrings) {
	*out = *in
	if in.AllConnectionStrings != nil {
		in, out := &in.AllConnectionStrings, &out.AllConnectionStrings
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.CdbDefault != nil {
		in, out := &in.CdbDefault, &out.CdbDefault
		*out = new(string)
		**out = **in
	}
	if in.CdbIPDefault != nil {
		in, out := &in.CdbIPDefault, &out.CdbIPDefault
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbHomeSpecDatabaseConnectionStrings.
func (in *DbHomeSpecDatabaseConnectionStrings) DeepCopy() *DbHomeSpecDatabaseConnectionStrings {
	if in == nil {
		return nil
	}
	out := new(DbHomeSpecDatabaseConnectionStrings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbHomeSpecDatabaseDbBackupConfig) DeepCopyInto(out *DbHomeSpecDatabaseDbBackupConfig) {
	*out = *in
	if in.AutoBackupEnabled != nil {
		in, out := &in.AutoBackupEnabled, &out.AutoBackupEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoBackupWindow != nil {
		in, out := &in.AutoBackupWindow, &out.AutoBackupWindow
		*out = new(string)
		**out = **in
	}
	if in.BackupDestinationDetails != nil {
		in, out := &in.BackupDestinationDetails, &out.BackupDestinationDetails
		*out = make([]DbHomeSpecDatabaseDbBackupConfigBackupDestinationDetails, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RecoveryWindowInDays != nil {
		in, out := &in.RecoveryWindowInDays, &out.RecoveryWindowInDays
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbHomeSpecDatabaseDbBackupConfig.
func (in *DbHomeSpecDatabaseDbBackupConfig) DeepCopy() *DbHomeSpecDatabaseDbBackupConfig {
	if in == nil {
		return nil
	}
	out := new(DbHomeSpecDatabaseDbBackupConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbHomeSpecDatabaseDbBackupConfigBackupDestinationDetails) DeepCopyInto(out *DbHomeSpecDatabaseDbBackupConfigBackupDestinationDetails) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbHomeSpecDatabaseDbBackupConfigBackupDestinationDetails.
func (in *DbHomeSpecDatabaseDbBackupConfigBackupDestinationDetails) DeepCopy() *DbHomeSpecDatabaseDbBackupConfigBackupDestinationDetails {
	if in == nil {
		return nil
	}
	out := new(DbHomeSpecDatabaseDbBackupConfigBackupDestinationDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbHomeSpecResource) DeepCopyInto(out *DbHomeSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(DbHomeSpecDatabase)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseSoftwareImageID != nil {
		in, out := &in.DatabaseSoftwareImageID, &out.DatabaseSoftwareImageID
		*out = new(string)
		**out = **in
	}
	if in.DbHomeLocation != nil {
		in, out := &in.DbHomeLocation, &out.DbHomeLocation
		*out = new(string)
		**out = **in
	}
	if in.DbSystemID != nil {
		in, out := &in.DbSystemID, &out.DbSystemID
		*out = new(string)
		**out = **in
	}
	if in.DbVersion != nil {
		in, out := &in.DbVersion, &out.DbVersion
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.IsDesupportedVersion != nil {
		in, out := &in.IsDesupportedVersion, &out.IsDesupportedVersion
		*out = new(bool)
		**out = **in
	}
	if in.KmsKeyID != nil {
		in, out := &in.KmsKeyID, &out.KmsKeyID
		*out = new(string)
		**out = **in
	}
	if in.KmsKeyVersionID != nil {
		in, out := &in.KmsKeyVersionID, &out.KmsKeyVersionID
		*out = new(string)
		**out = **in
	}
	if in.LastPatchHistoryEntryID != nil {
		in, out := &in.LastPatchHistoryEntryID, &out.LastPatchHistoryEntryID
		*out = new(string)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.VmClusterID != nil {
		in, out := &in.VmClusterID, &out.VmClusterID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbHomeSpecResource.
func (in *DbHomeSpecResource) DeepCopy() *DbHomeSpecResource {
	if in == nil {
		return nil
	}
	out := new(DbHomeSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbHomeStatus) DeepCopyInto(out *DbHomeStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbHomeStatus.
func (in *DbHomeStatus) DeepCopy() *DbHomeStatus {
	if in == nil {
		return nil
	}
	out := new(DbHomeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbNodeConsoleConnection) DeepCopyInto(out *DbNodeConsoleConnection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbNodeConsoleConnection.
func (in *DbNodeConsoleConnection) DeepCopy() *DbNodeConsoleConnection {
	if in == nil {
		return nil
	}
	out := new(DbNodeConsoleConnection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DbNodeConsoleConnection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbNodeConsoleConnectionList) DeepCopyInto(out *DbNodeConsoleConnectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DbNodeConsoleConnection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbNodeConsoleConnectionList.
func (in *DbNodeConsoleConnectionList) DeepCopy() *DbNodeConsoleConnectionList {
	if in == nil {
		return nil
	}
	out := new(DbNodeConsoleConnectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DbNodeConsoleConnectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbNodeConsoleConnectionSpec) DeepCopyInto(out *DbNodeConsoleConnectionSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(DbNodeConsoleConnectionSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbNodeConsoleConnectionSpec.
func (in *DbNodeConsoleConnectionSpec) DeepCopy() *DbNodeConsoleConnectionSpec {
	if in == nil {
		return nil
	}
	out := new(DbNodeConsoleConnectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbNodeConsoleConnectionSpecResource) DeepCopyInto(out *DbNodeConsoleConnectionSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = new(string)
		**out = **in
	}
	if in.DbNodeID != nil {
		in, out := &in.DbNodeID, &out.DbNodeID
		*out = new(string)
		**out = **in
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbNodeConsoleConnectionSpecResource.
func (in *DbNodeConsoleConnectionSpecResource) DeepCopy() *DbNodeConsoleConnectionSpecResource {
	if in == nil {
		return nil
	}
	out := new(DbNodeConsoleConnectionSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbNodeConsoleConnectionStatus) DeepCopyInto(out *DbNodeConsoleConnectionStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbNodeConsoleConnectionStatus.
func (in *DbNodeConsoleConnectionStatus) DeepCopy() *DbNodeConsoleConnectionStatus {
	if in == nil {
		return nil
	}
	out := new(DbNodeConsoleConnectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbSystem) DeepCopyInto(out *DbSystem) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbSystem.
func (in *DbSystem) DeepCopy() *DbSystem {
	if in == nil {
		return nil
	}
	out := new(DbSystem)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DbSystem) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbSystemList) DeepCopyInto(out *DbSystemList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DbSystem, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbSystemList.
func (in *DbSystemList) DeepCopy() *DbSystemList {
	if in == nil {
		return nil
	}
	out := new(DbSystemList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DbSystemList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbSystemSpec) DeepCopyInto(out *DbSystemSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(DbSystemSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbSystemSpec.
func (in *DbSystemSpec) DeepCopy() *DbSystemSpec {
	if in == nil {
		return nil
	}
	out := new(DbSystemSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbSystemSpecDbHome) DeepCopyInto(out *DbSystemSpecDbHome) {
	*out = *in
	if in.CreateAsync != nil {
		in, out := &in.CreateAsync, &out.CreateAsync
		*out = new(bool)
		**out = **in
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(DbSystemSpecDbHomeDatabase)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseSoftwareImageID != nil {
		in, out := &in.DatabaseSoftwareImageID, &out.DatabaseSoftwareImageID
		*out = new(string)
		**out = **in
	}
	if in.DbHomeLocation != nil {
		in, out := &in.DbHomeLocation, &out.DbHomeLocation
		*out = new(string)
		**out = **in
	}
	if in.DbVersion != nil {
		in, out := &in.DbVersion, &out.DbVersion
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LastPatchHistoryEntryID != nil {
		in, out := &in.LastPatchHistoryEntryID, &out.LastPatchHistoryEntryID
		*out = new(string)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbSystemSpecDbHome.
func (in *DbSystemSpecDbHome) DeepCopy() *DbSystemSpecDbHome {
	if in == nil {
		return nil
	}
	out := new(DbSystemSpecDbHome)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbSystemSpecDbHomeDatabase) DeepCopyInto(out *DbSystemSpecDbHomeDatabase) {
	*out = *in
	if in.AdminPassword != nil {
		in, out := &in.AdminPassword, &out.AdminPassword
		*out = new(string)
		**out = **in
	}
	if in.BackupID != nil {
		in, out := &in.BackupID, &out.BackupID
		*out = new(string)
		**out = **in
	}
	if in.BackupTdePassword != nil {
		in, out := &in.BackupTdePassword, &out.BackupTdePassword
		*out = new(string)
		**out = **in
	}
	if in.CharacterSet != nil {
		in, out := &in.CharacterSet, &out.CharacterSet
		*out = new(string)
		**out = **in
	}
	if in.ConnectionStrings != nil {
		in, out := &in.ConnectionStrings, &out.ConnectionStrings
		*out = make([]DbSystemSpecDbHomeDatabaseConnectionStrings, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatabaseID != nil {
		in, out := &in.DatabaseID, &out.DatabaseID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseSoftwareImageID != nil {
		in, out := &in.DatabaseSoftwareImageID, &out.DatabaseSoftwareImageID
		*out = new(string)
		**out = **in
	}
	if in.DbBackupConfig != nil {
		in, out := &in.DbBackupConfig, &out.DbBackupConfig
		*out = new(DbSystemSpecDbHomeDatabaseDbBackupConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.DbDomain != nil {
		in, out := &in.DbDomain, &out.DbDomain
		*out = new(string)
		**out = **in
	}
	if in.DbName != nil {
		in, out := &in.DbName, &out.DbName
		*out = new(string)
		**out = **in
	}
	if in.DbUniqueName != nil {
		in, out := &in.DbUniqueName, &out.DbUniqueName
		*out = new(string)
		**out = **in
	}
	if in.DbWorkload != nil {
		in, out := &in.DbWorkload, &out.DbWorkload
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.NcharacterSet != nil {
		in, out := &in.NcharacterSet, &out.NcharacterSet
		*out = new(string)
		**out = **in
	}
	if in.PdbName != nil {
		in, out := &in.PdbName, &out.PdbName
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TdeWalletPassword != nil {
		in, out := &in.TdeWalletPassword, &out.TdeWalletPassword
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeStampForPointInTimeRecovery != nil {
		in, out := &in.TimeStampForPointInTimeRecovery, &out.TimeStampForPointInTimeRecovery
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbSystemSpecDbHomeDatabase.
func (in *DbSystemSpecDbHomeDatabase) DeepCopy() *DbSystemSpecDbHomeDatabase {
	if in == nil {
		return nil
	}
	out := new(DbSystemSpecDbHomeDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbSystemSpecDbHomeDatabaseConnectionStrings) DeepCopyInto(out *DbSystemSpecDbHomeDatabaseConnectionStrings) {
	*out = *in
	if in.AllConnectionStrings != nil {
		in, out := &in.AllConnectionStrings, &out.AllConnectionStrings
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.CdbDefault != nil {
		in, out := &in.CdbDefault, &out.CdbDefault
		*out = new(string)
		**out = **in
	}
	if in.CdbIPDefault != nil {
		in, out := &in.CdbIPDefault, &out.CdbIPDefault
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbSystemSpecDbHomeDatabaseConnectionStrings.
func (in *DbSystemSpecDbHomeDatabaseConnectionStrings) DeepCopy() *DbSystemSpecDbHomeDatabaseConnectionStrings {
	if in == nil {
		return nil
	}
	out := new(DbSystemSpecDbHomeDatabaseConnectionStrings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbSystemSpecDbHomeDatabaseDbBackupConfig) DeepCopyInto(out *DbSystemSpecDbHomeDatabaseDbBackupConfig) {
	*out = *in
	if in.AutoBackupEnabled != nil {
		in, out := &in.AutoBackupEnabled, &out.AutoBackupEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoBackupWindow != nil {
		in, out := &in.AutoBackupWindow, &out.AutoBackupWindow
		*out = new(string)
		**out = **in
	}
	if in.BackupDestinationDetails != nil {
		in, out := &in.BackupDestinationDetails, &out.BackupDestinationDetails
		*out = make([]DbSystemSpecDbHomeDatabaseDbBackupConfigBackupDestinationDetails, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RecoveryWindowInDays != nil {
		in, out := &in.RecoveryWindowInDays, &out.RecoveryWindowInDays
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbSystemSpecDbHomeDatabaseDbBackupConfig.
func (in *DbSystemSpecDbHomeDatabaseDbBackupConfig) DeepCopy() *DbSystemSpecDbHomeDatabaseDbBackupConfig {
	if in == nil {
		return nil
	}
	out := new(DbSystemSpecDbHomeDatabaseDbBackupConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbSystemSpecDbHomeDatabaseDbBackupConfigBackupDestinationDetails) DeepCopyInto(out *DbSystemSpecDbHomeDatabaseDbBackupConfigBackupDestinationDetails) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbSystemSpecDbHomeDatabaseDbBackupConfigBackupDestinationDetails.
func (in *DbSystemSpecDbHomeDatabaseDbBackupConfigBackupDestinationDetails) DeepCopy() *DbSystemSpecDbHomeDatabaseDbBackupConfigBackupDestinationDetails {
	if in == nil {
		return nil
	}
	out := new(DbSystemSpecDbHomeDatabaseDbBackupConfigBackupDestinationDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbSystemSpecDbSystemOptions) DeepCopyInto(out *DbSystemSpecDbSystemOptions) {
	*out = *in
	if in.StorageManagement != nil {
		in, out := &in.StorageManagement, &out.StorageManagement
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbSystemSpecDbSystemOptions.
func (in *DbSystemSpecDbSystemOptions) DeepCopy() *DbSystemSpecDbSystemOptions {
	if in == nil {
		return nil
	}
	out := new(DbSystemSpecDbSystemOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbSystemSpecIormConfigCache) DeepCopyInto(out *DbSystemSpecIormConfigCache) {
	*out = *in
	if in.DbPlans != nil {
		in, out := &in.DbPlans, &out.DbPlans
		*out = make([]DbSystemSpecIormConfigCacheDbPlans, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DbSystemID != nil {
		in, out := &in.DbSystemID, &out.DbSystemID
		*out = new(string)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.Objective != nil {
		in, out := &in.Objective, &out.Objective
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbSystemSpecIormConfigCache.
func (in *DbSystemSpecIormConfigCache) DeepCopy() *DbSystemSpecIormConfigCache {
	if in == nil {
		return nil
	}
	out := new(DbSystemSpecIormConfigCache)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbSystemSpecIormConfigCacheDbPlans) DeepCopyInto(out *DbSystemSpecIormConfigCacheDbPlans) {
	*out = *in
	if in.DbName != nil {
		in, out := &in.DbName, &out.DbName
		*out = new(string)
		**out = **in
	}
	if in.FlashCacheLimit != nil {
		in, out := &in.FlashCacheLimit, &out.FlashCacheLimit
		*out = new(string)
		**out = **in
	}
	if in.Share != nil {
		in, out := &in.Share, &out.Share
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbSystemSpecIormConfigCacheDbPlans.
func (in *DbSystemSpecIormConfigCacheDbPlans) DeepCopy() *DbSystemSpecIormConfigCacheDbPlans {
	if in == nil {
		return nil
	}
	out := new(DbSystemSpecIormConfigCacheDbPlans)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbSystemSpecMaintenanceWindow) DeepCopyInto(out *DbSystemSpecMaintenanceWindow) {
	*out = *in
	if in.DaysOfWeek != nil {
		in, out := &in.DaysOfWeek, &out.DaysOfWeek
		*out = make([]DbSystemSpecMaintenanceWindowDaysOfWeek, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HoursOfDay != nil {
		in, out := &in.HoursOfDay, &out.HoursOfDay
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.LeadTimeInWeeks != nil {
		in, out := &in.LeadTimeInWeeks, &out.LeadTimeInWeeks
		*out = new(int64)
		**out = **in
	}
	if in.Months != nil {
		in, out := &in.Months, &out.Months
		*out = make([]DbSystemSpecMaintenanceWindowMonths, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Preference != nil {
		in, out := &in.Preference, &out.Preference
		*out = new(string)
		**out = **in
	}
	if in.WeeksOfMonth != nil {
		in, out := &in.WeeksOfMonth, &out.WeeksOfMonth
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbSystemSpecMaintenanceWindow.
func (in *DbSystemSpecMaintenanceWindow) DeepCopy() *DbSystemSpecMaintenanceWindow {
	if in == nil {
		return nil
	}
	out := new(DbSystemSpecMaintenanceWindow)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbSystemSpecMaintenanceWindowDaysOfWeek) DeepCopyInto(out *DbSystemSpecMaintenanceWindowDaysOfWeek) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbSystemSpecMaintenanceWindowDaysOfWeek.
func (in *DbSystemSpecMaintenanceWindowDaysOfWeek) DeepCopy() *DbSystemSpecMaintenanceWindowDaysOfWeek {
	if in == nil {
		return nil
	}
	out := new(DbSystemSpecMaintenanceWindowDaysOfWeek)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbSystemSpecMaintenanceWindowDetails) DeepCopyInto(out *DbSystemSpecMaintenanceWindowDetails) {
	*out = *in
	if in.DaysOfWeek != nil {
		in, out := &in.DaysOfWeek, &out.DaysOfWeek
		*out = make([]DbSystemSpecMaintenanceWindowDetailsDaysOfWeek, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HoursOfDay != nil {
		in, out := &in.HoursOfDay, &out.HoursOfDay
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.LeadTimeInWeeks != nil {
		in, out := &in.LeadTimeInWeeks, &out.LeadTimeInWeeks
		*out = new(int64)
		**out = **in
	}
	if in.Months != nil {
		in, out := &in.Months, &out.Months
		*out = make([]DbSystemSpecMaintenanceWindowDetailsMonths, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Preference != nil {
		in, out := &in.Preference, &out.Preference
		*out = new(string)
		**out = **in
	}
	if in.WeeksOfMonth != nil {
		in, out := &in.WeeksOfMonth, &out.WeeksOfMonth
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbSystemSpecMaintenanceWindowDetails.
func (in *DbSystemSpecMaintenanceWindowDetails) DeepCopy() *DbSystemSpecMaintenanceWindowDetails {
	if in == nil {
		return nil
	}
	out := new(DbSystemSpecMaintenanceWindowDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbSystemSpecMaintenanceWindowDetailsDaysOfWeek) DeepCopyInto(out *DbSystemSpecMaintenanceWindowDetailsDaysOfWeek) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbSystemSpecMaintenanceWindowDetailsDaysOfWeek.
func (in *DbSystemSpecMaintenanceWindowDetailsDaysOfWeek) DeepCopy() *DbSystemSpecMaintenanceWindowDetailsDaysOfWeek {
	if in == nil {
		return nil
	}
	out := new(DbSystemSpecMaintenanceWindowDetailsDaysOfWeek)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbSystemSpecMaintenanceWindowDetailsMonths) DeepCopyInto(out *DbSystemSpecMaintenanceWindowDetailsMonths) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbSystemSpecMaintenanceWindowDetailsMonths.
func (in *DbSystemSpecMaintenanceWindowDetailsMonths) DeepCopy() *DbSystemSpecMaintenanceWindowDetailsMonths {
	if in == nil {
		return nil
	}
	out := new(DbSystemSpecMaintenanceWindowDetailsMonths)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbSystemSpecMaintenanceWindowMonths) DeepCopyInto(out *DbSystemSpecMaintenanceWindowMonths) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbSystemSpecMaintenanceWindowMonths.
func (in *DbSystemSpecMaintenanceWindowMonths) DeepCopy() *DbSystemSpecMaintenanceWindowMonths {
	if in == nil {
		return nil
	}
	out := new(DbSystemSpecMaintenanceWindowMonths)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbSystemSpecResource) DeepCopyInto(out *DbSystemSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupNetworkNsgIDS != nil {
		in, out := &in.BackupNetworkNsgIDS, &out.BackupNetworkNsgIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.BackupSubnetID != nil {
		in, out := &in.BackupSubnetID, &out.BackupSubnetID
		*out = new(string)
		**out = **in
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CpuCoreCount != nil {
		in, out := &in.CpuCoreCount, &out.CpuCoreCount
		*out = new(int64)
		**out = **in
	}
	if in.DataStoragePercentage != nil {
		in, out := &in.DataStoragePercentage, &out.DataStoragePercentage
		*out = new(int64)
		**out = **in
	}
	if in.DataStorageSizeInGb != nil {
		in, out := &in.DataStorageSizeInGb, &out.DataStorageSizeInGb
		*out = new(int64)
		**out = **in
	}
	if in.DatabaseEdition != nil {
		in, out := &in.DatabaseEdition, &out.DatabaseEdition
		*out = new(string)
		**out = **in
	}
	if in.DbHome != nil {
		in, out := &in.DbHome, &out.DbHome
		*out = new(DbSystemSpecDbHome)
		(*in).DeepCopyInto(*out)
	}
	if in.DbSystemOptions != nil {
		in, out := &in.DbSystemOptions, &out.DbSystemOptions
		*out = new(DbSystemSpecDbSystemOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DiskRedundancy != nil {
		in, out := &in.DiskRedundancy, &out.DiskRedundancy
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.FaultDomains != nil {
		in, out := &in.FaultDomains, &out.FaultDomains
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.IormConfigCache != nil {
		in, out := &in.IormConfigCache, &out.IormConfigCache
		*out = new(DbSystemSpecIormConfigCache)
		(*in).DeepCopyInto(*out)
	}
	if in.KmsKeyID != nil {
		in, out := &in.KmsKeyID, &out.KmsKeyID
		*out = new(string)
		**out = **in
	}
	if in.KmsKeyVersionID != nil {
		in, out := &in.KmsKeyVersionID, &out.KmsKeyVersionID
		*out = new(string)
		**out = **in
	}
	if in.LastMaintenanceRunID != nil {
		in, out := &in.LastMaintenanceRunID, &out.LastMaintenanceRunID
		*out = new(string)
		**out = **in
	}
	if in.LastPatchHistoryEntryID != nil {
		in, out := &in.LastPatchHistoryEntryID, &out.LastPatchHistoryEntryID
		*out = new(string)
		**out = **in
	}
	if in.LicenseModel != nil {
		in, out := &in.LicenseModel, &out.LicenseModel
		*out = new(string)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.ListenerPort != nil {
		in, out := &in.ListenerPort, &out.ListenerPort
		*out = new(int64)
		**out = **in
	}
	if in.MaintenanceWindow != nil {
		in, out := &in.MaintenanceWindow, &out.MaintenanceWindow
		*out = new(DbSystemSpecMaintenanceWindow)
		(*in).DeepCopyInto(*out)
	}
	if in.MaintenanceWindowDetails != nil {
		in, out := &in.MaintenanceWindowDetails, &out.MaintenanceWindowDetails
		*out = new(DbSystemSpecMaintenanceWindowDetails)
		(*in).DeepCopyInto(*out)
	}
	if in.NextMaintenanceRunID != nil {
		in, out := &in.NextMaintenanceRunID, &out.NextMaintenanceRunID
		*out = new(string)
		**out = **in
	}
	if in.NodeCount != nil {
		in, out := &in.NodeCount, &out.NodeCount
		*out = new(int64)
		**out = **in
	}
	if in.NsgIDS != nil {
		in, out := &in.NsgIDS, &out.NsgIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PointInTimeDataDiskCloneTimestamp != nil {
		in, out := &in.PointInTimeDataDiskCloneTimestamp, &out.PointInTimeDataDiskCloneTimestamp
		*out = new(string)
		**out = **in
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.RecoStorageSizeInGb != nil {
		in, out := &in.RecoStorageSizeInGb, &out.RecoStorageSizeInGb
		*out = new(int64)
		**out = **in
	}
	if in.ScanDNSName != nil {
		in, out := &in.ScanDNSName, &out.ScanDNSName
		*out = new(string)
		**out = **in
	}
	if in.ScanDNSRecordID != nil {
		in, out := &in.ScanDNSRecordID, &out.ScanDNSRecordID
		*out = new(string)
		**out = **in
	}
	if in.ScanIPIDS != nil {
		in, out := &in.ScanIPIDS, &out.ScanIPIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Shape != nil {
		in, out := &in.Shape, &out.Shape
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.SourceDbSystemID != nil {
		in, out := &in.SourceDbSystemID, &out.SourceDbSystemID
		*out = new(string)
		**out = **in
	}
	if in.SparseDiskgroup != nil {
		in, out := &in.SparseDiskgroup, &out.SparseDiskgroup
		*out = new(bool)
		**out = **in
	}
	if in.SshPublicKeys != nil {
		in, out := &in.SshPublicKeys, &out.SshPublicKeys
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	if in.VipIDS != nil {
		in, out := &in.VipIDS, &out.VipIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbSystemSpecResource.
func (in *DbSystemSpecResource) DeepCopy() *DbSystemSpecResource {
	if in == nil {
		return nil
	}
	out := new(DbSystemSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbSystemStatus) DeepCopyInto(out *DbSystemStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbSystemStatus.
func (in *DbSystemStatus) DeepCopy() *DbSystemStatus {
	if in == nil {
		return nil
	}
	out := new(DbSystemStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExadataInfrastructure) DeepCopyInto(out *ExadataInfrastructure) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExadataInfrastructure.
func (in *ExadataInfrastructure) DeepCopy() *ExadataInfrastructure {
	if in == nil {
		return nil
	}
	out := new(ExadataInfrastructure)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExadataInfrastructure) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExadataInfrastructureList) DeepCopyInto(out *ExadataInfrastructureList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ExadataInfrastructure, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExadataInfrastructureList.
func (in *ExadataInfrastructureList) DeepCopy() *ExadataInfrastructureList {
	if in == nil {
		return nil
	}
	out := new(ExadataInfrastructureList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExadataInfrastructureList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExadataInfrastructureSpec) DeepCopyInto(out *ExadataInfrastructureSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ExadataInfrastructureSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExadataInfrastructureSpec.
func (in *ExadataInfrastructureSpec) DeepCopy() *ExadataInfrastructureSpec {
	if in == nil {
		return nil
	}
	out := new(ExadataInfrastructureSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExadataInfrastructureSpecContacts) DeepCopyInto(out *ExadataInfrastructureSpecContacts) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.IsContactMosValidated != nil {
		in, out := &in.IsContactMosValidated, &out.IsContactMosValidated
		*out = new(bool)
		**out = **in
	}
	if in.IsPrimary != nil {
		in, out := &in.IsPrimary, &out.IsPrimary
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PhoneNumber != nil {
		in, out := &in.PhoneNumber, &out.PhoneNumber
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExadataInfrastructureSpecContacts.
func (in *ExadataInfrastructureSpecContacts) DeepCopy() *ExadataInfrastructureSpecContacts {
	if in == nil {
		return nil
	}
	out := new(ExadataInfrastructureSpecContacts)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExadataInfrastructureSpecMaintenanceWindow) DeepCopyInto(out *ExadataInfrastructureSpecMaintenanceWindow) {
	*out = *in
	if in.DaysOfWeek != nil {
		in, out := &in.DaysOfWeek, &out.DaysOfWeek
		*out = make([]ExadataInfrastructureSpecMaintenanceWindowDaysOfWeek, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HoursOfDay != nil {
		in, out := &in.HoursOfDay, &out.HoursOfDay
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.LeadTimeInWeeks != nil {
		in, out := &in.LeadTimeInWeeks, &out.LeadTimeInWeeks
		*out = new(int64)
		**out = **in
	}
	if in.Months != nil {
		in, out := &in.Months, &out.Months
		*out = make([]ExadataInfrastructureSpecMaintenanceWindowMonths, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Preference != nil {
		in, out := &in.Preference, &out.Preference
		*out = new(string)
		**out = **in
	}
	if in.WeeksOfMonth != nil {
		in, out := &in.WeeksOfMonth, &out.WeeksOfMonth
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExadataInfrastructureSpecMaintenanceWindow.
func (in *ExadataInfrastructureSpecMaintenanceWindow) DeepCopy() *ExadataInfrastructureSpecMaintenanceWindow {
	if in == nil {
		return nil
	}
	out := new(ExadataInfrastructureSpecMaintenanceWindow)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExadataInfrastructureSpecMaintenanceWindowDaysOfWeek) DeepCopyInto(out *ExadataInfrastructureSpecMaintenanceWindowDaysOfWeek) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExadataInfrastructureSpecMaintenanceWindowDaysOfWeek.
func (in *ExadataInfrastructureSpecMaintenanceWindowDaysOfWeek) DeepCopy() *ExadataInfrastructureSpecMaintenanceWindowDaysOfWeek {
	if in == nil {
		return nil
	}
	out := new(ExadataInfrastructureSpecMaintenanceWindowDaysOfWeek)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExadataInfrastructureSpecMaintenanceWindowMonths) DeepCopyInto(out *ExadataInfrastructureSpecMaintenanceWindowMonths) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExadataInfrastructureSpecMaintenanceWindowMonths.
func (in *ExadataInfrastructureSpecMaintenanceWindowMonths) DeepCopy() *ExadataInfrastructureSpecMaintenanceWindowMonths {
	if in == nil {
		return nil
	}
	out := new(ExadataInfrastructureSpecMaintenanceWindowMonths)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExadataInfrastructureSpecResource) DeepCopyInto(out *ExadataInfrastructureSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.ActivatedStorageCount != nil {
		in, out := &in.ActivatedStorageCount, &out.ActivatedStorageCount
		*out = new(int64)
		**out = **in
	}
	if in.ActivationFile != nil {
		in, out := &in.ActivationFile, &out.ActivationFile
		*out = new(string)
		**out = **in
	}
	if in.AdditionalStorageCount != nil {
		in, out := &in.AdditionalStorageCount, &out.AdditionalStorageCount
		*out = new(int64)
		**out = **in
	}
	if in.AdminNetworkCIDR != nil {
		in, out := &in.AdminNetworkCIDR, &out.AdminNetworkCIDR
		*out = new(string)
		**out = **in
	}
	if in.CloudControlPlaneServer1 != nil {
		in, out := &in.CloudControlPlaneServer1, &out.CloudControlPlaneServer1
		*out = new(string)
		**out = **in
	}
	if in.CloudControlPlaneServer2 != nil {
		in, out := &in.CloudControlPlaneServer2, &out.CloudControlPlaneServer2
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ComputeCount != nil {
		in, out := &in.ComputeCount, &out.ComputeCount
		*out = new(int64)
		**out = **in
	}
	if in.Contacts != nil {
		in, out := &in.Contacts, &out.Contacts
		*out = make([]ExadataInfrastructureSpecContacts, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CorporateProxy != nil {
		in, out := &in.CorporateProxy, &out.CorporateProxy
		*out = new(string)
		**out = **in
	}
	if in.CpusEnabled != nil {
		in, out := &in.CpusEnabled, &out.CpusEnabled
		*out = new(int64)
		**out = **in
	}
	if in.CreateAsync != nil {
		in, out := &in.CreateAsync, &out.CreateAsync
		*out = new(bool)
		**out = **in
	}
	if in.CsiNumber != nil {
		in, out := &in.CsiNumber, &out.CsiNumber
		*out = new(string)
		**out = **in
	}
	if in.DataStorageSizeInTbs != nil {
		in, out := &in.DataStorageSizeInTbs, &out.DataStorageSizeInTbs
		*out = new(float64)
		**out = **in
	}
	if in.DbNodeStorageSizeInGbs != nil {
		in, out := &in.DbNodeStorageSizeInGbs, &out.DbNodeStorageSizeInGbs
		*out = new(int64)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DnsServer != nil {
		in, out := &in.DnsServer, &out.DnsServer
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = new(string)
		**out = **in
	}
	if in.InfiniBandNetworkCIDR != nil {
		in, out := &in.InfiniBandNetworkCIDR, &out.InfiniBandNetworkCIDR
		*out = new(string)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceSloStatus != nil {
		in, out := &in.MaintenanceSloStatus, &out.MaintenanceSloStatus
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceWindow != nil {
		in, out := &in.MaintenanceWindow, &out.MaintenanceWindow
		*out = new(ExadataInfrastructureSpecMaintenanceWindow)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxCPUCount != nil {
		in, out := &in.MaxCPUCount, &out.MaxCPUCount
		*out = new(int64)
		**out = **in
	}
	if in.MaxDataStorageInTbs != nil {
		in, out := &in.MaxDataStorageInTbs, &out.MaxDataStorageInTbs
		*out = new(float64)
		**out = **in
	}
	if in.MaxDbNodeStorageInGbs != nil {
		in, out := &in.MaxDbNodeStorageInGbs, &out.MaxDbNodeStorageInGbs
		*out = new(int64)
		**out = **in
	}
	if in.MaxMemoryInGbs != nil {
		in, out := &in.MaxMemoryInGbs, &out.MaxMemoryInGbs
		*out = new(int64)
		**out = **in
	}
	if in.MemorySizeInGbs != nil {
		in, out := &in.MemorySizeInGbs, &out.MemorySizeInGbs
		*out = new(int64)
		**out = **in
	}
	if in.Netmask != nil {
		in, out := &in.Netmask, &out.Netmask
		*out = new(string)
		**out = **in
	}
	if in.NtpServer != nil {
		in, out := &in.NtpServer, &out.NtpServer
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Shape != nil {
		in, out := &in.Shape, &out.Shape
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.StorageCount != nil {
		in, out := &in.StorageCount, &out.StorageCount
		*out = new(int64)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExadataInfrastructureSpecResource.
func (in *ExadataInfrastructureSpecResource) DeepCopy() *ExadataInfrastructureSpecResource {
	if in == nil {
		return nil
	}
	out := new(ExadataInfrastructureSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExadataInfrastructureStatus) DeepCopyInto(out *ExadataInfrastructureStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExadataInfrastructureStatus.
func (in *ExadataInfrastructureStatus) DeepCopy() *ExadataInfrastructureStatus {
	if in == nil {
		return nil
	}
	out := new(ExadataInfrastructureStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExadataInfrastructureStorage) DeepCopyInto(out *ExadataInfrastructureStorage) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExadataInfrastructureStorage.
func (in *ExadataInfrastructureStorage) DeepCopy() *ExadataInfrastructureStorage {
	if in == nil {
		return nil
	}
	out := new(ExadataInfrastructureStorage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExadataInfrastructureStorage) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExadataInfrastructureStorageList) DeepCopyInto(out *ExadataInfrastructureStorageList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ExadataInfrastructureStorage, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExadataInfrastructureStorageList.
func (in *ExadataInfrastructureStorageList) DeepCopy() *ExadataInfrastructureStorageList {
	if in == nil {
		return nil
	}
	out := new(ExadataInfrastructureStorageList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExadataInfrastructureStorageList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExadataInfrastructureStorageSpec) DeepCopyInto(out *ExadataInfrastructureStorageSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ExadataInfrastructureStorageSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExadataInfrastructureStorageSpec.
func (in *ExadataInfrastructureStorageSpec) DeepCopy() *ExadataInfrastructureStorageSpec {
	if in == nil {
		return nil
	}
	out := new(ExadataInfrastructureStorageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExadataInfrastructureStorageSpecContacts) DeepCopyInto(out *ExadataInfrastructureStorageSpecContacts) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.IsContactMosValidated != nil {
		in, out := &in.IsContactMosValidated, &out.IsContactMosValidated
		*out = new(bool)
		**out = **in
	}
	if in.IsPrimary != nil {
		in, out := &in.IsPrimary, &out.IsPrimary
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PhoneNumber != nil {
		in, out := &in.PhoneNumber, &out.PhoneNumber
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExadataInfrastructureStorageSpecContacts.
func (in *ExadataInfrastructureStorageSpecContacts) DeepCopy() *ExadataInfrastructureStorageSpecContacts {
	if in == nil {
		return nil
	}
	out := new(ExadataInfrastructureStorageSpecContacts)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExadataInfrastructureStorageSpecMaintenanceWindow) DeepCopyInto(out *ExadataInfrastructureStorageSpecMaintenanceWindow) {
	*out = *in
	if in.DaysOfWeek != nil {
		in, out := &in.DaysOfWeek, &out.DaysOfWeek
		*out = make([]ExadataInfrastructureStorageSpecMaintenanceWindowDaysOfWeek, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HoursOfDay != nil {
		in, out := &in.HoursOfDay, &out.HoursOfDay
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.LeadTimeInWeeks != nil {
		in, out := &in.LeadTimeInWeeks, &out.LeadTimeInWeeks
		*out = new(int64)
		**out = **in
	}
	if in.Months != nil {
		in, out := &in.Months, &out.Months
		*out = make([]ExadataInfrastructureStorageSpecMaintenanceWindowMonths, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Preference != nil {
		in, out := &in.Preference, &out.Preference
		*out = new(string)
		**out = **in
	}
	if in.WeeksOfMonth != nil {
		in, out := &in.WeeksOfMonth, &out.WeeksOfMonth
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExadataInfrastructureStorageSpecMaintenanceWindow.
func (in *ExadataInfrastructureStorageSpecMaintenanceWindow) DeepCopy() *ExadataInfrastructureStorageSpecMaintenanceWindow {
	if in == nil {
		return nil
	}
	out := new(ExadataInfrastructureStorageSpecMaintenanceWindow)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExadataInfrastructureStorageSpecMaintenanceWindowDaysOfWeek) DeepCopyInto(out *ExadataInfrastructureStorageSpecMaintenanceWindowDaysOfWeek) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExadataInfrastructureStorageSpecMaintenanceWindowDaysOfWeek.
func (in *ExadataInfrastructureStorageSpecMaintenanceWindowDaysOfWeek) DeepCopy() *ExadataInfrastructureStorageSpecMaintenanceWindowDaysOfWeek {
	if in == nil {
		return nil
	}
	out := new(ExadataInfrastructureStorageSpecMaintenanceWindowDaysOfWeek)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExadataInfrastructureStorageSpecMaintenanceWindowMonths) DeepCopyInto(out *ExadataInfrastructureStorageSpecMaintenanceWindowMonths) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExadataInfrastructureStorageSpecMaintenanceWindowMonths.
func (in *ExadataInfrastructureStorageSpecMaintenanceWindowMonths) DeepCopy() *ExadataInfrastructureStorageSpecMaintenanceWindowMonths {
	if in == nil {
		return nil
	}
	out := new(ExadataInfrastructureStorageSpecMaintenanceWindowMonths)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExadataInfrastructureStorageSpecResource) DeepCopyInto(out *ExadataInfrastructureStorageSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.ActivatedStorageCount != nil {
		in, out := &in.ActivatedStorageCount, &out.ActivatedStorageCount
		*out = new(int64)
		**out = **in
	}
	if in.ActivationFile != nil {
		in, out := &in.ActivationFile, &out.ActivationFile
		*out = new(string)
		**out = **in
	}
	if in.AdditionalStorageCount != nil {
		in, out := &in.AdditionalStorageCount, &out.AdditionalStorageCount
		*out = new(int64)
		**out = **in
	}
	if in.AdminNetworkCIDR != nil {
		in, out := &in.AdminNetworkCIDR, &out.AdminNetworkCIDR
		*out = new(string)
		**out = **in
	}
	if in.CloudControlPlaneServer1 != nil {
		in, out := &in.CloudControlPlaneServer1, &out.CloudControlPlaneServer1
		*out = new(string)
		**out = **in
	}
	if in.CloudControlPlaneServer2 != nil {
		in, out := &in.CloudControlPlaneServer2, &out.CloudControlPlaneServer2
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ComputeCount != nil {
		in, out := &in.ComputeCount, &out.ComputeCount
		*out = new(int64)
		**out = **in
	}
	if in.Contacts != nil {
		in, out := &in.Contacts, &out.Contacts
		*out = make([]ExadataInfrastructureStorageSpecContacts, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CorporateProxy != nil {
		in, out := &in.CorporateProxy, &out.CorporateProxy
		*out = new(string)
		**out = **in
	}
	if in.CpusEnabled != nil {
		in, out := &in.CpusEnabled, &out.CpusEnabled
		*out = new(int64)
		**out = **in
	}
	if in.CsiNumber != nil {
		in, out := &in.CsiNumber, &out.CsiNumber
		*out = new(string)
		**out = **in
	}
	if in.DataStorageSizeInTbs != nil {
		in, out := &in.DataStorageSizeInTbs, &out.DataStorageSizeInTbs
		*out = new(float64)
		**out = **in
	}
	if in.DbNodeStorageSizeInGbs != nil {
		in, out := &in.DbNodeStorageSizeInGbs, &out.DbNodeStorageSizeInGbs
		*out = new(int64)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DnsServer != nil {
		in, out := &in.DnsServer, &out.DnsServer
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExadataInfrastructureID != nil {
		in, out := &in.ExadataInfrastructureID, &out.ExadataInfrastructureID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = new(string)
		**out = **in
	}
	if in.InfiniBandNetworkCIDR != nil {
		in, out := &in.InfiniBandNetworkCIDR, &out.InfiniBandNetworkCIDR
		*out = new(string)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceSloStatus != nil {
		in, out := &in.MaintenanceSloStatus, &out.MaintenanceSloStatus
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceWindow != nil {
		in, out := &in.MaintenanceWindow, &out.MaintenanceWindow
		*out = new(ExadataInfrastructureStorageSpecMaintenanceWindow)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxCPUCount != nil {
		in, out := &in.MaxCPUCount, &out.MaxCPUCount
		*out = new(int64)
		**out = **in
	}
	if in.MaxDataStorageInTbs != nil {
		in, out := &in.MaxDataStorageInTbs, &out.MaxDataStorageInTbs
		*out = new(float64)
		**out = **in
	}
	if in.MaxDbNodeStorageInGbs != nil {
		in, out := &in.MaxDbNodeStorageInGbs, &out.MaxDbNodeStorageInGbs
		*out = new(int64)
		**out = **in
	}
	if in.MaxMemoryInGbs != nil {
		in, out := &in.MaxMemoryInGbs, &out.MaxMemoryInGbs
		*out = new(int64)
		**out = **in
	}
	if in.MemorySizeInGbs != nil {
		in, out := &in.MemorySizeInGbs, &out.MemorySizeInGbs
		*out = new(int64)
		**out = **in
	}
	if in.Netmask != nil {
		in, out := &in.Netmask, &out.Netmask
		*out = new(string)
		**out = **in
	}
	if in.NtpServer != nil {
		in, out := &in.NtpServer, &out.NtpServer
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Shape != nil {
		in, out := &in.Shape, &out.Shape
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.StorageCount != nil {
		in, out := &in.StorageCount, &out.StorageCount
		*out = new(int64)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExadataInfrastructureStorageSpecResource.
func (in *ExadataInfrastructureStorageSpecResource) DeepCopy() *ExadataInfrastructureStorageSpecResource {
	if in == nil {
		return nil
	}
	out := new(ExadataInfrastructureStorageSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExadataInfrastructureStorageStatus) DeepCopyInto(out *ExadataInfrastructureStorageStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExadataInfrastructureStorageStatus.
func (in *ExadataInfrastructureStorageStatus) DeepCopy() *ExadataInfrastructureStorageStatus {
	if in == nil {
		return nil
	}
	out := new(ExadataInfrastructureStorageStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExadataIormConfig) DeepCopyInto(out *ExadataIormConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExadataIormConfig.
func (in *ExadataIormConfig) DeepCopy() *ExadataIormConfig {
	if in == nil {
		return nil
	}
	out := new(ExadataIormConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExadataIormConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExadataIormConfigList) DeepCopyInto(out *ExadataIormConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ExadataIormConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExadataIormConfigList.
func (in *ExadataIormConfigList) DeepCopy() *ExadataIormConfigList {
	if in == nil {
		return nil
	}
	out := new(ExadataIormConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExadataIormConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExadataIormConfigSpec) DeepCopyInto(out *ExadataIormConfigSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ExadataIormConfigSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExadataIormConfigSpec.
func (in *ExadataIormConfigSpec) DeepCopy() *ExadataIormConfigSpec {
	if in == nil {
		return nil
	}
	out := new(ExadataIormConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExadataIormConfigSpecDbPlans) DeepCopyInto(out *ExadataIormConfigSpecDbPlans) {
	*out = *in
	if in.DbName != nil {
		in, out := &in.DbName, &out.DbName
		*out = new(string)
		**out = **in
	}
	if in.FlashCacheLimit != nil {
		in, out := &in.FlashCacheLimit, &out.FlashCacheLimit
		*out = new(string)
		**out = **in
	}
	if in.Share != nil {
		in, out := &in.Share, &out.Share
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExadataIormConfigSpecDbPlans.
func (in *ExadataIormConfigSpecDbPlans) DeepCopy() *ExadataIormConfigSpecDbPlans {
	if in == nil {
		return nil
	}
	out := new(ExadataIormConfigSpecDbPlans)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExadataIormConfigSpecResource) DeepCopyInto(out *ExadataIormConfigSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.DbPlans != nil {
		in, out := &in.DbPlans, &out.DbPlans
		*out = make([]ExadataIormConfigSpecDbPlans, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DbSystemID != nil {
		in, out := &in.DbSystemID, &out.DbSystemID
		*out = new(string)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.Objective != nil {
		in, out := &in.Objective, &out.Objective
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExadataIormConfigSpecResource.
func (in *ExadataIormConfigSpecResource) DeepCopy() *ExadataIormConfigSpecResource {
	if in == nil {
		return nil
	}
	out := new(ExadataIormConfigSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExadataIormConfigStatus) DeepCopyInto(out *ExadataIormConfigStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExadataIormConfigStatus.
func (in *ExadataIormConfigStatus) DeepCopy() *ExadataIormConfigStatus {
	if in == nil {
		return nil
	}
	out := new(ExadataIormConfigStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalContainerDatabase) DeepCopyInto(out *ExternalContainerDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalContainerDatabase.
func (in *ExternalContainerDatabase) DeepCopy() *ExternalContainerDatabase {
	if in == nil {
		return nil
	}
	out := new(ExternalContainerDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExternalContainerDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalContainerDatabaseList) DeepCopyInto(out *ExternalContainerDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ExternalContainerDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalContainerDatabaseList.
func (in *ExternalContainerDatabaseList) DeepCopy() *ExternalContainerDatabaseList {
	if in == nil {
		return nil
	}
	out := new(ExternalContainerDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExternalContainerDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalContainerDatabaseManagement) DeepCopyInto(out *ExternalContainerDatabaseManagement) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalContainerDatabaseManagement.
func (in *ExternalContainerDatabaseManagement) DeepCopy() *ExternalContainerDatabaseManagement {
	if in == nil {
		return nil
	}
	out := new(ExternalContainerDatabaseManagement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExternalContainerDatabaseManagement) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalContainerDatabaseManagementList) DeepCopyInto(out *ExternalContainerDatabaseManagementList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ExternalContainerDatabaseManagement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalContainerDatabaseManagementList.
func (in *ExternalContainerDatabaseManagementList) DeepCopy() *ExternalContainerDatabaseManagementList {
	if in == nil {
		return nil
	}
	out := new(ExternalContainerDatabaseManagementList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExternalContainerDatabaseManagementList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalContainerDatabaseManagementSpec) DeepCopyInto(out *ExternalContainerDatabaseManagementSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ExternalContainerDatabaseManagementSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalContainerDatabaseManagementSpec.
func (in *ExternalContainerDatabaseManagementSpec) DeepCopy() *ExternalContainerDatabaseManagementSpec {
	if in == nil {
		return nil
	}
	out := new(ExternalContainerDatabaseManagementSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalContainerDatabaseManagementSpecResource) DeepCopyInto(out *ExternalContainerDatabaseManagementSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.EnableManagement != nil {
		in, out := &in.EnableManagement, &out.EnableManagement
		*out = new(bool)
		**out = **in
	}
	if in.ExternalContainerDatabaseID != nil {
		in, out := &in.ExternalContainerDatabaseID, &out.ExternalContainerDatabaseID
		*out = new(string)
		**out = **in
	}
	if in.ExternalDatabaseConnectorID != nil {
		in, out := &in.ExternalDatabaseConnectorID, &out.ExternalDatabaseConnectorID
		*out = new(string)
		**out = **in
	}
	if in.LicenseModel != nil {
		in, out := &in.LicenseModel, &out.LicenseModel
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalContainerDatabaseManagementSpecResource.
func (in *ExternalContainerDatabaseManagementSpecResource) DeepCopy() *ExternalContainerDatabaseManagementSpecResource {
	if in == nil {
		return nil
	}
	out := new(ExternalContainerDatabaseManagementSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalContainerDatabaseManagementStatus) DeepCopyInto(out *ExternalContainerDatabaseManagementStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalContainerDatabaseManagementStatus.
func (in *ExternalContainerDatabaseManagementStatus) DeepCopy() *ExternalContainerDatabaseManagementStatus {
	if in == nil {
		return nil
	}
	out := new(ExternalContainerDatabaseManagementStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalContainerDatabaseSpec) DeepCopyInto(out *ExternalContainerDatabaseSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ExternalContainerDatabaseSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalContainerDatabaseSpec.
func (in *ExternalContainerDatabaseSpec) DeepCopy() *ExternalContainerDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(ExternalContainerDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalContainerDatabaseSpecDatabaseManagementConfig) DeepCopyInto(out *ExternalContainerDatabaseSpecDatabaseManagementConfig) {
	*out = *in
	if in.DatabaseManagementConnectionID != nil {
		in, out := &in.DatabaseManagementConnectionID, &out.DatabaseManagementConnectionID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseManagementStatus != nil {
		in, out := &in.DatabaseManagementStatus, &out.DatabaseManagementStatus
		*out = new(string)
		**out = **in
	}
	if in.LicenseModel != nil {
		in, out := &in.LicenseModel, &out.LicenseModel
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalContainerDatabaseSpecDatabaseManagementConfig.
func (in *ExternalContainerDatabaseSpecDatabaseManagementConfig) DeepCopy() *ExternalContainerDatabaseSpecDatabaseManagementConfig {
	if in == nil {
		return nil
	}
	out := new(ExternalContainerDatabaseSpecDatabaseManagementConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalContainerDatabaseSpecResource) DeepCopyInto(out *ExternalContainerDatabaseSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.CharacterSet != nil {
		in, out := &in.CharacterSet, &out.CharacterSet
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseConfiguration != nil {
		in, out := &in.DatabaseConfiguration, &out.DatabaseConfiguration
		*out = new(string)
		**out = **in
	}
	if in.DatabaseEdition != nil {
		in, out := &in.DatabaseEdition, &out.DatabaseEdition
		*out = new(string)
		**out = **in
	}
	if in.DatabaseManagementConfig != nil {
		in, out := &in.DatabaseManagementConfig, &out.DatabaseManagementConfig
		*out = new(ExternalContainerDatabaseSpecDatabaseManagementConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseVersion != nil {
		in, out := &in.DatabaseVersion, &out.DatabaseVersion
		*out = new(string)
		**out = **in
	}
	if in.DbID != nil {
		in, out := &in.DbID, &out.DbID
		*out = new(string)
		**out = **in
	}
	if in.DbPacks != nil {
		in, out := &in.DbPacks, &out.DbPacks
		*out = new(string)
		**out = **in
	}
	if in.DbUniqueName != nil {
		in, out := &in.DbUniqueName, &out.DbUniqueName
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.NcharacterSet != nil {
		in, out := &in.NcharacterSet, &out.NcharacterSet
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalContainerDatabaseSpecResource.
func (in *ExternalContainerDatabaseSpecResource) DeepCopy() *ExternalContainerDatabaseSpecResource {
	if in == nil {
		return nil
	}
	out := new(ExternalContainerDatabaseSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalContainerDatabaseStatus) DeepCopyInto(out *ExternalContainerDatabaseStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalContainerDatabaseStatus.
func (in *ExternalContainerDatabaseStatus) DeepCopy() *ExternalContainerDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(ExternalContainerDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalDatabaseConnector) DeepCopyInto(out *ExternalDatabaseConnector) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalDatabaseConnector.
func (in *ExternalDatabaseConnector) DeepCopy() *ExternalDatabaseConnector {
	if in == nil {
		return nil
	}
	out := new(ExternalDatabaseConnector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExternalDatabaseConnector) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalDatabaseConnectorList) DeepCopyInto(out *ExternalDatabaseConnectorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ExternalDatabaseConnector, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalDatabaseConnectorList.
func (in *ExternalDatabaseConnectorList) DeepCopy() *ExternalDatabaseConnectorList {
	if in == nil {
		return nil
	}
	out := new(ExternalDatabaseConnectorList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExternalDatabaseConnectorList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalDatabaseConnectorSpec) DeepCopyInto(out *ExternalDatabaseConnectorSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ExternalDatabaseConnectorSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalDatabaseConnectorSpec.
func (in *ExternalDatabaseConnectorSpec) DeepCopy() *ExternalDatabaseConnectorSpec {
	if in == nil {
		return nil
	}
	out := new(ExternalDatabaseConnectorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalDatabaseConnectorSpecConnectionCredentials) DeepCopyInto(out *ExternalDatabaseConnectorSpecConnectionCredentials) {
	*out = *in
	if in.CredentialName != nil {
		in, out := &in.CredentialName, &out.CredentialName
		*out = new(string)
		**out = **in
	}
	if in.CredentialType != nil {
		in, out := &in.CredentialType, &out.CredentialType
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalDatabaseConnectorSpecConnectionCredentials.
func (in *ExternalDatabaseConnectorSpecConnectionCredentials) DeepCopy() *ExternalDatabaseConnectorSpecConnectionCredentials {
	if in == nil {
		return nil
	}
	out := new(ExternalDatabaseConnectorSpecConnectionCredentials)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalDatabaseConnectorSpecConnectionString) DeepCopyInto(out *ExternalDatabaseConnectorSpecConnectionString) {
	*out = *in
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalDatabaseConnectorSpecConnectionString.
func (in *ExternalDatabaseConnectorSpecConnectionString) DeepCopy() *ExternalDatabaseConnectorSpecConnectionString {
	if in == nil {
		return nil
	}
	out := new(ExternalDatabaseConnectorSpecConnectionString)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalDatabaseConnectorSpecResource) DeepCopyInto(out *ExternalDatabaseConnectorSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ConnectionCredentials != nil {
		in, out := &in.ConnectionCredentials, &out.ConnectionCredentials
		*out = new(ExternalDatabaseConnectorSpecConnectionCredentials)
		(*in).DeepCopyInto(*out)
	}
	if in.ConnectionStatus != nil {
		in, out := &in.ConnectionStatus, &out.ConnectionStatus
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = new(ExternalDatabaseConnectorSpecConnectionString)
		(*in).DeepCopyInto(*out)
	}
	if in.ConnectorAgentID != nil {
		in, out := &in.ConnectorAgentID, &out.ConnectorAgentID
		*out = new(string)
		**out = **in
	}
	if in.ConnectorType != nil {
		in, out := &in.ConnectorType, &out.ConnectorType
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExternalDatabaseID != nil {
		in, out := &in.ExternalDatabaseID, &out.ExternalDatabaseID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeConnectionStatusLastUpdated != nil {
		in, out := &in.TimeConnectionStatusLastUpdated, &out.TimeConnectionStatusLastUpdated
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalDatabaseConnectorSpecResource.
func (in *ExternalDatabaseConnectorSpecResource) DeepCopy() *ExternalDatabaseConnectorSpecResource {
	if in == nil {
		return nil
	}
	out := new(ExternalDatabaseConnectorSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalDatabaseConnectorStatus) DeepCopyInto(out *ExternalDatabaseConnectorStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalDatabaseConnectorStatus.
func (in *ExternalDatabaseConnectorStatus) DeepCopy() *ExternalDatabaseConnectorStatus {
	if in == nil {
		return nil
	}
	out := new(ExternalDatabaseConnectorStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalNonContainerDatabase) DeepCopyInto(out *ExternalNonContainerDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalNonContainerDatabase.
func (in *ExternalNonContainerDatabase) DeepCopy() *ExternalNonContainerDatabase {
	if in == nil {
		return nil
	}
	out := new(ExternalNonContainerDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExternalNonContainerDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalNonContainerDatabaseList) DeepCopyInto(out *ExternalNonContainerDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ExternalNonContainerDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalNonContainerDatabaseList.
func (in *ExternalNonContainerDatabaseList) DeepCopy() *ExternalNonContainerDatabaseList {
	if in == nil {
		return nil
	}
	out := new(ExternalNonContainerDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExternalNonContainerDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalNonContainerDatabaseManagement) DeepCopyInto(out *ExternalNonContainerDatabaseManagement) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalNonContainerDatabaseManagement.
func (in *ExternalNonContainerDatabaseManagement) DeepCopy() *ExternalNonContainerDatabaseManagement {
	if in == nil {
		return nil
	}
	out := new(ExternalNonContainerDatabaseManagement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExternalNonContainerDatabaseManagement) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalNonContainerDatabaseManagementList) DeepCopyInto(out *ExternalNonContainerDatabaseManagementList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ExternalNonContainerDatabaseManagement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalNonContainerDatabaseManagementList.
func (in *ExternalNonContainerDatabaseManagementList) DeepCopy() *ExternalNonContainerDatabaseManagementList {
	if in == nil {
		return nil
	}
	out := new(ExternalNonContainerDatabaseManagementList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExternalNonContainerDatabaseManagementList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalNonContainerDatabaseManagementSpec) DeepCopyInto(out *ExternalNonContainerDatabaseManagementSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ExternalNonContainerDatabaseManagementSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalNonContainerDatabaseManagementSpec.
func (in *ExternalNonContainerDatabaseManagementSpec) DeepCopy() *ExternalNonContainerDatabaseManagementSpec {
	if in == nil {
		return nil
	}
	out := new(ExternalNonContainerDatabaseManagementSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalNonContainerDatabaseManagementSpecResource) DeepCopyInto(out *ExternalNonContainerDatabaseManagementSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.EnableManagement != nil {
		in, out := &in.EnableManagement, &out.EnableManagement
		*out = new(bool)
		**out = **in
	}
	if in.ExternalDatabaseConnectorID != nil {
		in, out := &in.ExternalDatabaseConnectorID, &out.ExternalDatabaseConnectorID
		*out = new(string)
		**out = **in
	}
	if in.ExternalNonContainerDatabaseID != nil {
		in, out := &in.ExternalNonContainerDatabaseID, &out.ExternalNonContainerDatabaseID
		*out = new(string)
		**out = **in
	}
	if in.LicenseModel != nil {
		in, out := &in.LicenseModel, &out.LicenseModel
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalNonContainerDatabaseManagementSpecResource.
func (in *ExternalNonContainerDatabaseManagementSpecResource) DeepCopy() *ExternalNonContainerDatabaseManagementSpecResource {
	if in == nil {
		return nil
	}
	out := new(ExternalNonContainerDatabaseManagementSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalNonContainerDatabaseManagementStatus) DeepCopyInto(out *ExternalNonContainerDatabaseManagementStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalNonContainerDatabaseManagementStatus.
func (in *ExternalNonContainerDatabaseManagementStatus) DeepCopy() *ExternalNonContainerDatabaseManagementStatus {
	if in == nil {
		return nil
	}
	out := new(ExternalNonContainerDatabaseManagementStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalNonContainerDatabaseOperationsInsightsManagement) DeepCopyInto(out *ExternalNonContainerDatabaseOperationsInsightsManagement) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalNonContainerDatabaseOperationsInsightsManagement.
func (in *ExternalNonContainerDatabaseOperationsInsightsManagement) DeepCopy() *ExternalNonContainerDatabaseOperationsInsightsManagement {
	if in == nil {
		return nil
	}
	out := new(ExternalNonContainerDatabaseOperationsInsightsManagement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExternalNonContainerDatabaseOperationsInsightsManagement) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalNonContainerDatabaseOperationsInsightsManagementList) DeepCopyInto(out *ExternalNonContainerDatabaseOperationsInsightsManagementList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ExternalNonContainerDatabaseOperationsInsightsManagement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalNonContainerDatabaseOperationsInsightsManagementList.
func (in *ExternalNonContainerDatabaseOperationsInsightsManagementList) DeepCopy() *ExternalNonContainerDatabaseOperationsInsightsManagementList {
	if in == nil {
		return nil
	}
	out := new(ExternalNonContainerDatabaseOperationsInsightsManagementList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExternalNonContainerDatabaseOperationsInsightsManagementList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalNonContainerDatabaseOperationsInsightsManagementSpec) DeepCopyInto(out *ExternalNonContainerDatabaseOperationsInsightsManagementSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ExternalNonContainerDatabaseOperationsInsightsManagementSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalNonContainerDatabaseOperationsInsightsManagementSpec.
func (in *ExternalNonContainerDatabaseOperationsInsightsManagementSpec) DeepCopy() *ExternalNonContainerDatabaseOperationsInsightsManagementSpec {
	if in == nil {
		return nil
	}
	out := new(ExternalNonContainerDatabaseOperationsInsightsManagementSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalNonContainerDatabaseOperationsInsightsManagementSpecResource) DeepCopyInto(out *ExternalNonContainerDatabaseOperationsInsightsManagementSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.EnableOperationsInsights != nil {
		in, out := &in.EnableOperationsInsights, &out.EnableOperationsInsights
		*out = new(bool)
		**out = **in
	}
	if in.ExternalDatabaseConnectorID != nil {
		in, out := &in.ExternalDatabaseConnectorID, &out.ExternalDatabaseConnectorID
		*out = new(string)
		**out = **in
	}
	if in.ExternalNonContainerDatabaseID != nil {
		in, out := &in.ExternalNonContainerDatabaseID, &out.ExternalNonContainerDatabaseID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalNonContainerDatabaseOperationsInsightsManagementSpecResource.
func (in *ExternalNonContainerDatabaseOperationsInsightsManagementSpecResource) DeepCopy() *ExternalNonContainerDatabaseOperationsInsightsManagementSpecResource {
	if in == nil {
		return nil
	}
	out := new(ExternalNonContainerDatabaseOperationsInsightsManagementSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalNonContainerDatabaseOperationsInsightsManagementStatus) DeepCopyInto(out *ExternalNonContainerDatabaseOperationsInsightsManagementStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalNonContainerDatabaseOperationsInsightsManagementStatus.
func (in *ExternalNonContainerDatabaseOperationsInsightsManagementStatus) DeepCopy() *ExternalNonContainerDatabaseOperationsInsightsManagementStatus {
	if in == nil {
		return nil
	}
	out := new(ExternalNonContainerDatabaseOperationsInsightsManagementStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalNonContainerDatabaseSpec) DeepCopyInto(out *ExternalNonContainerDatabaseSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ExternalNonContainerDatabaseSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalNonContainerDatabaseSpec.
func (in *ExternalNonContainerDatabaseSpec) DeepCopy() *ExternalNonContainerDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(ExternalNonContainerDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalNonContainerDatabaseSpecDatabaseManagementConfig) DeepCopyInto(out *ExternalNonContainerDatabaseSpecDatabaseManagementConfig) {
	*out = *in
	if in.DatabaseManagementConnectionID != nil {
		in, out := &in.DatabaseManagementConnectionID, &out.DatabaseManagementConnectionID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseManagementStatus != nil {
		in, out := &in.DatabaseManagementStatus, &out.DatabaseManagementStatus
		*out = new(string)
		**out = **in
	}
	if in.LicenseModel != nil {
		in, out := &in.LicenseModel, &out.LicenseModel
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalNonContainerDatabaseSpecDatabaseManagementConfig.
func (in *ExternalNonContainerDatabaseSpecDatabaseManagementConfig) DeepCopy() *ExternalNonContainerDatabaseSpecDatabaseManagementConfig {
	if in == nil {
		return nil
	}
	out := new(ExternalNonContainerDatabaseSpecDatabaseManagementConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalNonContainerDatabaseSpecOperationsInsightsConfig) DeepCopyInto(out *ExternalNonContainerDatabaseSpecOperationsInsightsConfig) {
	*out = *in
	if in.OperationsInsightsConnectorID != nil {
		in, out := &in.OperationsInsightsConnectorID, &out.OperationsInsightsConnectorID
		*out = new(string)
		**out = **in
	}
	if in.OperationsInsightsStatus != nil {
		in, out := &in.OperationsInsightsStatus, &out.OperationsInsightsStatus
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalNonContainerDatabaseSpecOperationsInsightsConfig.
func (in *ExternalNonContainerDatabaseSpecOperationsInsightsConfig) DeepCopy() *ExternalNonContainerDatabaseSpecOperationsInsightsConfig {
	if in == nil {
		return nil
	}
	out := new(ExternalNonContainerDatabaseSpecOperationsInsightsConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalNonContainerDatabaseSpecResource) DeepCopyInto(out *ExternalNonContainerDatabaseSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.CharacterSet != nil {
		in, out := &in.CharacterSet, &out.CharacterSet
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseConfiguration != nil {
		in, out := &in.DatabaseConfiguration, &out.DatabaseConfiguration
		*out = new(string)
		**out = **in
	}
	if in.DatabaseEdition != nil {
		in, out := &in.DatabaseEdition, &out.DatabaseEdition
		*out = new(string)
		**out = **in
	}
	if in.DatabaseManagementConfig != nil {
		in, out := &in.DatabaseManagementConfig, &out.DatabaseManagementConfig
		*out = new(ExternalNonContainerDatabaseSpecDatabaseManagementConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseVersion != nil {
		in, out := &in.DatabaseVersion, &out.DatabaseVersion
		*out = new(string)
		**out = **in
	}
	if in.DbID != nil {
		in, out := &in.DbID, &out.DbID
		*out = new(string)
		**out = **in
	}
	if in.DbPacks != nil {
		in, out := &in.DbPacks, &out.DbPacks
		*out = new(string)
		**out = **in
	}
	if in.DbUniqueName != nil {
		in, out := &in.DbUniqueName, &out.DbUniqueName
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.NcharacterSet != nil {
		in, out := &in.NcharacterSet, &out.NcharacterSet
		*out = new(string)
		**out = **in
	}
	if in.OperationsInsightsConfig != nil {
		in, out := &in.OperationsInsightsConfig, &out.OperationsInsightsConfig
		*out = new(ExternalNonContainerDatabaseSpecOperationsInsightsConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalNonContainerDatabaseSpecResource.
func (in *ExternalNonContainerDatabaseSpecResource) DeepCopy() *ExternalNonContainerDatabaseSpecResource {
	if in == nil {
		return nil
	}
	out := new(ExternalNonContainerDatabaseSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalNonContainerDatabaseStatus) DeepCopyInto(out *ExternalNonContainerDatabaseStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalNonContainerDatabaseStatus.
func (in *ExternalNonContainerDatabaseStatus) DeepCopy() *ExternalNonContainerDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(ExternalNonContainerDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalPluggableDatabase) DeepCopyInto(out *ExternalPluggableDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalPluggableDatabase.
func (in *ExternalPluggableDatabase) DeepCopy() *ExternalPluggableDatabase {
	if in == nil {
		return nil
	}
	out := new(ExternalPluggableDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExternalPluggableDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalPluggableDatabaseList) DeepCopyInto(out *ExternalPluggableDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ExternalPluggableDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalPluggableDatabaseList.
func (in *ExternalPluggableDatabaseList) DeepCopy() *ExternalPluggableDatabaseList {
	if in == nil {
		return nil
	}
	out := new(ExternalPluggableDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExternalPluggableDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalPluggableDatabaseManagement) DeepCopyInto(out *ExternalPluggableDatabaseManagement) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalPluggableDatabaseManagement.
func (in *ExternalPluggableDatabaseManagement) DeepCopy() *ExternalPluggableDatabaseManagement {
	if in == nil {
		return nil
	}
	out := new(ExternalPluggableDatabaseManagement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExternalPluggableDatabaseManagement) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalPluggableDatabaseManagementList) DeepCopyInto(out *ExternalPluggableDatabaseManagementList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ExternalPluggableDatabaseManagement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalPluggableDatabaseManagementList.
func (in *ExternalPluggableDatabaseManagementList) DeepCopy() *ExternalPluggableDatabaseManagementList {
	if in == nil {
		return nil
	}
	out := new(ExternalPluggableDatabaseManagementList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExternalPluggableDatabaseManagementList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalPluggableDatabaseManagementSpec) DeepCopyInto(out *ExternalPluggableDatabaseManagementSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ExternalPluggableDatabaseManagementSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalPluggableDatabaseManagementSpec.
func (in *ExternalPluggableDatabaseManagementSpec) DeepCopy() *ExternalPluggableDatabaseManagementSpec {
	if in == nil {
		return nil
	}
	out := new(ExternalPluggableDatabaseManagementSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalPluggableDatabaseManagementSpecResource) DeepCopyInto(out *ExternalPluggableDatabaseManagementSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.EnableManagement != nil {
		in, out := &in.EnableManagement, &out.EnableManagement
		*out = new(bool)
		**out = **in
	}
	if in.ExternalDatabaseConnectorID != nil {
		in, out := &in.ExternalDatabaseConnectorID, &out.ExternalDatabaseConnectorID
		*out = new(string)
		**out = **in
	}
	if in.ExternalPluggableDatabaseID != nil {
		in, out := &in.ExternalPluggableDatabaseID, &out.ExternalPluggableDatabaseID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalPluggableDatabaseManagementSpecResource.
func (in *ExternalPluggableDatabaseManagementSpecResource) DeepCopy() *ExternalPluggableDatabaseManagementSpecResource {
	if in == nil {
		return nil
	}
	out := new(ExternalPluggableDatabaseManagementSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalPluggableDatabaseManagementStatus) DeepCopyInto(out *ExternalPluggableDatabaseManagementStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalPluggableDatabaseManagementStatus.
func (in *ExternalPluggableDatabaseManagementStatus) DeepCopy() *ExternalPluggableDatabaseManagementStatus {
	if in == nil {
		return nil
	}
	out := new(ExternalPluggableDatabaseManagementStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalPluggableDatabaseOperationsInsightsManagement) DeepCopyInto(out *ExternalPluggableDatabaseOperationsInsightsManagement) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalPluggableDatabaseOperationsInsightsManagement.
func (in *ExternalPluggableDatabaseOperationsInsightsManagement) DeepCopy() *ExternalPluggableDatabaseOperationsInsightsManagement {
	if in == nil {
		return nil
	}
	out := new(ExternalPluggableDatabaseOperationsInsightsManagement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExternalPluggableDatabaseOperationsInsightsManagement) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalPluggableDatabaseOperationsInsightsManagementList) DeepCopyInto(out *ExternalPluggableDatabaseOperationsInsightsManagementList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ExternalPluggableDatabaseOperationsInsightsManagement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalPluggableDatabaseOperationsInsightsManagementList.
func (in *ExternalPluggableDatabaseOperationsInsightsManagementList) DeepCopy() *ExternalPluggableDatabaseOperationsInsightsManagementList {
	if in == nil {
		return nil
	}
	out := new(ExternalPluggableDatabaseOperationsInsightsManagementList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExternalPluggableDatabaseOperationsInsightsManagementList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalPluggableDatabaseOperationsInsightsManagementSpec) DeepCopyInto(out *ExternalPluggableDatabaseOperationsInsightsManagementSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ExternalPluggableDatabaseOperationsInsightsManagementSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalPluggableDatabaseOperationsInsightsManagementSpec.
func (in *ExternalPluggableDatabaseOperationsInsightsManagementSpec) DeepCopy() *ExternalPluggableDatabaseOperationsInsightsManagementSpec {
	if in == nil {
		return nil
	}
	out := new(ExternalPluggableDatabaseOperationsInsightsManagementSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalPluggableDatabaseOperationsInsightsManagementSpecResource) DeepCopyInto(out *ExternalPluggableDatabaseOperationsInsightsManagementSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.EnableOperationsInsights != nil {
		in, out := &in.EnableOperationsInsights, &out.EnableOperationsInsights
		*out = new(bool)
		**out = **in
	}
	if in.ExternalDatabaseConnectorID != nil {
		in, out := &in.ExternalDatabaseConnectorID, &out.ExternalDatabaseConnectorID
		*out = new(string)
		**out = **in
	}
	if in.ExternalPluggableDatabaseID != nil {
		in, out := &in.ExternalPluggableDatabaseID, &out.ExternalPluggableDatabaseID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalPluggableDatabaseOperationsInsightsManagementSpecResource.
func (in *ExternalPluggableDatabaseOperationsInsightsManagementSpecResource) DeepCopy() *ExternalPluggableDatabaseOperationsInsightsManagementSpecResource {
	if in == nil {
		return nil
	}
	out := new(ExternalPluggableDatabaseOperationsInsightsManagementSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalPluggableDatabaseOperationsInsightsManagementStatus) DeepCopyInto(out *ExternalPluggableDatabaseOperationsInsightsManagementStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalPluggableDatabaseOperationsInsightsManagementStatus.
func (in *ExternalPluggableDatabaseOperationsInsightsManagementStatus) DeepCopy() *ExternalPluggableDatabaseOperationsInsightsManagementStatus {
	if in == nil {
		return nil
	}
	out := new(ExternalPluggableDatabaseOperationsInsightsManagementStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalPluggableDatabaseSpec) DeepCopyInto(out *ExternalPluggableDatabaseSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ExternalPluggableDatabaseSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalPluggableDatabaseSpec.
func (in *ExternalPluggableDatabaseSpec) DeepCopy() *ExternalPluggableDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(ExternalPluggableDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalPluggableDatabaseSpecDatabaseManagementConfig) DeepCopyInto(out *ExternalPluggableDatabaseSpecDatabaseManagementConfig) {
	*out = *in
	if in.DatabaseManagementConnectionID != nil {
		in, out := &in.DatabaseManagementConnectionID, &out.DatabaseManagementConnectionID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseManagementStatus != nil {
		in, out := &in.DatabaseManagementStatus, &out.DatabaseManagementStatus
		*out = new(string)
		**out = **in
	}
	if in.LicenseModel != nil {
		in, out := &in.LicenseModel, &out.LicenseModel
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalPluggableDatabaseSpecDatabaseManagementConfig.
func (in *ExternalPluggableDatabaseSpecDatabaseManagementConfig) DeepCopy() *ExternalPluggableDatabaseSpecDatabaseManagementConfig {
	if in == nil {
		return nil
	}
	out := new(ExternalPluggableDatabaseSpecDatabaseManagementConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalPluggableDatabaseSpecOperationsInsightsConfig) DeepCopyInto(out *ExternalPluggableDatabaseSpecOperationsInsightsConfig) {
	*out = *in
	if in.OperationsInsightsConnectorID != nil {
		in, out := &in.OperationsInsightsConnectorID, &out.OperationsInsightsConnectorID
		*out = new(string)
		**out = **in
	}
	if in.OperationsInsightsStatus != nil {
		in, out := &in.OperationsInsightsStatus, &out.OperationsInsightsStatus
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalPluggableDatabaseSpecOperationsInsightsConfig.
func (in *ExternalPluggableDatabaseSpecOperationsInsightsConfig) DeepCopy() *ExternalPluggableDatabaseSpecOperationsInsightsConfig {
	if in == nil {
		return nil
	}
	out := new(ExternalPluggableDatabaseSpecOperationsInsightsConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalPluggableDatabaseSpecResource) DeepCopyInto(out *ExternalPluggableDatabaseSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.CharacterSet != nil {
		in, out := &in.CharacterSet, &out.CharacterSet
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseConfiguration != nil {
		in, out := &in.DatabaseConfiguration, &out.DatabaseConfiguration
		*out = new(string)
		**out = **in
	}
	if in.DatabaseEdition != nil {
		in, out := &in.DatabaseEdition, &out.DatabaseEdition
		*out = new(string)
		**out = **in
	}
	if in.DatabaseManagementConfig != nil {
		in, out := &in.DatabaseManagementConfig, &out.DatabaseManagementConfig
		*out = new(ExternalPluggableDatabaseSpecDatabaseManagementConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseVersion != nil {
		in, out := &in.DatabaseVersion, &out.DatabaseVersion
		*out = new(string)
		**out = **in
	}
	if in.DbID != nil {
		in, out := &in.DbID, &out.DbID
		*out = new(string)
		**out = **in
	}
	if in.DbPacks != nil {
		in, out := &in.DbPacks, &out.DbPacks
		*out = new(string)
		**out = **in
	}
	if in.DbUniqueName != nil {
		in, out := &in.DbUniqueName, &out.DbUniqueName
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExternalContainerDatabaseID != nil {
		in, out := &in.ExternalContainerDatabaseID, &out.ExternalContainerDatabaseID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.NcharacterSet != nil {
		in, out := &in.NcharacterSet, &out.NcharacterSet
		*out = new(string)
		**out = **in
	}
	if in.OperationsInsightsConfig != nil {
		in, out := &in.OperationsInsightsConfig, &out.OperationsInsightsConfig
		*out = new(ExternalPluggableDatabaseSpecOperationsInsightsConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceID != nil {
		in, out := &in.SourceID, &out.SourceID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalPluggableDatabaseSpecResource.
func (in *ExternalPluggableDatabaseSpecResource) DeepCopy() *ExternalPluggableDatabaseSpecResource {
	if in == nil {
		return nil
	}
	out := new(ExternalPluggableDatabaseSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalPluggableDatabaseStatus) DeepCopyInto(out *ExternalPluggableDatabaseStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalPluggableDatabaseStatus.
func (in *ExternalPluggableDatabaseStatus) DeepCopy() *ExternalPluggableDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(ExternalPluggableDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyStore) DeepCopyInto(out *KeyStore) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyStore.
func (in *KeyStore) DeepCopy() *KeyStore {
	if in == nil {
		return nil
	}
	out := new(KeyStore)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KeyStore) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyStoreList) DeepCopyInto(out *KeyStoreList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]KeyStore, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyStoreList.
func (in *KeyStoreList) DeepCopy() *KeyStoreList {
	if in == nil {
		return nil
	}
	out := new(KeyStoreList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KeyStoreList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyStoreSpec) DeepCopyInto(out *KeyStoreSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(KeyStoreSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyStoreSpec.
func (in *KeyStoreSpec) DeepCopy() *KeyStoreSpec {
	if in == nil {
		return nil
	}
	out := new(KeyStoreSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyStoreSpecAssociatedDatabases) DeepCopyInto(out *KeyStoreSpecAssociatedDatabases) {
	*out = *in
	if in.DbName != nil {
		in, out := &in.DbName, &out.DbName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyStoreSpecAssociatedDatabases.
func (in *KeyStoreSpecAssociatedDatabases) DeepCopy() *KeyStoreSpecAssociatedDatabases {
	if in == nil {
		return nil
	}
	out := new(KeyStoreSpecAssociatedDatabases)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyStoreSpecResource) DeepCopyInto(out *KeyStoreSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AssociatedDatabases != nil {
		in, out := &in.AssociatedDatabases, &out.AssociatedDatabases
		*out = make([]KeyStoreSpecAssociatedDatabases, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TypeDetails != nil {
		in, out := &in.TypeDetails, &out.TypeDetails
		*out = new(KeyStoreSpecTypeDetails)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyStoreSpecResource.
func (in *KeyStoreSpecResource) DeepCopy() *KeyStoreSpecResource {
	if in == nil {
		return nil
	}
	out := new(KeyStoreSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyStoreSpecTypeDetails) DeepCopyInto(out *KeyStoreSpecTypeDetails) {
	*out = *in
	if in.AdminUsername != nil {
		in, out := &in.AdminUsername, &out.AdminUsername
		*out = new(string)
		**out = **in
	}
	if in.ConnectionIPS != nil {
		in, out := &in.ConnectionIPS, &out.ConnectionIPS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SecretID != nil {
		in, out := &in.SecretID, &out.SecretID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VaultID != nil {
		in, out := &in.VaultID, &out.VaultID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyStoreSpecTypeDetails.
func (in *KeyStoreSpecTypeDetails) DeepCopy() *KeyStoreSpecTypeDetails {
	if in == nil {
		return nil
	}
	out := new(KeyStoreSpecTypeDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyStoreStatus) DeepCopyInto(out *KeyStoreStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyStoreStatus.
func (in *KeyStoreStatus) DeepCopy() *KeyStoreStatus {
	if in == nil {
		return nil
	}
	out := new(KeyStoreStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceRun) DeepCopyInto(out *MaintenanceRun) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceRun.
func (in *MaintenanceRun) DeepCopy() *MaintenanceRun {
	if in == nil {
		return nil
	}
	out := new(MaintenanceRun)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MaintenanceRun) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceRunList) DeepCopyInto(out *MaintenanceRunList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MaintenanceRun, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceRunList.
func (in *MaintenanceRunList) DeepCopy() *MaintenanceRunList {
	if in == nil {
		return nil
	}
	out := new(MaintenanceRunList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MaintenanceRunList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceRunSpec) DeepCopyInto(out *MaintenanceRunSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(MaintenanceRunSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceRunSpec.
func (in *MaintenanceRunSpec) DeepCopy() *MaintenanceRunSpec {
	if in == nil {
		return nil
	}
	out := new(MaintenanceRunSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceRunSpecResource) DeepCopyInto(out *MaintenanceRunSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPatchNowEnabled != nil {
		in, out := &in.IsPatchNowEnabled, &out.IsPatchNowEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceRunID != nil {
		in, out := &in.MaintenanceRunID, &out.MaintenanceRunID
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceSubtype != nil {
		in, out := &in.MaintenanceSubtype, &out.MaintenanceSubtype
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceType != nil {
		in, out := &in.MaintenanceType, &out.MaintenanceType
		*out = new(string)
		**out = **in
	}
	if in.PatchFailureCount != nil {
		in, out := &in.PatchFailureCount, &out.PatchFailureCount
		*out = new(int64)
		**out = **in
	}
	if in.PatchID != nil {
		in, out := &in.PatchID, &out.PatchID
		*out = new(string)
		**out = **in
	}
	if in.PatchingMode != nil {
		in, out := &in.PatchingMode, &out.PatchingMode
		*out = new(string)
		**out = **in
	}
	if in.PeerMaintenanceRunID != nil {
		in, out := &in.PeerMaintenanceRunID, &out.PeerMaintenanceRunID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TargetResourceID != nil {
		in, out := &in.TargetResourceID, &out.TargetResourceID
		*out = new(string)
		**out = **in
	}
	if in.TargetResourceType != nil {
		in, out := &in.TargetResourceType, &out.TargetResourceType
		*out = new(string)
		**out = **in
	}
	if in.TimeEnded != nil {
		in, out := &in.TimeEnded, &out.TimeEnded
		*out = new(string)
		**out = **in
	}
	if in.TimeScheduled != nil {
		in, out := &in.TimeScheduled, &out.TimeScheduled
		*out = new(string)
		**out = **in
	}
	if in.TimeStarted != nil {
		in, out := &in.TimeStarted, &out.TimeStarted
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceRunSpecResource.
func (in *MaintenanceRunSpecResource) DeepCopy() *MaintenanceRunSpecResource {
	if in == nil {
		return nil
	}
	out := new(MaintenanceRunSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceRunStatus) DeepCopyInto(out *MaintenanceRunStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceRunStatus.
func (in *MaintenanceRunStatus) DeepCopy() *MaintenanceRunStatus {
	if in == nil {
		return nil
	}
	out := new(MaintenanceRunStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementManagedDatabaseGroup) DeepCopyInto(out *ManagementManagedDatabaseGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementManagedDatabaseGroup.
func (in *ManagementManagedDatabaseGroup) DeepCopy() *ManagementManagedDatabaseGroup {
	if in == nil {
		return nil
	}
	out := new(ManagementManagedDatabaseGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagementManagedDatabaseGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementManagedDatabaseGroupList) DeepCopyInto(out *ManagementManagedDatabaseGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ManagementManagedDatabaseGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementManagedDatabaseGroupList.
func (in *ManagementManagedDatabaseGroupList) DeepCopy() *ManagementManagedDatabaseGroupList {
	if in == nil {
		return nil
	}
	out := new(ManagementManagedDatabaseGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagementManagedDatabaseGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementManagedDatabaseGroupSpec) DeepCopyInto(out *ManagementManagedDatabaseGroupSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ManagementManagedDatabaseGroupSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementManagedDatabaseGroupSpec.
func (in *ManagementManagedDatabaseGroupSpec) DeepCopy() *ManagementManagedDatabaseGroupSpec {
	if in == nil {
		return nil
	}
	out := new(ManagementManagedDatabaseGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementManagedDatabaseGroupSpecManagedDatabases) DeepCopyInto(out *ManagementManagedDatabaseGroupSpecManagedDatabases) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseSubType != nil {
		in, out := &in.DatabaseSubType, &out.DatabaseSubType
		*out = new(string)
		**out = **in
	}
	if in.DatabaseType != nil {
		in, out := &in.DatabaseType, &out.DatabaseType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.TimeAdded != nil {
		in, out := &in.TimeAdded, &out.TimeAdded
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementManagedDatabaseGroupSpecManagedDatabases.
func (in *ManagementManagedDatabaseGroupSpecManagedDatabases) DeepCopy() *ManagementManagedDatabaseGroupSpecManagedDatabases {
	if in == nil {
		return nil
	}
	out := new(ManagementManagedDatabaseGroupSpecManagedDatabases)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementManagedDatabaseGroupSpecResource) DeepCopyInto(out *ManagementManagedDatabaseGroupSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ManagedDatabases != nil {
		in, out := &in.ManagedDatabases, &out.ManagedDatabases
		*out = make([]ManagementManagedDatabaseGroupSpecManagedDatabases, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeUpdated != nil {
		in, out := &in.TimeUpdated, &out.TimeUpdated
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementManagedDatabaseGroupSpecResource.
func (in *ManagementManagedDatabaseGroupSpecResource) DeepCopy() *ManagementManagedDatabaseGroupSpecResource {
	if in == nil {
		return nil
	}
	out := new(ManagementManagedDatabaseGroupSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementManagedDatabaseGroupStatus) DeepCopyInto(out *ManagementManagedDatabaseGroupStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementManagedDatabaseGroupStatus.
func (in *ManagementManagedDatabaseGroupStatus) DeepCopy() *ManagementManagedDatabaseGroupStatus {
	if in == nil {
		return nil
	}
	out := new(ManagementManagedDatabaseGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementManagedDatabasesChangeDatabaseParameter) DeepCopyInto(out *ManagementManagedDatabasesChangeDatabaseParameter) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementManagedDatabasesChangeDatabaseParameter.
func (in *ManagementManagedDatabasesChangeDatabaseParameter) DeepCopy() *ManagementManagedDatabasesChangeDatabaseParameter {
	if in == nil {
		return nil
	}
	out := new(ManagementManagedDatabasesChangeDatabaseParameter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagementManagedDatabasesChangeDatabaseParameter) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementManagedDatabasesChangeDatabaseParameterList) DeepCopyInto(out *ManagementManagedDatabasesChangeDatabaseParameterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ManagementManagedDatabasesChangeDatabaseParameter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementManagedDatabasesChangeDatabaseParameterList.
func (in *ManagementManagedDatabasesChangeDatabaseParameterList) DeepCopy() *ManagementManagedDatabasesChangeDatabaseParameterList {
	if in == nil {
		return nil
	}
	out := new(ManagementManagedDatabasesChangeDatabaseParameterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagementManagedDatabasesChangeDatabaseParameterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementManagedDatabasesChangeDatabaseParameterSpec) DeepCopyInto(out *ManagementManagedDatabasesChangeDatabaseParameterSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ManagementManagedDatabasesChangeDatabaseParameterSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementManagedDatabasesChangeDatabaseParameterSpec.
func (in *ManagementManagedDatabasesChangeDatabaseParameterSpec) DeepCopy() *ManagementManagedDatabasesChangeDatabaseParameterSpec {
	if in == nil {
		return nil
	}
	out := new(ManagementManagedDatabasesChangeDatabaseParameterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementManagedDatabasesChangeDatabaseParameterSpecCredentials) DeepCopyInto(out *ManagementManagedDatabasesChangeDatabaseParameterSpecCredentials) {
	*out = *in
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementManagedDatabasesChangeDatabaseParameterSpecCredentials.
func (in *ManagementManagedDatabasesChangeDatabaseParameterSpecCredentials) DeepCopy() *ManagementManagedDatabasesChangeDatabaseParameterSpecCredentials {
	if in == nil {
		return nil
	}
	out := new(ManagementManagedDatabasesChangeDatabaseParameterSpecCredentials)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementManagedDatabasesChangeDatabaseParameterSpecParameters) DeepCopyInto(out *ManagementManagedDatabasesChangeDatabaseParameterSpecParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UpdateComment != nil {
		in, out := &in.UpdateComment, &out.UpdateComment
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementManagedDatabasesChangeDatabaseParameterSpecParameters.
func (in *ManagementManagedDatabasesChangeDatabaseParameterSpecParameters) DeepCopy() *ManagementManagedDatabasesChangeDatabaseParameterSpecParameters {
	if in == nil {
		return nil
	}
	out := new(ManagementManagedDatabasesChangeDatabaseParameterSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementManagedDatabasesChangeDatabaseParameterSpecResource) DeepCopyInto(out *ManagementManagedDatabasesChangeDatabaseParameterSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Credentials != nil {
		in, out := &in.Credentials, &out.Credentials
		*out = new(ManagementManagedDatabasesChangeDatabaseParameterSpecCredentials)
		(*in).DeepCopyInto(*out)
	}
	if in.ManagedDatabaseID != nil {
		in, out := &in.ManagedDatabaseID, &out.ManagedDatabaseID
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]ManagementManagedDatabasesChangeDatabaseParameterSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementManagedDatabasesChangeDatabaseParameterSpecResource.
func (in *ManagementManagedDatabasesChangeDatabaseParameterSpecResource) DeepCopy() *ManagementManagedDatabasesChangeDatabaseParameterSpecResource {
	if in == nil {
		return nil
	}
	out := new(ManagementManagedDatabasesChangeDatabaseParameterSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementManagedDatabasesChangeDatabaseParameterStatus) DeepCopyInto(out *ManagementManagedDatabasesChangeDatabaseParameterStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementManagedDatabasesChangeDatabaseParameterStatus.
func (in *ManagementManagedDatabasesChangeDatabaseParameterStatus) DeepCopy() *ManagementManagedDatabasesChangeDatabaseParameterStatus {
	if in == nil {
		return nil
	}
	out := new(ManagementManagedDatabasesChangeDatabaseParameterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementManagedDatabasesResetDatabaseParameter) DeepCopyInto(out *ManagementManagedDatabasesResetDatabaseParameter) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementManagedDatabasesResetDatabaseParameter.
func (in *ManagementManagedDatabasesResetDatabaseParameter) DeepCopy() *ManagementManagedDatabasesResetDatabaseParameter {
	if in == nil {
		return nil
	}
	out := new(ManagementManagedDatabasesResetDatabaseParameter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagementManagedDatabasesResetDatabaseParameter) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementManagedDatabasesResetDatabaseParameterList) DeepCopyInto(out *ManagementManagedDatabasesResetDatabaseParameterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ManagementManagedDatabasesResetDatabaseParameter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementManagedDatabasesResetDatabaseParameterList.
func (in *ManagementManagedDatabasesResetDatabaseParameterList) DeepCopy() *ManagementManagedDatabasesResetDatabaseParameterList {
	if in == nil {
		return nil
	}
	out := new(ManagementManagedDatabasesResetDatabaseParameterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagementManagedDatabasesResetDatabaseParameterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementManagedDatabasesResetDatabaseParameterSpec) DeepCopyInto(out *ManagementManagedDatabasesResetDatabaseParameterSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ManagementManagedDatabasesResetDatabaseParameterSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementManagedDatabasesResetDatabaseParameterSpec.
func (in *ManagementManagedDatabasesResetDatabaseParameterSpec) DeepCopy() *ManagementManagedDatabasesResetDatabaseParameterSpec {
	if in == nil {
		return nil
	}
	out := new(ManagementManagedDatabasesResetDatabaseParameterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementManagedDatabasesResetDatabaseParameterSpecCredentials) DeepCopyInto(out *ManagementManagedDatabasesResetDatabaseParameterSpecCredentials) {
	*out = *in
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementManagedDatabasesResetDatabaseParameterSpecCredentials.
func (in *ManagementManagedDatabasesResetDatabaseParameterSpecCredentials) DeepCopy() *ManagementManagedDatabasesResetDatabaseParameterSpecCredentials {
	if in == nil {
		return nil
	}
	out := new(ManagementManagedDatabasesResetDatabaseParameterSpecCredentials)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementManagedDatabasesResetDatabaseParameterSpecResource) DeepCopyInto(out *ManagementManagedDatabasesResetDatabaseParameterSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Credentials != nil {
		in, out := &in.Credentials, &out.Credentials
		*out = new(ManagementManagedDatabasesResetDatabaseParameterSpecCredentials)
		(*in).DeepCopyInto(*out)
	}
	if in.ManagedDatabaseID != nil {
		in, out := &in.ManagedDatabaseID, &out.ManagedDatabaseID
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementManagedDatabasesResetDatabaseParameterSpecResource.
func (in *ManagementManagedDatabasesResetDatabaseParameterSpecResource) DeepCopy() *ManagementManagedDatabasesResetDatabaseParameterSpecResource {
	if in == nil {
		return nil
	}
	out := new(ManagementManagedDatabasesResetDatabaseParameterSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementManagedDatabasesResetDatabaseParameterStatus) DeepCopyInto(out *ManagementManagedDatabasesResetDatabaseParameterStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementManagedDatabasesResetDatabaseParameterStatus.
func (in *ManagementManagedDatabasesResetDatabaseParameterStatus) DeepCopy() *ManagementManagedDatabasesResetDatabaseParameterStatus {
	if in == nil {
		return nil
	}
	out := new(ManagementManagedDatabasesResetDatabaseParameterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Migration) DeepCopyInto(out *Migration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Migration.
func (in *Migration) DeepCopy() *Migration {
	if in == nil {
		return nil
	}
	out := new(Migration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Migration) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationAgent) DeepCopyInto(out *MigrationAgent) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationAgent.
func (in *MigrationAgent) DeepCopy() *MigrationAgent {
	if in == nil {
		return nil
	}
	out := new(MigrationAgent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MigrationAgent) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationAgentList) DeepCopyInto(out *MigrationAgentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MigrationAgent, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationAgentList.
func (in *MigrationAgentList) DeepCopy() *MigrationAgentList {
	if in == nil {
		return nil
	}
	out := new(MigrationAgentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MigrationAgentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationAgentSpec) DeepCopyInto(out *MigrationAgentSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(MigrationAgentSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationAgentSpec.
func (in *MigrationAgentSpec) DeepCopy() *MigrationAgentSpec {
	if in == nil {
		return nil
	}
	out := new(MigrationAgentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationAgentSpecResource) DeepCopyInto(out *MigrationAgentSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AgentID != nil {
		in, out := &in.AgentID, &out.AgentID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.StreamID != nil {
		in, out := &in.StreamID, &out.StreamID
		*out = new(string)
		**out = **in
	}
	if in.SystemTags != nil {
		in, out := &in.SystemTags, &out.SystemTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeUpdated != nil {
		in, out := &in.TimeUpdated, &out.TimeUpdated
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationAgentSpecResource.
func (in *MigrationAgentSpecResource) DeepCopy() *MigrationAgentSpecResource {
	if in == nil {
		return nil
	}
	out := new(MigrationAgentSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationAgentStatus) DeepCopyInto(out *MigrationAgentStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationAgentStatus.
func (in *MigrationAgentStatus) DeepCopy() *MigrationAgentStatus {
	if in == nil {
		return nil
	}
	out := new(MigrationAgentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationConnection) DeepCopyInto(out *MigrationConnection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationConnection.
func (in *MigrationConnection) DeepCopy() *MigrationConnection {
	if in == nil {
		return nil
	}
	out := new(MigrationConnection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MigrationConnection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationConnectionList) DeepCopyInto(out *MigrationConnectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MigrationConnection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationConnectionList.
func (in *MigrationConnectionList) DeepCopy() *MigrationConnectionList {
	if in == nil {
		return nil
	}
	out := new(MigrationConnectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MigrationConnectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationConnectionSpec) DeepCopyInto(out *MigrationConnectionSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(MigrationConnectionSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationConnectionSpec.
func (in *MigrationConnectionSpec) DeepCopy() *MigrationConnectionSpec {
	if in == nil {
		return nil
	}
	out := new(MigrationConnectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationConnectionSpecAdminCredentials) DeepCopyInto(out *MigrationConnectionSpecAdminCredentials) {
	*out = *in
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationConnectionSpecAdminCredentials.
func (in *MigrationConnectionSpecAdminCredentials) DeepCopy() *MigrationConnectionSpecAdminCredentials {
	if in == nil {
		return nil
	}
	out := new(MigrationConnectionSpecAdminCredentials)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationConnectionSpecConnectDescriptor) DeepCopyInto(out *MigrationConnectionSpecConnectDescriptor) {
	*out = *in
	if in.ConnectString != nil {
		in, out := &in.ConnectString, &out.ConnectString
		*out = new(string)
		**out = **in
	}
	if in.DatabaseServiceName != nil {
		in, out := &in.DatabaseServiceName, &out.DatabaseServiceName
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationConnectionSpecConnectDescriptor.
func (in *MigrationConnectionSpecConnectDescriptor) DeepCopy() *MigrationConnectionSpecConnectDescriptor {
	if in == nil {
		return nil
	}
	out := new(MigrationConnectionSpecConnectDescriptor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationConnectionSpecPrivateEndpoint) DeepCopyInto(out *MigrationConnectionSpecPrivateEndpoint) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationConnectionSpecPrivateEndpoint.
func (in *MigrationConnectionSpecPrivateEndpoint) DeepCopy() *MigrationConnectionSpecPrivateEndpoint {
	if in == nil {
		return nil
	}
	out := new(MigrationConnectionSpecPrivateEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationConnectionSpecResource) DeepCopyInto(out *MigrationConnectionSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdminCredentials != nil {
		in, out := &in.AdminCredentials, &out.AdminCredentials
		*out = new(MigrationConnectionSpecAdminCredentials)
		(*in).DeepCopyInto(*out)
	}
	if in.CertificateTdn != nil {
		in, out := &in.CertificateTdn, &out.CertificateTdn
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ConnectDescriptor != nil {
		in, out := &in.ConnectDescriptor, &out.ConnectDescriptor
		*out = new(MigrationConnectionSpecConnectDescriptor)
		(*in).DeepCopyInto(*out)
	}
	if in.CredentialsSecretID != nil {
		in, out := &in.CredentialsSecretID, &out.CredentialsSecretID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseID != nil {
		in, out := &in.DatabaseID, &out.DatabaseID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseType != nil {
		in, out := &in.DatabaseType, &out.DatabaseType
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.PrivateEndpoint != nil {
		in, out := &in.PrivateEndpoint, &out.PrivateEndpoint
		*out = new(MigrationConnectionSpecPrivateEndpoint)
		(*in).DeepCopyInto(*out)
	}
	if in.SshDetails != nil {
		in, out := &in.SshDetails, &out.SshDetails
		*out = new(MigrationConnectionSpecSshDetails)
		(*in).DeepCopyInto(*out)
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SystemTags != nil {
		in, out := &in.SystemTags, &out.SystemTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeUpdated != nil {
		in, out := &in.TimeUpdated, &out.TimeUpdated
		*out = new(string)
		**out = **in
	}
	if in.TlsKeystore != nil {
		in, out := &in.TlsKeystore, &out.TlsKeystore
		*out = new(string)
		**out = **in
	}
	if in.TlsWallet != nil {
		in, out := &in.TlsWallet, &out.TlsWallet
		*out = new(string)
		**out = **in
	}
	if in.VaultDetails != nil {
		in, out := &in.VaultDetails, &out.VaultDetails
		*out = new(MigrationConnectionSpecVaultDetails)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationConnectionSpecResource.
func (in *MigrationConnectionSpecResource) DeepCopy() *MigrationConnectionSpecResource {
	if in == nil {
		return nil
	}
	out := new(MigrationConnectionSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationConnectionSpecSshDetails) DeepCopyInto(out *MigrationConnectionSpecSshDetails) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Sshkey != nil {
		in, out := &in.Sshkey, &out.Sshkey
		*out = new(string)
		**out = **in
	}
	if in.SudoLocation != nil {
		in, out := &in.SudoLocation, &out.SudoLocation
		*out = new(string)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationConnectionSpecSshDetails.
func (in *MigrationConnectionSpecSshDetails) DeepCopy() *MigrationConnectionSpecSshDetails {
	if in == nil {
		return nil
	}
	out := new(MigrationConnectionSpecSshDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationConnectionSpecVaultDetails) DeepCopyInto(out *MigrationConnectionSpecVaultDetails) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.KeyID != nil {
		in, out := &in.KeyID, &out.KeyID
		*out = new(string)
		**out = **in
	}
	if in.VaultID != nil {
		in, out := &in.VaultID, &out.VaultID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationConnectionSpecVaultDetails.
func (in *MigrationConnectionSpecVaultDetails) DeepCopy() *MigrationConnectionSpecVaultDetails {
	if in == nil {
		return nil
	}
	out := new(MigrationConnectionSpecVaultDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationConnectionStatus) DeepCopyInto(out *MigrationConnectionStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationConnectionStatus.
func (in *MigrationConnectionStatus) DeepCopy() *MigrationConnectionStatus {
	if in == nil {
		return nil
	}
	out := new(MigrationConnectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationJob) DeepCopyInto(out *MigrationJob) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationJob.
func (in *MigrationJob) DeepCopy() *MigrationJob {
	if in == nil {
		return nil
	}
	out := new(MigrationJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MigrationJob) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationJobList) DeepCopyInto(out *MigrationJobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MigrationJob, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationJobList.
func (in *MigrationJobList) DeepCopy() *MigrationJobList {
	if in == nil {
		return nil
	}
	out := new(MigrationJobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MigrationJobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationJobSpec) DeepCopyInto(out *MigrationJobSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(MigrationJobSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationJobSpec.
func (in *MigrationJobSpec) DeepCopy() *MigrationJobSpec {
	if in == nil {
		return nil
	}
	out := new(MigrationJobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationJobSpecProgress) DeepCopyInto(out *MigrationJobSpecProgress) {
	*out = *in
	if in.CurrentPhase != nil {
		in, out := &in.CurrentPhase, &out.CurrentPhase
		*out = new(string)
		**out = **in
	}
	if in.CurrentStatus != nil {
		in, out := &in.CurrentStatus, &out.CurrentStatus
		*out = new(string)
		**out = **in
	}
	if in.Phases != nil {
		in, out := &in.Phases, &out.Phases
		*out = make([]MigrationJobSpecProgressPhases, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationJobSpecProgress.
func (in *MigrationJobSpecProgress) DeepCopy() *MigrationJobSpecProgress {
	if in == nil {
		return nil
	}
	out := new(MigrationJobSpecProgress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationJobSpecProgressPhases) DeepCopyInto(out *MigrationJobSpecProgressPhases) {
	*out = *in
	if in.DurationInMs != nil {
		in, out := &in.DurationInMs, &out.DurationInMs
		*out = new(int64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Progress != nil {
		in, out := &in.Progress, &out.Progress
		*out = new(int64)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationJobSpecProgressPhases.
func (in *MigrationJobSpecProgressPhases) DeepCopy() *MigrationJobSpecProgressPhases {
	if in == nil {
		return nil
	}
	out := new(MigrationJobSpecProgressPhases)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationJobSpecResource) DeepCopyInto(out *MigrationJobSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(string)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.MigrationID != nil {
		in, out := &in.MigrationID, &out.MigrationID
		*out = new(string)
		**out = **in
	}
	if in.Progress != nil {
		in, out := &in.Progress, &out.Progress
		*out = new(MigrationJobSpecProgress)
		(*in).DeepCopyInto(*out)
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SystemTags != nil {
		in, out := &in.SystemTags, &out.SystemTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeUpdated != nil {
		in, out := &in.TimeUpdated, &out.TimeUpdated
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UnsupportedObjects != nil {
		in, out := &in.UnsupportedObjects, &out.UnsupportedObjects
		*out = make([]MigrationJobSpecUnsupportedObjects, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationJobSpecResource.
func (in *MigrationJobSpecResource) DeepCopy() *MigrationJobSpecResource {
	if in == nil {
		return nil
	}
	out := new(MigrationJobSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationJobSpecUnsupportedObjects) DeepCopyInto(out *MigrationJobSpecUnsupportedObjects) {
	*out = *in
	if in.Object != nil {
		in, out := &in.Object, &out.Object
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationJobSpecUnsupportedObjects.
func (in *MigrationJobSpecUnsupportedObjects) DeepCopy() *MigrationJobSpecUnsupportedObjects {
	if in == nil {
		return nil
	}
	out := new(MigrationJobSpecUnsupportedObjects)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationJobStatus) DeepCopyInto(out *MigrationJobStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationJobStatus.
func (in *MigrationJobStatus) DeepCopy() *MigrationJobStatus {
	if in == nil {
		return nil
	}
	out := new(MigrationJobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationList) DeepCopyInto(out *MigrationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Migration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationList.
func (in *MigrationList) DeepCopy() *MigrationList {
	if in == nil {
		return nil
	}
	out := new(MigrationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MigrationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationMigration) DeepCopyInto(out *MigrationMigration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationMigration.
func (in *MigrationMigration) DeepCopy() *MigrationMigration {
	if in == nil {
		return nil
	}
	out := new(MigrationMigration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MigrationMigration) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationMigrationList) DeepCopyInto(out *MigrationMigrationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MigrationMigration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationMigrationList.
func (in *MigrationMigrationList) DeepCopy() *MigrationMigrationList {
	if in == nil {
		return nil
	}
	out := new(MigrationMigrationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MigrationMigrationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationMigrationSpec) DeepCopyInto(out *MigrationMigrationSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(MigrationMigrationSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationMigrationSpec.
func (in *MigrationMigrationSpec) DeepCopy() *MigrationMigrationSpec {
	if in == nil {
		return nil
	}
	out := new(MigrationMigrationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationMigrationSpecDataTransferMediumDetails) DeepCopyInto(out *MigrationMigrationSpecDataTransferMediumDetails) {
	*out = *in
	if in.DatabaseLinkDetails != nil {
		in, out := &in.DatabaseLinkDetails, &out.DatabaseLinkDetails
		*out = new(MigrationMigrationSpecDataTransferMediumDetailsDatabaseLinkDetails)
		(*in).DeepCopyInto(*out)
	}
	if in.ObjectStorageDetails != nil {
		in, out := &in.ObjectStorageDetails, &out.ObjectStorageDetails
		*out = new(MigrationMigrationSpecDataTransferMediumDetailsObjectStorageDetails)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationMigrationSpecDataTransferMediumDetails.
func (in *MigrationMigrationSpecDataTransferMediumDetails) DeepCopy() *MigrationMigrationSpecDataTransferMediumDetails {
	if in == nil {
		return nil
	}
	out := new(MigrationMigrationSpecDataTransferMediumDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationMigrationSpecDataTransferMediumDetailsDatabaseLinkDetails) DeepCopyInto(out *MigrationMigrationSpecDataTransferMediumDetailsDatabaseLinkDetails) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationMigrationSpecDataTransferMediumDetailsDatabaseLinkDetails.
func (in *MigrationMigrationSpecDataTransferMediumDetailsDatabaseLinkDetails) DeepCopy() *MigrationMigrationSpecDataTransferMediumDetailsDatabaseLinkDetails {
	if in == nil {
		return nil
	}
	out := new(MigrationMigrationSpecDataTransferMediumDetailsDatabaseLinkDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationMigrationSpecDataTransferMediumDetailsObjectStorageDetails) DeepCopyInto(out *MigrationMigrationSpecDataTransferMediumDetailsObjectStorageDetails) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationMigrationSpecDataTransferMediumDetailsObjectStorageDetails.
func (in *MigrationMigrationSpecDataTransferMediumDetailsObjectStorageDetails) DeepCopy() *MigrationMigrationSpecDataTransferMediumDetailsObjectStorageDetails {
	if in == nil {
		return nil
	}
	out := new(MigrationMigrationSpecDataTransferMediumDetailsObjectStorageDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationMigrationSpecDatapumpSettings) DeepCopyInto(out *MigrationMigrationSpecDatapumpSettings) {
	*out = *in
	if in.DataPumpParameters != nil {
		in, out := &in.DataPumpParameters, &out.DataPumpParameters
		*out = new(MigrationMigrationSpecDatapumpSettingsDataPumpParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ExportDirectoryObject != nil {
		in, out := &in.ExportDirectoryObject, &out.ExportDirectoryObject
		*out = new(MigrationMigrationSpecDatapumpSettingsExportDirectoryObject)
		(*in).DeepCopyInto(*out)
	}
	if in.ImportDirectoryObject != nil {
		in, out := &in.ImportDirectoryObject, &out.ImportDirectoryObject
		*out = new(MigrationMigrationSpecDatapumpSettingsImportDirectoryObject)
		(*in).DeepCopyInto(*out)
	}
	if in.JobMode != nil {
		in, out := &in.JobMode, &out.JobMode
		*out = new(string)
		**out = **in
	}
	if in.MetadataRemaps != nil {
		in, out := &in.MetadataRemaps, &out.MetadataRemaps
		*out = make([]MigrationMigrationSpecDatapumpSettingsMetadataRemaps, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationMigrationSpecDatapumpSettings.
func (in *MigrationMigrationSpecDatapumpSettings) DeepCopy() *MigrationMigrationSpecDatapumpSettings {
	if in == nil {
		return nil
	}
	out := new(MigrationMigrationSpecDatapumpSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationMigrationSpecDatapumpSettingsDataPumpParameters) DeepCopyInto(out *MigrationMigrationSpecDatapumpSettingsDataPumpParameters) {
	*out = *in
	if in.Estimate != nil {
		in, out := &in.Estimate, &out.Estimate
		*out = new(string)
		**out = **in
	}
	if in.ExcludeParameters != nil {
		in, out := &in.ExcludeParameters, &out.ExcludeParameters
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExportParallelismDegree != nil {
		in, out := &in.ExportParallelismDegree, &out.ExportParallelismDegree
		*out = new(int64)
		**out = **in
	}
	if in.ImportParallelismDegree != nil {
		in, out := &in.ImportParallelismDegree, &out.ImportParallelismDegree
		*out = new(int64)
		**out = **in
	}
	if in.IsCluster != nil {
		in, out := &in.IsCluster, &out.IsCluster
		*out = new(bool)
		**out = **in
	}
	if in.TableExistsAction != nil {
		in, out := &in.TableExistsAction, &out.TableExistsAction
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationMigrationSpecDatapumpSettingsDataPumpParameters.
func (in *MigrationMigrationSpecDatapumpSettingsDataPumpParameters) DeepCopy() *MigrationMigrationSpecDatapumpSettingsDataPumpParameters {
	if in == nil {
		return nil
	}
	out := new(MigrationMigrationSpecDatapumpSettingsDataPumpParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationMigrationSpecDatapumpSettingsExportDirectoryObject) DeepCopyInto(out *MigrationMigrationSpecDatapumpSettingsExportDirectoryObject) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationMigrationSpecDatapumpSettingsExportDirectoryObject.
func (in *MigrationMigrationSpecDatapumpSettingsExportDirectoryObject) DeepCopy() *MigrationMigrationSpecDatapumpSettingsExportDirectoryObject {
	if in == nil {
		return nil
	}
	out := new(MigrationMigrationSpecDatapumpSettingsExportDirectoryObject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationMigrationSpecDatapumpSettingsImportDirectoryObject) DeepCopyInto(out *MigrationMigrationSpecDatapumpSettingsImportDirectoryObject) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationMigrationSpecDatapumpSettingsImportDirectoryObject.
func (in *MigrationMigrationSpecDatapumpSettingsImportDirectoryObject) DeepCopy() *MigrationMigrationSpecDatapumpSettingsImportDirectoryObject {
	if in == nil {
		return nil
	}
	out := new(MigrationMigrationSpecDatapumpSettingsImportDirectoryObject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationMigrationSpecDatapumpSettingsMetadataRemaps) DeepCopyInto(out *MigrationMigrationSpecDatapumpSettingsMetadataRemaps) {
	*out = *in
	if in.NewValue != nil {
		in, out := &in.NewValue, &out.NewValue
		*out = new(string)
		**out = **in
	}
	if in.OldValue != nil {
		in, out := &in.OldValue, &out.OldValue
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationMigrationSpecDatapumpSettingsMetadataRemaps.
func (in *MigrationMigrationSpecDatapumpSettingsMetadataRemaps) DeepCopy() *MigrationMigrationSpecDatapumpSettingsMetadataRemaps {
	if in == nil {
		return nil
	}
	out := new(MigrationMigrationSpecDatapumpSettingsMetadataRemaps)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationMigrationSpecExcludeObjects) DeepCopyInto(out *MigrationMigrationSpecExcludeObjects) {
	*out = *in
	if in.Object != nil {
		in, out := &in.Object, &out.Object
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationMigrationSpecExcludeObjects.
func (in *MigrationMigrationSpecExcludeObjects) DeepCopy() *MigrationMigrationSpecExcludeObjects {
	if in == nil {
		return nil
	}
	out := new(MigrationMigrationSpecExcludeObjects)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationMigrationSpecGoldenGateDetails) DeepCopyInto(out *MigrationMigrationSpecGoldenGateDetails) {
	*out = *in
	if in.Hub != nil {
		in, out := &in.Hub, &out.Hub
		*out = new(MigrationMigrationSpecGoldenGateDetailsHub)
		(*in).DeepCopyInto(*out)
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = new(MigrationMigrationSpecGoldenGateDetailsSettings)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationMigrationSpecGoldenGateDetails.
func (in *MigrationMigrationSpecGoldenGateDetails) DeepCopy() *MigrationMigrationSpecGoldenGateDetails {
	if in == nil {
		return nil
	}
	out := new(MigrationMigrationSpecGoldenGateDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationMigrationSpecGoldenGateDetailsHub) DeepCopyInto(out *MigrationMigrationSpecGoldenGateDetailsHub) {
	*out = *in
	if in.ComputeID != nil {
		in, out := &in.ComputeID, &out.ComputeID
		*out = new(string)
		**out = **in
	}
	if in.RestAdminCredentials != nil {
		in, out := &in.RestAdminCredentials, &out.RestAdminCredentials
		*out = new(MigrationMigrationSpecGoldenGateDetailsHubRestAdminCredentials)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceContainerDbAdminCredentials != nil {
		in, out := &in.SourceContainerDbAdminCredentials, &out.SourceContainerDbAdminCredentials
		*out = new(MigrationMigrationSpecGoldenGateDetailsHubSourceContainerDbAdminCredentials)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceDbAdminCredentials != nil {
		in, out := &in.SourceDbAdminCredentials, &out.SourceDbAdminCredentials
		*out = new(MigrationMigrationSpecGoldenGateDetailsHubSourceDbAdminCredentials)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceMicroservicesDeploymentName != nil {
		in, out := &in.SourceMicroservicesDeploymentName, &out.SourceMicroservicesDeploymentName
		*out = new(string)
		**out = **in
	}
	if in.TargetDbAdminCredentials != nil {
		in, out := &in.TargetDbAdminCredentials, &out.TargetDbAdminCredentials
		*out = new(MigrationMigrationSpecGoldenGateDetailsHubTargetDbAdminCredentials)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetMicroservicesDeploymentName != nil {
		in, out := &in.TargetMicroservicesDeploymentName, &out.TargetMicroservicesDeploymentName
		*out = new(string)
		**out = **in
	}
	if in.Url != nil {
		in, out := &in.Url, &out.Url
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationMigrationSpecGoldenGateDetailsHub.
func (in *MigrationMigrationSpecGoldenGateDetailsHub) DeepCopy() *MigrationMigrationSpecGoldenGateDetailsHub {
	if in == nil {
		return nil
	}
	out := new(MigrationMigrationSpecGoldenGateDetailsHub)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationMigrationSpecGoldenGateDetailsHubRestAdminCredentials) DeepCopyInto(out *MigrationMigrationSpecGoldenGateDetailsHubRestAdminCredentials) {
	*out = *in
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationMigrationSpecGoldenGateDetailsHubRestAdminCredentials.
func (in *MigrationMigrationSpecGoldenGateDetailsHubRestAdminCredentials) DeepCopy() *MigrationMigrationSpecGoldenGateDetailsHubRestAdminCredentials {
	if in == nil {
		return nil
	}
	out := new(MigrationMigrationSpecGoldenGateDetailsHubRestAdminCredentials)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationMigrationSpecGoldenGateDetailsHubSourceContainerDbAdminCredentials) DeepCopyInto(out *MigrationMigrationSpecGoldenGateDetailsHubSourceContainerDbAdminCredentials) {
	*out = *in
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationMigrationSpecGoldenGateDetailsHubSourceContainerDbAdminCredentials.
func (in *MigrationMigrationSpecGoldenGateDetailsHubSourceContainerDbAdminCredentials) DeepCopy() *MigrationMigrationSpecGoldenGateDetailsHubSourceContainerDbAdminCredentials {
	if in == nil {
		return nil
	}
	out := new(MigrationMigrationSpecGoldenGateDetailsHubSourceContainerDbAdminCredentials)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationMigrationSpecGoldenGateDetailsHubSourceDbAdminCredentials) DeepCopyInto(out *MigrationMigrationSpecGoldenGateDetailsHubSourceDbAdminCredentials) {
	*out = *in
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationMigrationSpecGoldenGateDetailsHubSourceDbAdminCredentials.
func (in *MigrationMigrationSpecGoldenGateDetailsHubSourceDbAdminCredentials) DeepCopy() *MigrationMigrationSpecGoldenGateDetailsHubSourceDbAdminCredentials {
	if in == nil {
		return nil
	}
	out := new(MigrationMigrationSpecGoldenGateDetailsHubSourceDbAdminCredentials)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationMigrationSpecGoldenGateDetailsHubTargetDbAdminCredentials) DeepCopyInto(out *MigrationMigrationSpecGoldenGateDetailsHubTargetDbAdminCredentials) {
	*out = *in
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationMigrationSpecGoldenGateDetailsHubTargetDbAdminCredentials.
func (in *MigrationMigrationSpecGoldenGateDetailsHubTargetDbAdminCredentials) DeepCopy() *MigrationMigrationSpecGoldenGateDetailsHubTargetDbAdminCredentials {
	if in == nil {
		return nil
	}
	out := new(MigrationMigrationSpecGoldenGateDetailsHubTargetDbAdminCredentials)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationMigrationSpecGoldenGateDetailsSettings) DeepCopyInto(out *MigrationMigrationSpecGoldenGateDetailsSettings) {
	*out = *in
	if in.AcceptableLag != nil {
		in, out := &in.AcceptableLag, &out.AcceptableLag
		*out = new(int64)
		**out = **in
	}
	if in.Extract != nil {
		in, out := &in.Extract, &out.Extract
		*out = new(MigrationMigrationSpecGoldenGateDetailsSettingsExtract)
		(*in).DeepCopyInto(*out)
	}
	if in.Replicat != nil {
		in, out := &in.Replicat, &out.Replicat
		*out = new(MigrationMigrationSpecGoldenGateDetailsSettingsReplicat)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationMigrationSpecGoldenGateDetailsSettings.
func (in *MigrationMigrationSpecGoldenGateDetailsSettings) DeepCopy() *MigrationMigrationSpecGoldenGateDetailsSettings {
	if in == nil {
		return nil
	}
	out := new(MigrationMigrationSpecGoldenGateDetailsSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationMigrationSpecGoldenGateDetailsSettingsExtract) DeepCopyInto(out *MigrationMigrationSpecGoldenGateDetailsSettingsExtract) {
	*out = *in
	if in.LongTransDuration != nil {
		in, out := &in.LongTransDuration, &out.LongTransDuration
		*out = new(int64)
		**out = **in
	}
	if in.PerformanceProfile != nil {
		in, out := &in.PerformanceProfile, &out.PerformanceProfile
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationMigrationSpecGoldenGateDetailsSettingsExtract.
func (in *MigrationMigrationSpecGoldenGateDetailsSettingsExtract) DeepCopy() *MigrationMigrationSpecGoldenGateDetailsSettingsExtract {
	if in == nil {
		return nil
	}
	out := new(MigrationMigrationSpecGoldenGateDetailsSettingsExtract)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationMigrationSpecGoldenGateDetailsSettingsReplicat) DeepCopyInto(out *MigrationMigrationSpecGoldenGateDetailsSettingsReplicat) {
	*out = *in
	if in.MapParallelism != nil {
		in, out := &in.MapParallelism, &out.MapParallelism
		*out = new(int64)
		**out = **in
	}
	if in.MaxApplyParallelism != nil {
		in, out := &in.MaxApplyParallelism, &out.MaxApplyParallelism
		*out = new(int64)
		**out = **in
	}
	if in.MinApplyParallelism != nil {
		in, out := &in.MinApplyParallelism, &out.MinApplyParallelism
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationMigrationSpecGoldenGateDetailsSettingsReplicat.
func (in *MigrationMigrationSpecGoldenGateDetailsSettingsReplicat) DeepCopy() *MigrationMigrationSpecGoldenGateDetailsSettingsReplicat {
	if in == nil {
		return nil
	}
	out := new(MigrationMigrationSpecGoldenGateDetailsSettingsReplicat)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationMigrationSpecResource) DeepCopyInto(out *MigrationMigrationSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AgentID != nil {
		in, out := &in.AgentID, &out.AgentID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CredentialsSecretID != nil {
		in, out := &in.CredentialsSecretID, &out.CredentialsSecretID
		*out = new(string)
		**out = **in
	}
	if in.DataTransferMediumDetails != nil {
		in, out := &in.DataTransferMediumDetails, &out.DataTransferMediumDetails
		*out = new(MigrationMigrationSpecDataTransferMediumDetails)
		(*in).DeepCopyInto(*out)
	}
	if in.DatapumpSettings != nil {
		in, out := &in.DatapumpSettings, &out.DatapumpSettings
		*out = new(MigrationMigrationSpecDatapumpSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExcludeObjects != nil {
		in, out := &in.ExcludeObjects, &out.ExcludeObjects
		*out = make([]MigrationMigrationSpecExcludeObjects, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExecutingJobID != nil {
		in, out := &in.ExecutingJobID, &out.ExecutingJobID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.GoldenGateDetails != nil {
		in, out := &in.GoldenGateDetails, &out.GoldenGateDetails
		*out = new(MigrationMigrationSpecGoldenGateDetails)
		(*in).DeepCopyInto(*out)
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.SourceContainerDatabaseConnectionID != nil {
		in, out := &in.SourceContainerDatabaseConnectionID, &out.SourceContainerDatabaseConnectionID
		*out = new(string)
		**out = **in
	}
	if in.SourceDatabaseConnectionID != nil {
		in, out := &in.SourceDatabaseConnectionID, &out.SourceDatabaseConnectionID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SystemTags != nil {
		in, out := &in.SystemTags, &out.SystemTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TargetDatabaseConnectionID != nil {
		in, out := &in.TargetDatabaseConnectionID, &out.TargetDatabaseConnectionID
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeLastMigration != nil {
		in, out := &in.TimeLastMigration, &out.TimeLastMigration
		*out = new(string)
		**out = **in
	}
	if in.TimeUpdated != nil {
		in, out := &in.TimeUpdated, &out.TimeUpdated
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VaultDetails != nil {
		in, out := &in.VaultDetails, &out.VaultDetails
		*out = new(MigrationMigrationSpecVaultDetails)
		(*in).DeepCopyInto(*out)
	}
	if in.WaitAfter != nil {
		in, out := &in.WaitAfter, &out.WaitAfter
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationMigrationSpecResource.
func (in *MigrationMigrationSpecResource) DeepCopy() *MigrationMigrationSpecResource {
	if in == nil {
		return nil
	}
	out := new(MigrationMigrationSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationMigrationSpecVaultDetails) DeepCopyInto(out *MigrationMigrationSpecVaultDetails) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.KeyID != nil {
		in, out := &in.KeyID, &out.KeyID
		*out = new(string)
		**out = **in
	}
	if in.VaultID != nil {
		in, out := &in.VaultID, &out.VaultID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationMigrationSpecVaultDetails.
func (in *MigrationMigrationSpecVaultDetails) DeepCopy() *MigrationMigrationSpecVaultDetails {
	if in == nil {
		return nil
	}
	out := new(MigrationMigrationSpecVaultDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationMigrationStatus) DeepCopyInto(out *MigrationMigrationStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationMigrationStatus.
func (in *MigrationMigrationStatus) DeepCopy() *MigrationMigrationStatus {
	if in == nil {
		return nil
	}
	out := new(MigrationMigrationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationSpec) DeepCopyInto(out *MigrationSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(MigrationSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationSpec.
func (in *MigrationSpec) DeepCopy() *MigrationSpec {
	if in == nil {
		return nil
	}
	out := new(MigrationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationSpecAdditionalMigrations) DeepCopyInto(out *MigrationSpecAdditionalMigrations) {
	*out = *in
	if in.CloudExadataInfrastructureID != nil {
		in, out := &in.CloudExadataInfrastructureID, &out.CloudExadataInfrastructureID
		*out = new(string)
		**out = **in
	}
	if in.CloudVmClusterID != nil {
		in, out := &in.CloudVmClusterID, &out.CloudVmClusterID
		*out = new(string)
		**out = **in
	}
	if in.DbSystemID != nil {
		in, out := &in.DbSystemID, &out.DbSystemID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationSpecAdditionalMigrations.
func (in *MigrationSpecAdditionalMigrations) DeepCopy() *MigrationSpecAdditionalMigrations {
	if in == nil {
		return nil
	}
	out := new(MigrationSpecAdditionalMigrations)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationSpecResource) DeepCopyInto(out *MigrationSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalMigrations != nil {
		in, out := &in.AdditionalMigrations, &out.AdditionalMigrations
		*out = make([]MigrationSpecAdditionalMigrations, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudExadataInfrastructureID != nil {
		in, out := &in.CloudExadataInfrastructureID, &out.CloudExadataInfrastructureID
		*out = new(string)
		**out = **in
	}
	if in.CloudVmClusterID != nil {
		in, out := &in.CloudVmClusterID, &out.CloudVmClusterID
		*out = new(string)
		**out = **in
	}
	if in.DbSystemID != nil {
		in, out := &in.DbSystemID, &out.DbSystemID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationSpecResource.
func (in *MigrationSpecResource) DeepCopy() *MigrationSpecResource {
	if in == nil {
		return nil
	}
	out := new(MigrationSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationStatus) DeepCopyInto(out *MigrationStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationStatus.
func (in *MigrationStatus) DeepCopy() *MigrationStatus {
	if in == nil {
		return nil
	}
	out := new(MigrationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluggableDatabase) DeepCopyInto(out *PluggableDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluggableDatabase.
func (in *PluggableDatabase) DeepCopy() *PluggableDatabase {
	if in == nil {
		return nil
	}
	out := new(PluggableDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PluggableDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluggableDatabaseList) DeepCopyInto(out *PluggableDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PluggableDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluggableDatabaseList.
func (in *PluggableDatabaseList) DeepCopy() *PluggableDatabaseList {
	if in == nil {
		return nil
	}
	out := new(PluggableDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PluggableDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluggableDatabaseSpec) DeepCopyInto(out *PluggableDatabaseSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(PluggableDatabaseSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluggableDatabaseSpec.
func (in *PluggableDatabaseSpec) DeepCopy() *PluggableDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(PluggableDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluggableDatabaseSpecConnectionStrings) DeepCopyInto(out *PluggableDatabaseSpecConnectionStrings) {
	*out = *in
	if in.AllConnectionStrings != nil {
		in, out := &in.AllConnectionStrings, &out.AllConnectionStrings
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PdbDefault != nil {
		in, out := &in.PdbDefault, &out.PdbDefault
		*out = new(string)
		**out = **in
	}
	if in.PdbIPDefault != nil {
		in, out := &in.PdbIPDefault, &out.PdbIPDefault
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluggableDatabaseSpecConnectionStrings.
func (in *PluggableDatabaseSpecConnectionStrings) DeepCopy() *PluggableDatabaseSpecConnectionStrings {
	if in == nil {
		return nil
	}
	out := new(PluggableDatabaseSpecConnectionStrings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluggableDatabaseSpecResource) DeepCopyInto(out *PluggableDatabaseSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ConnectionStrings != nil {
		in, out := &in.ConnectionStrings, &out.ConnectionStrings
		*out = new(PluggableDatabaseSpecConnectionStrings)
		(*in).DeepCopyInto(*out)
	}
	if in.ContainerDatabaseID != nil {
		in, out := &in.ContainerDatabaseID, &out.ContainerDatabaseID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.IsRestricted != nil {
		in, out := &in.IsRestricted, &out.IsRestricted
		*out = new(bool)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.OpenMode != nil {
		in, out := &in.OpenMode, &out.OpenMode
		*out = new(string)
		**out = **in
	}
	if in.PdbAdminPassword != nil {
		in, out := &in.PdbAdminPassword, &out.PdbAdminPassword
		*out = new(string)
		**out = **in
	}
	if in.PdbName != nil {
		in, out := &in.PdbName, &out.PdbName
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TdeWalletPassword != nil {
		in, out := &in.TdeWalletPassword, &out.TdeWalletPassword
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluggableDatabaseSpecResource.
func (in *PluggableDatabaseSpecResource) DeepCopy() *PluggableDatabaseSpecResource {
	if in == nil {
		return nil
	}
	out := new(PluggableDatabaseSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluggableDatabaseStatus) DeepCopyInto(out *PluggableDatabaseStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluggableDatabaseStatus.
func (in *PluggableDatabaseStatus) DeepCopy() *PluggableDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(PluggableDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluggableDatabasesLocalClone) DeepCopyInto(out *PluggableDatabasesLocalClone) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluggableDatabasesLocalClone.
func (in *PluggableDatabasesLocalClone) DeepCopy() *PluggableDatabasesLocalClone {
	if in == nil {
		return nil
	}
	out := new(PluggableDatabasesLocalClone)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PluggableDatabasesLocalClone) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluggableDatabasesLocalCloneList) DeepCopyInto(out *PluggableDatabasesLocalCloneList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PluggableDatabasesLocalClone, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluggableDatabasesLocalCloneList.
func (in *PluggableDatabasesLocalCloneList) DeepCopy() *PluggableDatabasesLocalCloneList {
	if in == nil {
		return nil
	}
	out := new(PluggableDatabasesLocalCloneList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PluggableDatabasesLocalCloneList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluggableDatabasesLocalCloneSpec) DeepCopyInto(out *PluggableDatabasesLocalCloneSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(PluggableDatabasesLocalCloneSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluggableDatabasesLocalCloneSpec.
func (in *PluggableDatabasesLocalCloneSpec) DeepCopy() *PluggableDatabasesLocalCloneSpec {
	if in == nil {
		return nil
	}
	out := new(PluggableDatabasesLocalCloneSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluggableDatabasesLocalCloneSpecConnectionStrings) DeepCopyInto(out *PluggableDatabasesLocalCloneSpecConnectionStrings) {
	*out = *in
	if in.AllConnectionStrings != nil {
		in, out := &in.AllConnectionStrings, &out.AllConnectionStrings
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PdbDefault != nil {
		in, out := &in.PdbDefault, &out.PdbDefault
		*out = new(string)
		**out = **in
	}
	if in.PdbIPDefault != nil {
		in, out := &in.PdbIPDefault, &out.PdbIPDefault
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluggableDatabasesLocalCloneSpecConnectionStrings.
func (in *PluggableDatabasesLocalCloneSpecConnectionStrings) DeepCopy() *PluggableDatabasesLocalCloneSpecConnectionStrings {
	if in == nil {
		return nil
	}
	out := new(PluggableDatabasesLocalCloneSpecConnectionStrings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluggableDatabasesLocalCloneSpecResource) DeepCopyInto(out *PluggableDatabasesLocalCloneSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.ClonedPdbName != nil {
		in, out := &in.ClonedPdbName, &out.ClonedPdbName
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ConnectionStrings != nil {
		in, out := &in.ConnectionStrings, &out.ConnectionStrings
		*out = new(PluggableDatabasesLocalCloneSpecConnectionStrings)
		(*in).DeepCopyInto(*out)
	}
	if in.ContainerDatabaseID != nil {
		in, out := &in.ContainerDatabaseID, &out.ContainerDatabaseID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.IsRestricted != nil {
		in, out := &in.IsRestricted, &out.IsRestricted
		*out = new(bool)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.OpenMode != nil {
		in, out := &in.OpenMode, &out.OpenMode
		*out = new(string)
		**out = **in
	}
	if in.PdbAdminPassword != nil {
		in, out := &in.PdbAdminPassword, &out.PdbAdminPassword
		*out = new(string)
		**out = **in
	}
	if in.PdbName != nil {
		in, out := &in.PdbName, &out.PdbName
		*out = new(string)
		**out = **in
	}
	if in.PluggableDatabaseID != nil {
		in, out := &in.PluggableDatabaseID, &out.PluggableDatabaseID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TargetTdeWalletPassword != nil {
		in, out := &in.TargetTdeWalletPassword, &out.TargetTdeWalletPassword
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluggableDatabasesLocalCloneSpecResource.
func (in *PluggableDatabasesLocalCloneSpecResource) DeepCopy() *PluggableDatabasesLocalCloneSpecResource {
	if in == nil {
		return nil
	}
	out := new(PluggableDatabasesLocalCloneSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluggableDatabasesLocalCloneStatus) DeepCopyInto(out *PluggableDatabasesLocalCloneStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluggableDatabasesLocalCloneStatus.
func (in *PluggableDatabasesLocalCloneStatus) DeepCopy() *PluggableDatabasesLocalCloneStatus {
	if in == nil {
		return nil
	}
	out := new(PluggableDatabasesLocalCloneStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluggableDatabasesRemoteClone) DeepCopyInto(out *PluggableDatabasesRemoteClone) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluggableDatabasesRemoteClone.
func (in *PluggableDatabasesRemoteClone) DeepCopy() *PluggableDatabasesRemoteClone {
	if in == nil {
		return nil
	}
	out := new(PluggableDatabasesRemoteClone)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PluggableDatabasesRemoteClone) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluggableDatabasesRemoteCloneList) DeepCopyInto(out *PluggableDatabasesRemoteCloneList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PluggableDatabasesRemoteClone, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluggableDatabasesRemoteCloneList.
func (in *PluggableDatabasesRemoteCloneList) DeepCopy() *PluggableDatabasesRemoteCloneList {
	if in == nil {
		return nil
	}
	out := new(PluggableDatabasesRemoteCloneList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PluggableDatabasesRemoteCloneList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluggableDatabasesRemoteCloneSpec) DeepCopyInto(out *PluggableDatabasesRemoteCloneSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(PluggableDatabasesRemoteCloneSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluggableDatabasesRemoteCloneSpec.
func (in *PluggableDatabasesRemoteCloneSpec) DeepCopy() *PluggableDatabasesRemoteCloneSpec {
	if in == nil {
		return nil
	}
	out := new(PluggableDatabasesRemoteCloneSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluggableDatabasesRemoteCloneSpecConnectionStrings) DeepCopyInto(out *PluggableDatabasesRemoteCloneSpecConnectionStrings) {
	*out = *in
	if in.AllConnectionStrings != nil {
		in, out := &in.AllConnectionStrings, &out.AllConnectionStrings
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PdbDefault != nil {
		in, out := &in.PdbDefault, &out.PdbDefault
		*out = new(string)
		**out = **in
	}
	if in.PdbIPDefault != nil {
		in, out := &in.PdbIPDefault, &out.PdbIPDefault
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluggableDatabasesRemoteCloneSpecConnectionStrings.
func (in *PluggableDatabasesRemoteCloneSpecConnectionStrings) DeepCopy() *PluggableDatabasesRemoteCloneSpecConnectionStrings {
	if in == nil {
		return nil
	}
	out := new(PluggableDatabasesRemoteCloneSpecConnectionStrings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluggableDatabasesRemoteCloneSpecResource) DeepCopyInto(out *PluggableDatabasesRemoteCloneSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.ClonedPdbName != nil {
		in, out := &in.ClonedPdbName, &out.ClonedPdbName
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ConnectionStrings != nil {
		in, out := &in.ConnectionStrings, &out.ConnectionStrings
		*out = new(PluggableDatabasesRemoteCloneSpecConnectionStrings)
		(*in).DeepCopyInto(*out)
	}
	if in.ContainerDatabaseID != nil {
		in, out := &in.ContainerDatabaseID, &out.ContainerDatabaseID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.IsRestricted != nil {
		in, out := &in.IsRestricted, &out.IsRestricted
		*out = new(bool)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.OpenMode != nil {
		in, out := &in.OpenMode, &out.OpenMode
		*out = new(string)
		**out = **in
	}
	if in.PdbAdminPassword != nil {
		in, out := &in.PdbAdminPassword, &out.PdbAdminPassword
		*out = new(string)
		**out = **in
	}
	if in.PdbName != nil {
		in, out := &in.PdbName, &out.PdbName
		*out = new(string)
		**out = **in
	}
	if in.PluggableDatabaseID != nil {
		in, out := &in.PluggableDatabaseID, &out.PluggableDatabaseID
		*out = new(string)
		**out = **in
	}
	if in.SourceContainerDbAdminPassword != nil {
		in, out := &in.SourceContainerDbAdminPassword, &out.SourceContainerDbAdminPassword
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TargetContainerDatabaseID != nil {
		in, out := &in.TargetContainerDatabaseID, &out.TargetContainerDatabaseID
		*out = new(string)
		**out = **in
	}
	if in.TargetTdeWalletPassword != nil {
		in, out := &in.TargetTdeWalletPassword, &out.TargetTdeWalletPassword
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluggableDatabasesRemoteCloneSpecResource.
func (in *PluggableDatabasesRemoteCloneSpecResource) DeepCopy() *PluggableDatabasesRemoteCloneSpecResource {
	if in == nil {
		return nil
	}
	out := new(PluggableDatabasesRemoteCloneSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluggableDatabasesRemoteCloneStatus) DeepCopyInto(out *PluggableDatabasesRemoteCloneStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluggableDatabasesRemoteCloneStatus.
func (in *PluggableDatabasesRemoteCloneStatus) DeepCopy() *PluggableDatabasesRemoteCloneStatus {
	if in == nil {
		return nil
	}
	out := new(PluggableDatabasesRemoteCloneStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VmCluster) DeepCopyInto(out *VmCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VmCluster.
func (in *VmCluster) DeepCopy() *VmCluster {
	if in == nil {
		return nil
	}
	out := new(VmCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VmCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VmClusterList) DeepCopyInto(out *VmClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VmCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VmClusterList.
func (in *VmClusterList) DeepCopy() *VmClusterList {
	if in == nil {
		return nil
	}
	out := new(VmClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VmClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VmClusterNetwork) DeepCopyInto(out *VmClusterNetwork) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VmClusterNetwork.
func (in *VmClusterNetwork) DeepCopy() *VmClusterNetwork {
	if in == nil {
		return nil
	}
	out := new(VmClusterNetwork)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VmClusterNetwork) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VmClusterNetworkList) DeepCopyInto(out *VmClusterNetworkList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VmClusterNetwork, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VmClusterNetworkList.
func (in *VmClusterNetworkList) DeepCopy() *VmClusterNetworkList {
	if in == nil {
		return nil
	}
	out := new(VmClusterNetworkList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VmClusterNetworkList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VmClusterNetworkSpec) DeepCopyInto(out *VmClusterNetworkSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(VmClusterNetworkSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VmClusterNetworkSpec.
func (in *VmClusterNetworkSpec) DeepCopy() *VmClusterNetworkSpec {
	if in == nil {
		return nil
	}
	out := new(VmClusterNetworkSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VmClusterNetworkSpecResource) DeepCopyInto(out *VmClusterNetworkSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Dns != nil {
		in, out := &in.Dns, &out.Dns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExadataInfrastructureID != nil {
		in, out := &in.ExadataInfrastructureID, &out.ExadataInfrastructureID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.Ntp != nil {
		in, out := &in.Ntp, &out.Ntp
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Scans != nil {
		in, out := &in.Scans, &out.Scans
		*out = make([]VmClusterNetworkSpecScans, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.ValidateVmClusterNetwork != nil {
		in, out := &in.ValidateVmClusterNetwork, &out.ValidateVmClusterNetwork
		*out = new(bool)
		**out = **in
	}
	if in.VmClusterID != nil {
		in, out := &in.VmClusterID, &out.VmClusterID
		*out = new(string)
		**out = **in
	}
	if in.VmNetworks != nil {
		in, out := &in.VmNetworks, &out.VmNetworks
		*out = make([]VmClusterNetworkSpecVmNetworks, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VmClusterNetworkSpecResource.
func (in *VmClusterNetworkSpecResource) DeepCopy() *VmClusterNetworkSpecResource {
	if in == nil {
		return nil
	}
	out := new(VmClusterNetworkSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VmClusterNetworkSpecScans) DeepCopyInto(out *VmClusterNetworkSpecScans) {
	*out = *in
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Ips != nil {
		in, out := &in.Ips, &out.Ips
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VmClusterNetworkSpecScans.
func (in *VmClusterNetworkSpecScans) DeepCopy() *VmClusterNetworkSpecScans {
	if in == nil {
		return nil
	}
	out := new(VmClusterNetworkSpecScans)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VmClusterNetworkSpecVmNetworks) DeepCopyInto(out *VmClusterNetworkSpecVmNetworks) {
	*out = *in
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = new(string)
		**out = **in
	}
	if in.Netmask != nil {
		in, out := &in.Netmask, &out.Netmask
		*out = new(string)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]VmClusterNetworkSpecVmNetworksNodes, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VmClusterNetworkSpecVmNetworks.
func (in *VmClusterNetworkSpecVmNetworks) DeepCopy() *VmClusterNetworkSpecVmNetworks {
	if in == nil {
		return nil
	}
	out := new(VmClusterNetworkSpecVmNetworks)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VmClusterNetworkSpecVmNetworksNodes) DeepCopyInto(out *VmClusterNetworkSpecVmNetworksNodes) {
	*out = *in
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Ip != nil {
		in, out := &in.Ip, &out.Ip
		*out = new(string)
		**out = **in
	}
	if in.Vip != nil {
		in, out := &in.Vip, &out.Vip
		*out = new(string)
		**out = **in
	}
	if in.VipHostname != nil {
		in, out := &in.VipHostname, &out.VipHostname
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VmClusterNetworkSpecVmNetworksNodes.
func (in *VmClusterNetworkSpecVmNetworksNodes) DeepCopy() *VmClusterNetworkSpecVmNetworksNodes {
	if in == nil {
		return nil
	}
	out := new(VmClusterNetworkSpecVmNetworksNodes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VmClusterNetworkStatus) DeepCopyInto(out *VmClusterNetworkStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VmClusterNetworkStatus.
func (in *VmClusterNetworkStatus) DeepCopy() *VmClusterNetworkStatus {
	if in == nil {
		return nil
	}
	out := new(VmClusterNetworkStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VmClusterSpec) DeepCopyInto(out *VmClusterSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(VmClusterSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VmClusterSpec.
func (in *VmClusterSpec) DeepCopy() *VmClusterSpec {
	if in == nil {
		return nil
	}
	out := new(VmClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VmClusterSpecResource) DeepCopyInto(out *VmClusterSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CpuCoreCount != nil {
		in, out := &in.CpuCoreCount, &out.CpuCoreCount
		*out = new(int64)
		**out = **in
	}
	if in.CpusEnabled != nil {
		in, out := &in.CpusEnabled, &out.CpusEnabled
		*out = new(int64)
		**out = **in
	}
	if in.DataStorageSizeInTbs != nil {
		in, out := &in.DataStorageSizeInTbs, &out.DataStorageSizeInTbs
		*out = new(float64)
		**out = **in
	}
	if in.DbNodeStorageSizeInGbs != nil {
		in, out := &in.DbNodeStorageSizeInGbs, &out.DbNodeStorageSizeInGbs
		*out = new(int64)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExadataInfrastructureID != nil {
		in, out := &in.ExadataInfrastructureID, &out.ExadataInfrastructureID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.GiVersion != nil {
		in, out := &in.GiVersion, &out.GiVersion
		*out = new(string)
		**out = **in
	}
	if in.IsLocalBackupEnabled != nil {
		in, out := &in.IsLocalBackupEnabled, &out.IsLocalBackupEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSparseDiskgroupEnabled != nil {
		in, out := &in.IsSparseDiskgroupEnabled, &out.IsSparseDiskgroupEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LastPatchHistoryEntryID != nil {
		in, out := &in.LastPatchHistoryEntryID, &out.LastPatchHistoryEntryID
		*out = new(string)
		**out = **in
	}
	if in.LicenseModel != nil {
		in, out := &in.LicenseModel, &out.LicenseModel
		*out = new(string)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.MemorySizeInGbs != nil {
		in, out := &in.MemorySizeInGbs, &out.MemorySizeInGbs
		*out = new(int64)
		**out = **in
	}
	if in.Shape != nil {
		in, out := &in.Shape, &out.Shape
		*out = new(string)
		**out = **in
	}
	if in.SshPublicKeys != nil {
		in, out := &in.SshPublicKeys, &out.SshPublicKeys
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SystemVersion != nil {
		in, out := &in.SystemVersion, &out.SystemVersion
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
	if in.VmClusterNetworkID != nil {
		in, out := &in.VmClusterNetworkID, &out.VmClusterNetworkID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VmClusterSpecResource.
func (in *VmClusterSpecResource) DeepCopy() *VmClusterSpecResource {
	if in == nil {
		return nil
	}
	out := new(VmClusterSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VmClusterStatus) DeepCopyInto(out *VmClusterStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VmClusterStatus.
func (in *VmClusterStatus) DeepCopy() *VmClusterStatus {
	if in == nil {
		return nil
	}
	out := new(VmClusterStatus)
	in.DeepCopyInto(out)
	return out
}
