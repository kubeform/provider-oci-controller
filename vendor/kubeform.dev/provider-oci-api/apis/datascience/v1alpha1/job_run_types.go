/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type JobRun struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              JobRunSpec   `json:"spec,omitempty"`
	Status            JobRunStatus `json:"status,omitempty"`
}

type JobRunSpecJobConfigurationOverrideDetails struct {
	// +optional
	CommandLineArguments *string `json:"commandLineArguments,omitempty" tf:"command_line_arguments"`
	// +optional
	EnvironmentVariables map[string]string `json:"environmentVariables,omitempty" tf:"environment_variables"`
	JobType              *string           `json:"jobType" tf:"job_type"`
	// +optional
	MaximumRuntimeInMinutes *string `json:"maximumRuntimeInMinutes,omitempty" tf:"maximum_runtime_in_minutes"`
}

type JobRunSpecJobInfrastructureConfigurationDetails struct {
	// +optional
	BlockStorageSizeInGbs *int64 `json:"blockStorageSizeInGbs,omitempty" tf:"block_storage_size_in_gbs"`
	// +optional
	JobInfrastructureType *string `json:"jobInfrastructureType,omitempty" tf:"job_infrastructure_type"`
	// +optional
	ShapeName *string `json:"shapeName,omitempty" tf:"shape_name"`
	// +optional
	SubnetID *string `json:"subnetID,omitempty" tf:"subnet_id"`
}

type JobRunSpecJobLogConfigurationOverrideDetails struct {
	// +optional
	EnableAutoLogCreation *bool `json:"enableAutoLogCreation,omitempty" tf:"enable_auto_log_creation"`
	// +optional
	EnableLogging *bool `json:"enableLogging,omitempty" tf:"enable_logging"`
	// +optional
	LogGroupID *string `json:"logGroupID,omitempty" tf:"log_group_id"`
	// +optional
	LogID *string `json:"logID,omitempty" tf:"log_id"`
}

type JobRunSpecLogDetails struct {
	// +optional
	LogGroupID *string `json:"logGroupID,omitempty" tf:"log_group_id"`
	// +optional
	LogID *string `json:"logID,omitempty" tf:"log_id"`
}

type JobRunSpec struct {
	State *JobRunSpecResource `json:"state,omitempty" tf:"-"`

	Resource JobRunSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type JobRunSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Asynchronous  *bool   `json:"asynchronous,omitempty" tf:"asynchronous"`
	CompartmentID *string `json:"compartmentID" tf:"compartment_id"`
	// +optional
	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	JobConfigurationOverrideDetails *JobRunSpecJobConfigurationOverrideDetails `json:"jobConfigurationOverrideDetails,omitempty" tf:"job_configuration_override_details"`
	JobID                           *string                                    `json:"jobID" tf:"job_id"`
	// +optional
	JobInfrastructureConfigurationDetails *JobRunSpecJobInfrastructureConfigurationDetails `json:"jobInfrastructureConfigurationDetails,omitempty" tf:"job_infrastructure_configuration_details"`
	// +optional
	JobLogConfigurationOverrideDetails *JobRunSpecJobLogConfigurationOverrideDetails `json:"jobLogConfigurationOverrideDetails,omitempty" tf:"job_log_configuration_override_details"`
	// +optional
	LifecycleDetails *string `json:"lifecycleDetails,omitempty" tf:"lifecycle_details"`
	// +optional
	LogDetails *JobRunSpecLogDetails `json:"logDetails,omitempty" tf:"log_details"`
	ProjectID  *string               `json:"projectID" tf:"project_id"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	TimeAccepted *string `json:"timeAccepted,omitempty" tf:"time_accepted"`
	// +optional
	TimeFinished *string `json:"timeFinished,omitempty" tf:"time_finished"`
	// +optional
	TimeStarted *string `json:"timeStarted,omitempty" tf:"time_started"`
}

type JobRunStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// JobRunList is a list of JobRuns
type JobRunList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of JobRun CRD objects
	Items []JobRun `json:"items,omitempty"`
}
