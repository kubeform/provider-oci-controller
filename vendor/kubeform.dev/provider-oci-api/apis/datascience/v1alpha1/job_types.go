/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Job struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              JobSpec   `json:"spec,omitempty"`
	Status            JobStatus `json:"status,omitempty"`
}

type JobSpecJobConfigurationDetails struct {
	// +optional
	CommandLineArguments *string `json:"commandLineArguments,omitempty" tf:"command_line_arguments"`
	// +optional
	EnvironmentVariables map[string]string `json:"environmentVariables,omitempty" tf:"environment_variables"`
	JobType              *string           `json:"jobType" tf:"job_type"`
	// +optional
	MaximumRuntimeInMinutes *string `json:"maximumRuntimeInMinutes,omitempty" tf:"maximum_runtime_in_minutes"`
}

type JobSpecJobInfrastructureConfigurationDetails struct {
	BlockStorageSizeInGbs *int64  `json:"blockStorageSizeInGbs" tf:"block_storage_size_in_gbs"`
	JobInfrastructureType *string `json:"jobInfrastructureType" tf:"job_infrastructure_type"`
	ShapeName             *string `json:"shapeName" tf:"shape_name"`
	// +optional
	SubnetID *string `json:"subnetID,omitempty" tf:"subnet_id"`
}

type JobSpecJobLogConfigurationDetails struct {
	// +optional
	EnableAutoLogCreation *bool `json:"enableAutoLogCreation,omitempty" tf:"enable_auto_log_creation"`
	// +optional
	EnableLogging *bool `json:"enableLogging,omitempty" tf:"enable_logging"`
	// +optional
	LogGroupID *string `json:"logGroupID,omitempty" tf:"log_group_id"`
	// +optional
	LogID *string `json:"logID,omitempty" tf:"log_id"`
}

type JobSpec struct {
	State *JobSpecResource `json:"state,omitempty" tf:"-"`

	Resource JobSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type JobSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	ArtifactContentDisposition *string `json:"artifactContentDisposition,omitempty" tf:"artifact_content_disposition"`
	// +optional
	ArtifactContentLength *string `json:"artifactContentLength,omitempty" tf:"artifact_content_length"`
	// +optional
	ArtifactContentMd5 *string `json:"artifactContentMd5,omitempty" tf:"artifact_content_md5"`
	// +optional
	ArtifactLastModified *string `json:"artifactLastModified,omitempty" tf:"artifact_last_modified"`
	CompartmentID        *string `json:"compartmentID" tf:"compartment_id"`
	// +optional
	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	// +optional
	DeleteRelatedJobRuns *bool `json:"deleteRelatedJobRuns,omitempty" tf:"delete_related_job_runs"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	EmptyArtifact *bool `json:"emptyArtifact,omitempty" tf:"empty_artifact"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	JobArtifact                           *string                                       `json:"jobArtifact,omitempty" tf:"job_artifact"`
	JobConfigurationDetails               *JobSpecJobConfigurationDetails               `json:"jobConfigurationDetails" tf:"job_configuration_details"`
	JobInfrastructureConfigurationDetails *JobSpecJobInfrastructureConfigurationDetails `json:"jobInfrastructureConfigurationDetails" tf:"job_infrastructure_configuration_details"`
	// +optional
	JobLogConfigurationDetails *JobSpecJobLogConfigurationDetails `json:"jobLogConfigurationDetails,omitempty" tf:"job_log_configuration_details"`
	// +optional
	LifecycleDetails *string `json:"lifecycleDetails,omitempty" tf:"lifecycle_details"`
	ProjectID        *string `json:"projectID" tf:"project_id"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
}

type JobStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// JobList is a list of Jobs
type JobList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Job CRD objects
	Items []Job `json:"items,omitempty"`
}
