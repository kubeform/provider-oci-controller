/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type NotebookSession struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              NotebookSessionSpec   `json:"spec,omitempty"`
	Status            NotebookSessionStatus `json:"status,omitempty"`
}

type NotebookSessionSpecNotebookSessionConfigurationDetailsNotebookSessionShapeConfigDetails struct {
	// +optional
	MemoryInGbs *float64 `json:"memoryInGbs,omitempty" tf:"memory_in_gbs"`
	// +optional
	Ocpus *float64 `json:"ocpus,omitempty" tf:"ocpus"`
}

type NotebookSessionSpecNotebookSessionConfigurationDetails struct {
	// +optional
	BlockStorageSizeInGbs *int64 `json:"blockStorageSizeInGbs,omitempty" tf:"block_storage_size_in_gbs"`
	// +optional
	NotebookSessionShapeConfigDetails *NotebookSessionSpecNotebookSessionConfigurationDetailsNotebookSessionShapeConfigDetails `json:"notebookSessionShapeConfigDetails,omitempty" tf:"notebook_session_shape_config_details"`
	Shape                             *string                                                                                  `json:"shape" tf:"shape"`
	SubnetID                          *string                                                                                  `json:"subnetID" tf:"subnet_id"`
}

type NotebookSessionSpec struct {
	State *NotebookSessionSpecResource `json:"state,omitempty" tf:"-"`

	Resource NotebookSessionSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`
}

type NotebookSessionSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	CompartmentID *string `json:"compartmentID" tf:"compartment_id"`
	// +optional
	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	LifecycleDetails                    *string                                                 `json:"lifecycleDetails,omitempty" tf:"lifecycle_details"`
	NotebookSessionConfigurationDetails *NotebookSessionSpecNotebookSessionConfigurationDetails `json:"notebookSessionConfigurationDetails" tf:"notebook_session_configuration_details"`
	// +optional
	NotebookSessionURL *string `json:"notebookSessionURL,omitempty" tf:"notebook_session_url"`
	ProjectID          *string `json:"projectID" tf:"project_id"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
}

type NotebookSessionStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// NotebookSessionList is a list of NotebookSessions
type NotebookSessionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of NotebookSession CRD objects
	Items []NotebookSession `json:"items,omitempty"`
}
