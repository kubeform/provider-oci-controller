/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type GateDeployment struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              GateDeploymentSpec   `json:"spec,omitempty"`
	Status            GateDeploymentStatus `json:"status,omitempty"`
}

type GateDeploymentSpecOggData struct {
	AdminPassword *string `json:"-" sensitive:"true" tf:"admin_password"`
	AdminUsername *string `json:"adminUsername" tf:"admin_username"`
	// +optional
	Certificate    *string `json:"certificate,omitempty" tf:"certificate"`
	DeploymentName *string `json:"deploymentName" tf:"deployment_name"`
	// +optional
	Key *string `json:"key,omitempty" tf:"key"`
	// +optional
	OggVersion *string `json:"oggVersion,omitempty" tf:"ogg_version"`
}

type GateDeploymentSpec struct {
	State *GateDeploymentSpecResource `json:"state,omitempty" tf:"-"`

	Resource GateDeploymentSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type GateDeploymentSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	CompartmentID *string `json:"compartmentID" tf:"compartment_id"`
	CpuCoreCount  *int64  `json:"cpuCoreCount" tf:"cpu_core_count"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	// +optional
	DeploymentBackupID *string `json:"deploymentBackupID,omitempty" tf:"deployment_backup_id"`
	DeploymentType     *string `json:"deploymentType" tf:"deployment_type"`
	// +optional
	DeploymentURL *string `json:"deploymentURL,omitempty" tf:"deployment_url"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	DisplayName *string `json:"displayName" tf:"display_name"`
	// +optional
	Fqdn *string `json:"fqdn,omitempty" tf:"fqdn"`
	// +optional
	FreeformTags         map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	IsAutoScalingEnabled *bool             `json:"isAutoScalingEnabled" tf:"is_auto_scaling_enabled"`
	// +optional
	IsHealthy *bool `json:"isHealthy,omitempty" tf:"is_healthy"`
	// +optional
	IsLatestVersion *bool `json:"isLatestVersion,omitempty" tf:"is_latest_version"`
	// +optional
	IsPublic     *bool   `json:"isPublic,omitempty" tf:"is_public"`
	LicenseModel *string `json:"licenseModel" tf:"license_model"`
	// +optional
	LifecycleDetails *string `json:"lifecycleDetails,omitempty" tf:"lifecycle_details"`
	// +optional
	LifecycleSubState *string `json:"lifecycleSubState,omitempty" tf:"lifecycle_sub_state"`
	// +optional
	NsgIDS []string `json:"nsgIDS,omitempty" tf:"nsg_ids"`
	// +optional
	OggData *GateDeploymentSpecOggData `json:"oggData,omitempty" tf:"ogg_data"`
	// +optional
	PrivateIPAddress *string `json:"privateIPAddress,omitempty" tf:"private_ip_address"`
	// +optional
	PublicIPAddress *string `json:"publicIPAddress,omitempty" tf:"public_ip_address"`
	// +optional
	State    *string `json:"state,omitempty" tf:"state"`
	SubnetID *string `json:"subnetID" tf:"subnet_id"`
	// +optional
	SystemTags map[string]string `json:"systemTags,omitempty" tf:"system_tags"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	TimeUpdated *string `json:"timeUpdated,omitempty" tf:"time_updated"`
	// +optional
	TimeUpgradeRequired *string `json:"timeUpgradeRequired,omitempty" tf:"time_upgrade_required"`
}

type GateDeploymentStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// GateDeploymentList is a list of GateDeployments
type GateDeploymentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of GateDeployment CRD objects
	Items []GateDeployment `json:"items,omitempty"`
}
