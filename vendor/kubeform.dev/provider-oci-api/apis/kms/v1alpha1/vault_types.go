/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Vault struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              VaultSpec   `json:"spec,omitempty"`
	Status            VaultStatus `json:"status,omitempty"`
}

type VaultSpecReplicaDetails struct {
	// +optional
	ReplicationID *string `json:"replicationID,omitempty" tf:"replication_id"`
}

type VaultSpecRestoreFromFile struct {
	ContentLength *string `json:"contentLength" tf:"content_length"`
	// +optional
	ContentMd5                  *string `json:"contentMd5,omitempty" tf:"content_md5"`
	RestoreVaultFromFileDetails *string `json:"restoreVaultFromFileDetails" tf:"restore_vault_from_file_details"`
}

type VaultSpecRestoreFromObjectStore struct {
	// +optional
	Bucket      *string `json:"bucket,omitempty" tf:"bucket"`
	Destination *string `json:"destination" tf:"destination"`
	// +optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace"`
	// +optional
	Object *string `json:"object,omitempty" tf:"object"`
	// +optional
	Uri *string `json:"uri,omitempty" tf:"uri"`
}

type VaultSpec struct {
	State *VaultSpecResource `json:"state,omitempty" tf:"-"`

	Resource VaultSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`
}

type VaultSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	CompartmentID *string `json:"compartmentID" tf:"compartment_id"`
	// +optional
	CryptoEndpoint *string `json:"cryptoEndpoint,omitempty" tf:"crypto_endpoint"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	DisplayName *string           `json:"displayName" tf:"display_name"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	IsPrimary *bool `json:"isPrimary,omitempty" tf:"is_primary"`
	// +optional
	ManagementEndpoint *string `json:"managementEndpoint,omitempty" tf:"management_endpoint"`
	// +optional
	ReplicaDetails *VaultSpecReplicaDetails `json:"replicaDetails,omitempty" tf:"replica_details"`
	// +optional
	RestoreFromFile *VaultSpecRestoreFromFile `json:"restoreFromFile,omitempty" tf:"restore_from_file"`
	// +optional
	RestoreFromObjectStore *VaultSpecRestoreFromObjectStore `json:"restoreFromObjectStore,omitempty" tf:"restore_from_object_store"`
	// +optional
	RestoreTrigger *bool `json:"restoreTrigger,omitempty" tf:"restore_trigger"`
	// +optional
	RestoredFromVaultID *string `json:"restoredFromVaultID,omitempty" tf:"restored_from_vault_id"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	TimeOfDeletion *string `json:"timeOfDeletion,omitempty" tf:"time_of_deletion"`
	VaultType      *string `json:"vaultType" tf:"vault_type"`
}

type VaultStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// VaultList is a list of Vaults
type VaultList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Vault CRD objects
	Items []Vault `json:"items,omitempty"`
}
