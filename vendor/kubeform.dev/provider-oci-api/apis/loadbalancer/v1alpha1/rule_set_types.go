/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type RuleSet struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              RuleSetSpec   `json:"spec,omitempty"`
	Status            RuleSetStatus `json:"status,omitempty"`
}

type RuleSetSpecItemsConditions struct {
	AttributeName  *string `json:"attributeName" tf:"attribute_name"`
	AttributeValue *string `json:"attributeValue" tf:"attribute_value"`
	// +optional
	Operator *string `json:"operator,omitempty" tf:"operator"`
}

type RuleSetSpecItemsRedirectURI struct {
	// +optional
	Host *string `json:"host,omitempty" tf:"host"`
	// +optional
	Path *string `json:"path,omitempty" tf:"path"`
	// +optional
	Port *int64 `json:"port,omitempty" tf:"port"`
	// +optional
	Protocol *string `json:"protocol,omitempty" tf:"protocol"`
	// +optional
	Query *string `json:"query,omitempty" tf:"query"`
}

type RuleSetSpecItems struct {
	Action *string `json:"action" tf:"action"`
	// +optional
	AllowedMethods []string `json:"allowedMethods,omitempty" tf:"allowed_methods"`
	// +optional
	AreInvalidCharactersAllowed *bool `json:"areInvalidCharactersAllowed,omitempty" tf:"are_invalid_characters_allowed"`
	// +optional
	Conditions []RuleSetSpecItemsConditions `json:"conditions,omitempty" tf:"conditions"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	Header *string `json:"header,omitempty" tf:"header"`
	// +optional
	HttpLargeHeaderSizeInKb *int64 `json:"httpLargeHeaderSizeInKb,omitempty" tf:"http_large_header_size_in_kb"`
	// +optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix"`
	// +optional
	RedirectURI *RuleSetSpecItemsRedirectURI `json:"redirectURI,omitempty" tf:"redirect_uri"`
	// +optional
	ResponseCode *int64 `json:"responseCode,omitempty" tf:"response_code"`
	// +optional
	StatusCode *int64 `json:"statusCode,omitempty" tf:"status_code"`
	// +optional
	Suffix *string `json:"suffix,omitempty" tf:"suffix"`
	// +optional
	Value *string `json:"value,omitempty" tf:"value"`
}

type RuleSetSpec struct {
	State *RuleSetSpecResource `json:"state,omitempty" tf:"-"`

	Resource RuleSetSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type RuleSetSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	Items          []RuleSetSpecItems `json:"items" tf:"items"`
	LoadBalancerID *string            `json:"loadBalancerID" tf:"load_balancer_id"`
	Name           *string            `json:"name" tf:"name"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
}

type RuleSetStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// RuleSetList is a list of RuleSets
type RuleSetList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of RuleSet CRD objects
	Items []RuleSet `json:"items,omitempty"`
}
