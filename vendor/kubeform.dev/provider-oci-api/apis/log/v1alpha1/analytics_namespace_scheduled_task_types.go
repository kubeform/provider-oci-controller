/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type AnalyticsNamespaceScheduledTask struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AnalyticsNamespaceScheduledTaskSpec   `json:"spec,omitempty"`
	Status            AnalyticsNamespaceScheduledTaskStatus `json:"status,omitempty"`
}

type AnalyticsNamespaceScheduledTaskSpecAction struct {
	// +optional
	CompartmentIDInSubtree *bool `json:"compartmentIDInSubtree,omitempty" tf:"compartment_id_in_subtree"`
	// +optional
	DataType *string `json:"dataType,omitempty" tf:"data_type"`
	// +optional
	PurgeCompartmentID *string `json:"purgeCompartmentID,omitempty" tf:"purge_compartment_id"`
	// +optional
	PurgeDuration *string `json:"purgeDuration,omitempty" tf:"purge_duration"`
	// +optional
	QueryString *string `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SavedSearchID *string `json:"savedSearchID,omitempty" tf:"saved_search_id"`
	Type          *string `json:"type" tf:"type"`
}

type AnalyticsNamespaceScheduledTaskSpecSchedulesSchedule struct {
	// +optional
	Expression *string `json:"expression,omitempty" tf:"expression"`
	// +optional
	MisfirePolicy *string `json:"misfirePolicy,omitempty" tf:"misfire_policy"`
	// +optional
	RecurringInterval *string `json:"recurringInterval,omitempty" tf:"recurring_interval"`
	// +optional
	RepeatCount *int64 `json:"repeatCount,omitempty" tf:"repeat_count"`
	// +optional
	TimeZone *string `json:"timeZone,omitempty" tf:"time_zone"`
	Type     *string `json:"type" tf:"type"`
}

type AnalyticsNamespaceScheduledTaskSpecSchedules struct {
	Schedule []AnalyticsNamespaceScheduledTaskSpecSchedulesSchedule `json:"schedule" tf:"schedule"`
}

type AnalyticsNamespaceScheduledTaskSpec struct {
	State *AnalyticsNamespaceScheduledTaskSpecResource `json:"state,omitempty" tf:"-"`

	Resource AnalyticsNamespaceScheduledTaskSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type AnalyticsNamespaceScheduledTaskSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	Action        *AnalyticsNamespaceScheduledTaskSpecAction `json:"action" tf:"action"`
	CompartmentID *string                                    `json:"compartmentID" tf:"compartment_id"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	Kind         *string           `json:"kind" tf:"kind"`
	Namespace    *string           `json:"namespace" tf:"namespace"`
	// +optional
	NumOccurrences *string `json:"numOccurrences,omitempty" tf:"num_occurrences"`
	// +optional
	SavedSearchID *string `json:"savedSearchID,omitempty" tf:"saved_search_id"`
	// +optional
	ScheduledTaskID *string                                       `json:"scheduledTaskID,omitempty" tf:"scheduled_task_id"`
	Schedules       *AnalyticsNamespaceScheduledTaskSpecSchedules `json:"schedules" tf:"schedules"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	TaskStatus *string `json:"taskStatus,omitempty" tf:"task_status"`
	TaskType   *string `json:"taskType" tf:"task_type"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	TimeUpdated *string `json:"timeUpdated,omitempty" tf:"time_updated"`
	// +optional
	WorkRequestID *string `json:"workRequestID,omitempty" tf:"work_request_id"`
}

type AnalyticsNamespaceScheduledTaskStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// AnalyticsNamespaceScheduledTaskList is a list of AnalyticsNamespaceScheduledTasks
type AnalyticsNamespaceScheduledTaskList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of AnalyticsNamespaceScheduledTask CRD objects
	Items []AnalyticsNamespaceScheduledTask `json:"items,omitempty"`
}
