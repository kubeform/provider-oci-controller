/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type AgentManagementAgentInstallKey struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AgentManagementAgentInstallKeySpec   `json:"spec,omitempty"`
	Status            AgentManagementAgentInstallKeyStatus `json:"status,omitempty"`
}

type AgentManagementAgentInstallKeySpec struct {
	State *AgentManagementAgentInstallKeySpecResource `json:"state,omitempty" tf:"-"`

	Resource AgentManagementAgentInstallKeySpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type AgentManagementAgentInstallKeySpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	AllowedKeyInstallCount *int64  `json:"allowedKeyInstallCount,omitempty" tf:"allowed_key_install_count"`
	CompartmentID          *string `json:"compartmentID" tf:"compartment_id"`
	// +optional
	CreatedByPrincipalID *string `json:"createdByPrincipalID,omitempty" tf:"created_by_principal_id"`
	// +optional
	CurrentKeyInstallCount *int64  `json:"currentKeyInstallCount,omitempty" tf:"current_key_install_count"`
	DisplayName            *string `json:"displayName" tf:"display_name"`
	// +optional
	Key *string `json:"key,omitempty" tf:"key"`
	// +optional
	LifecycleDetails *string `json:"lifecycleDetails,omitempty" tf:"lifecycle_details"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	TimeExpires *string `json:"timeExpires,omitempty" tf:"time_expires"`
	// +optional
	TimeUpdated *string `json:"timeUpdated,omitempty" tf:"time_updated"`
}

type AgentManagementAgentInstallKeyStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// AgentManagementAgentInstallKeyList is a list of AgentManagementAgentInstallKeys
type AgentManagementAgentInstallKeyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of AgentManagementAgentInstallKey CRD objects
	Items []AgentManagementAgentInstallKey `json:"items,omitempty"`
}
