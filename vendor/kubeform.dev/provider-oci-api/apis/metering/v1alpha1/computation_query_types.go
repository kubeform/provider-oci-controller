/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ComputationQuery struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ComputationQuerySpec   `json:"spec,omitempty"`
	Status            ComputationQueryStatus `json:"status,omitempty"`
}

type ComputationQuerySpecQueryDefinitionCostAnalysisUi struct {
	// +optional
	Graph *string `json:"graph,omitempty" tf:"graph"`
	// +optional
	IsCumulativeGraph *bool `json:"isCumulativeGraph,omitempty" tf:"is_cumulative_graph"`
}

type ComputationQuerySpecQueryDefinitionReportQueryForecast struct {
	// +optional
	ForecastType      *string `json:"forecastType,omitempty" tf:"forecast_type"`
	TimeForecastEnded *string `json:"timeForecastEnded" tf:"time_forecast_ended"`
	// +optional
	TimeForecastStarted *string `json:"timeForecastStarted,omitempty" tf:"time_forecast_started"`
}

type ComputationQuerySpecQueryDefinitionReportQueryGroupByTag struct {
	// +optional
	Key *string `json:"key,omitempty" tf:"key"`
	// +optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace"`
	// +optional
	Value *string `json:"value,omitempty" tf:"value"`
}

type ComputationQuerySpecQueryDefinitionReportQuery struct {
	// +optional
	CompartmentDepth *float64 `json:"compartmentDepth,omitempty" tf:"compartment_depth"`
	// +optional
	DateRangeName *string `json:"dateRangeName,omitempty" tf:"date_range_name"`
	// +optional
	Filter *string `json:"filter,omitempty" tf:"filter"`
	// +optional
	Forecast    *ComputationQuerySpecQueryDefinitionReportQueryForecast `json:"forecast,omitempty" tf:"forecast"`
	Granularity *string                                                 `json:"granularity" tf:"granularity"`
	// +optional
	GroupBy []string `json:"groupBy,omitempty" tf:"group_by"`
	// +optional
	GroupByTag []ComputationQuerySpecQueryDefinitionReportQueryGroupByTag `json:"groupByTag,omitempty" tf:"group_by_tag"`
	// +optional
	IsAggregateByTime *bool `json:"isAggregateByTime,omitempty" tf:"is_aggregate_by_time"`
	// +optional
	QueryType *string `json:"queryType,omitempty" tf:"query_type"`
	TenantID  *string `json:"tenantID" tf:"tenant_id"`
	// +optional
	TimeUsageEnded *string `json:"timeUsageEnded,omitempty" tf:"time_usage_ended"`
	// +optional
	TimeUsageStarted *string `json:"timeUsageStarted,omitempty" tf:"time_usage_started"`
}

type ComputationQuerySpecQueryDefinition struct {
	CostAnalysisUi *ComputationQuerySpecQueryDefinitionCostAnalysisUi `json:"costAnalysisUi" tf:"cost_analysis_ui"`
	DisplayName    *string                                            `json:"displayName" tf:"display_name"`
	ReportQuery    *ComputationQuerySpecQueryDefinitionReportQuery    `json:"reportQuery" tf:"report_query"`
	Version        *float64                                           `json:"version" tf:"version"`
}

type ComputationQuerySpec struct {
	State *ComputationQuerySpecResource `json:"state,omitempty" tf:"-"`

	Resource ComputationQuerySpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type ComputationQuerySpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	CompartmentID   *string                              `json:"compartmentID" tf:"compartment_id"`
	QueryDefinition *ComputationQuerySpecQueryDefinition `json:"queryDefinition" tf:"query_definition"`
}

type ComputationQueryStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ComputationQueryList is a list of ComputationQuerys
type ComputationQueryList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ComputationQuery CRD objects
	Items []ComputationQuery `json:"items,omitempty"`
}
