/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Alarm struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AlarmSpec   `json:"spec,omitempty"`
	Status            AlarmStatus `json:"status,omitempty"`
}

type AlarmSpecSuppression struct {
	// +optional
	Description       *string `json:"description,omitempty" tf:"description"`
	TimeSuppressFrom  *string `json:"timeSuppressFrom" tf:"time_suppress_from"`
	TimeSuppressUntil *string `json:"timeSuppressUntil" tf:"time_suppress_until"`
}

type AlarmSpec struct {
	State *AlarmSpecResource `json:"state,omitempty" tf:"-"`

	Resource AlarmSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`
}

type AlarmSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Body          *string `json:"body,omitempty" tf:"body"`
	CompartmentID *string `json:"compartmentID" tf:"compartment_id"`
	// +optional
	DefinedTags  map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	Destinations []string          `json:"destinations" tf:"destinations"`
	DisplayName  *string           `json:"displayName" tf:"display_name"`
	// +optional
	FreeformTags        map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	IsEnabled           *bool             `json:"isEnabled" tf:"is_enabled"`
	MetricCompartmentID *string           `json:"metricCompartmentID" tf:"metric_compartment_id"`
	// +optional
	MetricCompartmentIDInSubtree *bool   `json:"metricCompartmentIDInSubtree,omitempty" tf:"metric_compartment_id_in_subtree"`
	Namespace                    *string `json:"namespace" tf:"namespace"`
	// +optional
	PendingDuration *string `json:"pendingDuration,omitempty" tf:"pending_duration"`
	Query           *string `json:"query" tf:"query"`
	// +optional
	RepeatNotificationDuration *string `json:"repeatNotificationDuration,omitempty" tf:"repeat_notification_duration"`
	// +optional
	Resolution *string `json:"resolution,omitempty" tf:"resolution"`
	// +optional
	ResourceGroup *string `json:"resourceGroup,omitempty" tf:"resource_group"`
	Severity      *string `json:"severity" tf:"severity"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	Suppression *AlarmSpecSuppression `json:"suppression,omitempty" tf:"suppression"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	TimeUpdated *string `json:"timeUpdated,omitempty" tf:"time_updated"`
}

type AlarmStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// AlarmList is a list of Alarms
type AlarmList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Alarm CRD objects
	Items []Alarm `json:"items,omitempty"`
}
