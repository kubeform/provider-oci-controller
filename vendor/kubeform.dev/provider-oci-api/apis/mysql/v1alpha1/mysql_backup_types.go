/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type MysqlBackup struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              MysqlBackupSpec   `json:"spec,omitempty"`
	Status            MysqlBackupStatus `json:"status,omitempty"`
}

type MysqlBackupSpecDbSystemSnapshotBackupPolicy struct {
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	IsEnabled *bool `json:"isEnabled,omitempty" tf:"is_enabled"`
	// +optional
	RetentionInDays *int64 `json:"retentionInDays,omitempty" tf:"retention_in_days"`
	// +optional
	WindowStartTime *string `json:"windowStartTime,omitempty" tf:"window_start_time"`
}

type MysqlBackupSpecDbSystemSnapshotEndpoints struct {
	// +optional
	Hostname *string `json:"hostname,omitempty" tf:"hostname"`
	// +optional
	IpAddress *string `json:"ipAddress,omitempty" tf:"ip_address"`
	// +optional
	Modes []string `json:"modes,omitempty" tf:"modes"`
	// +optional
	Port *int64 `json:"port,omitempty" tf:"port"`
	// +optional
	PortX *int64 `json:"portX,omitempty" tf:"port_x"`
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
	// +optional
	StatusDetails *string `json:"statusDetails,omitempty" tf:"status_details"`
}

type MysqlBackupSpecDbSystemSnapshotMaintenance struct {
	// +optional
	WindowStartTime *string `json:"windowStartTime,omitempty" tf:"window_start_time"`
}

type MysqlBackupSpecDbSystemSnapshot struct {
	// +optional
	AdminUsername *string `json:"adminUsername,omitempty" tf:"admin_username"`
	// +optional
	AvailabilityDomain *string `json:"availabilityDomain,omitempty" tf:"availability_domain"`
	// +optional
	BackupPolicy *MysqlBackupSpecDbSystemSnapshotBackupPolicy `json:"backupPolicy,omitempty" tf:"backup_policy"`
	// +optional
	CompartmentID *string `json:"compartmentID,omitempty" tf:"compartment_id"`
	// +optional
	ConfigurationID *string `json:"configurationID,omitempty" tf:"configuration_id"`
	// +optional
	CrashRecovery *string `json:"crashRecovery,omitempty" tf:"crash_recovery"`
	// +optional
	DataStorageSizeInGb *int64 `json:"dataStorageSizeInGb,omitempty" tf:"data_storage_size_in_gb"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	Endpoints []MysqlBackupSpecDbSystemSnapshotEndpoints `json:"endpoints,omitempty" tf:"endpoints"`
	// +optional
	FaultDomain *string `json:"faultDomain,omitempty" tf:"fault_domain"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	HostnameLabel *string `json:"hostnameLabel,omitempty" tf:"hostname_label"`
	// +optional
	ID *string `json:"ID,omitempty" tf:"id"`
	// +optional
	IpAddress *string `json:"ipAddress,omitempty" tf:"ip_address"`
	// +optional
	IsHighlyAvailable *bool `json:"isHighlyAvailable,omitempty" tf:"is_highly_available"`
	// +optional
	Maintenance *MysqlBackupSpecDbSystemSnapshotMaintenance `json:"maintenance,omitempty" tf:"maintenance"`
	// +optional
	MysqlVersion *string `json:"mysqlVersion,omitempty" tf:"mysql_version"`
	// +optional
	Port *int64 `json:"port,omitempty" tf:"port"`
	// +optional
	PortX *int64 `json:"portX,omitempty" tf:"port_x"`
	// +optional
	ShapeName *string `json:"shapeName,omitempty" tf:"shape_name"`
	// +optional
	SubnetID *string `json:"subnetID,omitempty" tf:"subnet_id"`
}

type MysqlBackupSpec struct {
	State *MysqlBackupSpecResource `json:"state,omitempty" tf:"-"`

	Resource MysqlBackupSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type MysqlBackupSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	BackupSizeInGbs *int64 `json:"backupSizeInGbs,omitempty" tf:"backup_size_in_gbs"`
	// +optional
	BackupType *string `json:"backupType,omitempty" tf:"backup_type"`
	// +optional
	CompartmentID *string `json:"compartmentID,omitempty" tf:"compartment_id"`
	// +optional
	CreationType *string `json:"creationType,omitempty" tf:"creation_type"`
	// +optional
	DataStorageSizeInGb *int64  `json:"dataStorageSizeInGb,omitempty" tf:"data_storage_size_in_gb"`
	DbSystemID          *string `json:"dbSystemID" tf:"db_system_id"`
	// +optional
	DbSystemSnapshot *MysqlBackupSpecDbSystemSnapshot `json:"dbSystemSnapshot,omitempty" tf:"db_system_snapshot"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	LifecycleDetails *string `json:"lifecycleDetails,omitempty" tf:"lifecycle_details"`
	// +optional
	MysqlVersion *string `json:"mysqlVersion,omitempty" tf:"mysql_version"`
	// +optional
	RetentionInDays *int64 `json:"retentionInDays,omitempty" tf:"retention_in_days"`
	// +optional
	ShapeName *string `json:"shapeName,omitempty" tf:"shape_name"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	TimeUpdated *string `json:"timeUpdated,omitempty" tf:"time_updated"`
}

type MysqlBackupStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// MysqlBackupList is a list of MysqlBackups
type MysqlBackupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of MysqlBackup CRD objects
	Items []MysqlBackup `json:"items,omitempty"`
}
