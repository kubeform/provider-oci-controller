/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type MysqlDbSystem struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              MysqlDbSystemSpec   `json:"spec,omitempty"`
	Status            MysqlDbSystemStatus `json:"status,omitempty"`
}

type MysqlDbSystemSpecAnalyticsCluster struct {
	// +optional
	ClusterSize *int64 `json:"clusterSize,omitempty" tf:"cluster_size"`
	// +optional
	ShapeName *string `json:"shapeName,omitempty" tf:"shape_name"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	TimeUpdated *string `json:"timeUpdated,omitempty" tf:"time_updated"`
}

type MysqlDbSystemSpecBackupPolicy struct {
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	IsEnabled *bool `json:"isEnabled,omitempty" tf:"is_enabled"`
	// +optional
	RetentionInDays *int64 `json:"retentionInDays,omitempty" tf:"retention_in_days"`
	// +optional
	WindowStartTime *string `json:"windowStartTime,omitempty" tf:"window_start_time"`
}

type MysqlDbSystemSpecChannelsSourceSslCaCertificate struct {
	// +optional
	CertificateType *string `json:"certificateType,omitempty" tf:"certificate_type"`
	// +optional
	Contents *string `json:"contents,omitempty" tf:"contents"`
}

type MysqlDbSystemSpecChannelsSource struct {
	// +optional
	Hostname *string `json:"hostname,omitempty" tf:"hostname"`
	// +optional
	Port *int64 `json:"port,omitempty" tf:"port"`
	// +optional
	SourceType *string `json:"sourceType,omitempty" tf:"source_type"`
	// +optional
	SslCaCertificate *MysqlDbSystemSpecChannelsSourceSslCaCertificate `json:"sslCaCertificate,omitempty" tf:"ssl_ca_certificate"`
	// +optional
	SslMode *string `json:"sslMode,omitempty" tf:"ssl_mode"`
	// +optional
	Username *string `json:"username,omitempty" tf:"username"`
}

type MysqlDbSystemSpecChannelsTarget struct {
	// +optional
	ApplierUsername *string `json:"applierUsername,omitempty" tf:"applier_username"`
	// +optional
	ChannelName *string `json:"channelName,omitempty" tf:"channel_name"`
	// +optional
	DbSystemID *string `json:"dbSystemID,omitempty" tf:"db_system_id"`
	// +optional
	TargetType *string `json:"targetType,omitempty" tf:"target_type"`
}

type MysqlDbSystemSpecChannels struct {
	// +optional
	CompartmentID *string `json:"compartmentID,omitempty" tf:"compartment_id"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	ID *string `json:"ID,omitempty" tf:"id"`
	// +optional
	IsEnabled *bool `json:"isEnabled,omitempty" tf:"is_enabled"`
	// +optional
	LifecycleDetails *string `json:"lifecycleDetails,omitempty" tf:"lifecycle_details"`
	// +optional
	Source *MysqlDbSystemSpecChannelsSource `json:"source,omitempty" tf:"source"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	Target *MysqlDbSystemSpecChannelsTarget `json:"target,omitempty" tf:"target"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	TimeUpdated *string `json:"timeUpdated,omitempty" tf:"time_updated"`
}

type MysqlDbSystemSpecCurrentPlacement struct {
	// +optional
	AvailabilityDomain *string `json:"availabilityDomain,omitempty" tf:"availability_domain"`
	// +optional
	FaultDomain *string `json:"faultDomain,omitempty" tf:"fault_domain"`
}

type MysqlDbSystemSpecEndpoints struct {
	// +optional
	Hostname *string `json:"hostname,omitempty" tf:"hostname"`
	// +optional
	IpAddress *string `json:"ipAddress,omitempty" tf:"ip_address"`
	// +optional
	Modes []string `json:"modes,omitempty" tf:"modes"`
	// +optional
	Port *int64 `json:"port,omitempty" tf:"port"`
	// +optional
	PortX *int64 `json:"portX,omitempty" tf:"port_x"`
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
	// +optional
	StatusDetails *string `json:"statusDetails,omitempty" tf:"status_details"`
}

type MysqlDbSystemSpecHeatWaveCluster struct {
	// +optional
	ClusterSize *int64 `json:"clusterSize,omitempty" tf:"cluster_size"`
	// +optional
	ShapeName *string `json:"shapeName,omitempty" tf:"shape_name"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	TimeUpdated *string `json:"timeUpdated,omitempty" tf:"time_updated"`
}

type MysqlDbSystemSpecMaintenance struct {
	WindowStartTime *string `json:"windowStartTime" tf:"window_start_time"`
}

type MysqlDbSystemSpecSource struct {
	// +optional
	BackupID   *string `json:"backupID,omitempty" tf:"backup_id"`
	SourceType *string `json:"sourceType" tf:"source_type"`
}

type MysqlDbSystemSpec struct {
	State *MysqlDbSystemSpecResource `json:"state,omitempty" tf:"-"`

	Resource MysqlDbSystemSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type MysqlDbSystemSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	AdminPassword *string `json:"-" sensitive:"true" tf:"admin_password"`
	AdminUsername *string `json:"adminUsername" tf:"admin_username"`
	// +optional
	AnalyticsCluster   *MysqlDbSystemSpecAnalyticsCluster `json:"analyticsCluster,omitempty" tf:"analytics_cluster"`
	AvailabilityDomain *string                            `json:"availabilityDomain" tf:"availability_domain"`
	// +optional
	BackupPolicy *MysqlDbSystemSpecBackupPolicy `json:"backupPolicy,omitempty" tf:"backup_policy"`
	// +optional
	Channels      []MysqlDbSystemSpecChannels `json:"channels,omitempty" tf:"channels"`
	CompartmentID *string                     `json:"compartmentID" tf:"compartment_id"`
	// +optional
	ConfigurationID *string `json:"configurationID,omitempty" tf:"configuration_id"`
	// +optional
	CrashRecovery *string `json:"crashRecovery,omitempty" tf:"crash_recovery"`
	// +optional
	CurrentPlacement *MysqlDbSystemSpecCurrentPlacement `json:"currentPlacement,omitempty" tf:"current_placement"`
	// +optional
	DataStorageSizeInGb *int64 `json:"dataStorageSizeInGb,omitempty" tf:"data_storage_size_in_gb"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	Endpoints []MysqlDbSystemSpecEndpoints `json:"endpoints,omitempty" tf:"endpoints"`
	// +optional
	FaultDomain *string `json:"faultDomain,omitempty" tf:"fault_domain"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	HeatWaveCluster *MysqlDbSystemSpecHeatWaveCluster `json:"heatWaveCluster,omitempty" tf:"heat_wave_cluster"`
	// +optional
	HostnameLabel *string `json:"hostnameLabel,omitempty" tf:"hostname_label"`
	// +optional
	IpAddress *string `json:"ipAddress,omitempty" tf:"ip_address"`
	// +optional
	IsAnalyticsClusterAttached *bool `json:"isAnalyticsClusterAttached,omitempty" tf:"is_analytics_cluster_attached"`
	// +optional
	IsHeatWaveClusterAttached *bool `json:"isHeatWaveClusterAttached,omitempty" tf:"is_heat_wave_cluster_attached"`
	// +optional
	IsHighlyAvailable *bool `json:"isHighlyAvailable,omitempty" tf:"is_highly_available"`
	// +optional
	LifecycleDetails *string `json:"lifecycleDetails,omitempty" tf:"lifecycle_details"`
	// +optional
	Maintenance *MysqlDbSystemSpecMaintenance `json:"maintenance,omitempty" tf:"maintenance"`
	// +optional
	// Deprecated
	MysqlVersion *string `json:"mysqlVersion,omitempty" tf:"mysql_version"`
	// +optional
	Port *int64 `json:"port,omitempty" tf:"port"`
	// +optional
	PortX     *int64  `json:"portX,omitempty" tf:"port_x"`
	ShapeName *string `json:"shapeName" tf:"shape_name"`
	// +optional
	ShutdownType *string `json:"shutdownType,omitempty" tf:"shutdown_type"`
	// +optional
	Source *MysqlDbSystemSpecSource `json:"source,omitempty" tf:"source"`
	// +optional
	State    *string `json:"state,omitempty" tf:"state"`
	SubnetID *string `json:"subnetID" tf:"subnet_id"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	TimeUpdated *string `json:"timeUpdated,omitempty" tf:"time_updated"`
}

type MysqlDbSystemStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// MysqlDbSystemList is a list of MysqlDbSystems
type MysqlDbSystemList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of MysqlDbSystem CRD objects
	Items []MysqlDbSystem `json:"items,omitempty"`
}
