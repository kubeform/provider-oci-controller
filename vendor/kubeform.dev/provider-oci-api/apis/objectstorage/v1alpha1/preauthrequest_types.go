/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Preauthrequest struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              PreauthrequestSpec   `json:"spec,omitempty"`
	Status            PreauthrequestStatus `json:"status,omitempty"`
}

type PreauthrequestSpec struct {
	State *PreauthrequestSpecResource `json:"state,omitempty" tf:"-"`

	Resource PreauthrequestSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type PreauthrequestSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	AccessType *string `json:"accessType" tf:"access_type"`
	// +optional
	AccessURI *string `json:"accessURI,omitempty" tf:"access_uri"`
	Bucket    *string `json:"bucket" tf:"bucket"`
	// +optional
	BucketListingAction *string `json:"bucketListingAction,omitempty" tf:"bucket_listing_action"`
	Name                *string `json:"name" tf:"name"`
	Namespace           *string `json:"namespace" tf:"namespace"`
	// +optional
	// Deprecated
	Object *string `json:"object,omitempty" tf:"object"`
	// +optional
	ObjectName *string `json:"objectName,omitempty" tf:"object_name"`
	// +optional
	ParID *string `json:"parID,omitempty" tf:"par_id"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	TimeExpires *string `json:"timeExpires" tf:"time_expires"`
}

type PreauthrequestStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// PreauthrequestList is a list of Preauthrequests
type PreauthrequestList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Preauthrequest CRD objects
	Items []Preauthrequest `json:"items,omitempty"`
}
