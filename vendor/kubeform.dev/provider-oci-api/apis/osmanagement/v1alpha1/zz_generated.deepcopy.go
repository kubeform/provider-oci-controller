//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "kubeform.dev/apimachinery/api/v1alpha1"

	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	apiv1 "kmodules.xyz/client-go/api/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedInstance) DeepCopyInto(out *ManagedInstance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedInstance.
func (in *ManagedInstance) DeepCopy() *ManagedInstance {
	if in == nil {
		return nil
	}
	out := new(ManagedInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagedInstance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedInstanceGroup) DeepCopyInto(out *ManagedInstanceGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedInstanceGroup.
func (in *ManagedInstanceGroup) DeepCopy() *ManagedInstanceGroup {
	if in == nil {
		return nil
	}
	out := new(ManagedInstanceGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagedInstanceGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedInstanceGroupList) DeepCopyInto(out *ManagedInstanceGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ManagedInstanceGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedInstanceGroupList.
func (in *ManagedInstanceGroupList) DeepCopy() *ManagedInstanceGroupList {
	if in == nil {
		return nil
	}
	out := new(ManagedInstanceGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagedInstanceGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedInstanceGroupSpec) DeepCopyInto(out *ManagedInstanceGroupSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ManagedInstanceGroupSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedInstanceGroupSpec.
func (in *ManagedInstanceGroupSpec) DeepCopy() *ManagedInstanceGroupSpec {
	if in == nil {
		return nil
	}
	out := new(ManagedInstanceGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedInstanceGroupSpecManagedInstances) DeepCopyInto(out *ManagedInstanceGroupSpecManagedInstances) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedInstanceGroupSpecManagedInstances.
func (in *ManagedInstanceGroupSpecManagedInstances) DeepCopy() *ManagedInstanceGroupSpecManagedInstances {
	if in == nil {
		return nil
	}
	out := new(ManagedInstanceGroupSpecManagedInstances)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedInstanceGroupSpecResource) DeepCopyInto(out *ManagedInstanceGroupSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ManagedInstanceCount != nil {
		in, out := &in.ManagedInstanceCount, &out.ManagedInstanceCount
		*out = new(int64)
		**out = **in
	}
	if in.ManagedInstances != nil {
		in, out := &in.ManagedInstances, &out.ManagedInstances
		*out = make([]ManagedInstanceGroupSpecManagedInstances, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsFamily != nil {
		in, out := &in.OsFamily, &out.OsFamily
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedInstanceGroupSpecResource.
func (in *ManagedInstanceGroupSpecResource) DeepCopy() *ManagedInstanceGroupSpecResource {
	if in == nil {
		return nil
	}
	out := new(ManagedInstanceGroupSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedInstanceGroupStatus) DeepCopyInto(out *ManagedInstanceGroupStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedInstanceGroupStatus.
func (in *ManagedInstanceGroupStatus) DeepCopy() *ManagedInstanceGroupStatus {
	if in == nil {
		return nil
	}
	out := new(ManagedInstanceGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedInstanceList) DeepCopyInto(out *ManagedInstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ManagedInstance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedInstanceList.
func (in *ManagedInstanceList) DeepCopy() *ManagedInstanceList {
	if in == nil {
		return nil
	}
	out := new(ManagedInstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagedInstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedInstanceManagement) DeepCopyInto(out *ManagedInstanceManagement) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedInstanceManagement.
func (in *ManagedInstanceManagement) DeepCopy() *ManagedInstanceManagement {
	if in == nil {
		return nil
	}
	out := new(ManagedInstanceManagement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagedInstanceManagement) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedInstanceManagementList) DeepCopyInto(out *ManagedInstanceManagementList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ManagedInstanceManagement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedInstanceManagementList.
func (in *ManagedInstanceManagementList) DeepCopy() *ManagedInstanceManagementList {
	if in == nil {
		return nil
	}
	out := new(ManagedInstanceManagementList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagedInstanceManagementList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedInstanceManagementSpec) DeepCopyInto(out *ManagedInstanceManagementSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ManagedInstanceManagementSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedInstanceManagementSpec.
func (in *ManagedInstanceManagementSpec) DeepCopy() *ManagedInstanceManagementSpec {
	if in == nil {
		return nil
	}
	out := new(ManagedInstanceManagementSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedInstanceManagementSpecChildSoftwareSources) DeepCopyInto(out *ManagedInstanceManagementSpecChildSoftwareSources) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedInstanceManagementSpecChildSoftwareSources.
func (in *ManagedInstanceManagementSpecChildSoftwareSources) DeepCopy() *ManagedInstanceManagementSpecChildSoftwareSources {
	if in == nil {
		return nil
	}
	out := new(ManagedInstanceManagementSpecChildSoftwareSources)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedInstanceManagementSpecManagedInstanceGroups) DeepCopyInto(out *ManagedInstanceManagementSpecManagedInstanceGroups) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedInstanceManagementSpecManagedInstanceGroups.
func (in *ManagedInstanceManagementSpecManagedInstanceGroups) DeepCopy() *ManagedInstanceManagementSpecManagedInstanceGroups {
	if in == nil {
		return nil
	}
	out := new(ManagedInstanceManagementSpecManagedInstanceGroups)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedInstanceManagementSpecParentSoftwareSource) DeepCopyInto(out *ManagedInstanceManagementSpecParentSoftwareSource) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedInstanceManagementSpecParentSoftwareSource.
func (in *ManagedInstanceManagementSpecParentSoftwareSource) DeepCopy() *ManagedInstanceManagementSpecParentSoftwareSource {
	if in == nil {
		return nil
	}
	out := new(ManagedInstanceManagementSpecParentSoftwareSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedInstanceManagementSpecResource) DeepCopyInto(out *ManagedInstanceManagementSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.ChildSoftwareSources != nil {
		in, out := &in.ChildSoftwareSources, &out.ChildSoftwareSources
		*out = make([]ManagedInstanceManagementSpecChildSoftwareSources, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.LastBoot != nil {
		in, out := &in.LastBoot, &out.LastBoot
		*out = new(string)
		**out = **in
	}
	if in.LastCheckin != nil {
		in, out := &in.LastCheckin, &out.LastCheckin
		*out = new(string)
		**out = **in
	}
	if in.ManagedInstanceGroups != nil {
		in, out := &in.ManagedInstanceGroups, &out.ManagedInstanceGroups
		*out = make([]ManagedInstanceManagementSpecManagedInstanceGroups, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManagedInstanceID != nil {
		in, out := &in.ManagedInstanceID, &out.ManagedInstanceID
		*out = new(string)
		**out = **in
	}
	if in.OsKernelVersion != nil {
		in, out := &in.OsKernelVersion, &out.OsKernelVersion
		*out = new(string)
		**out = **in
	}
	if in.OsName != nil {
		in, out := &in.OsName, &out.OsName
		*out = new(string)
		**out = **in
	}
	if in.OsVersion != nil {
		in, out := &in.OsVersion, &out.OsVersion
		*out = new(string)
		**out = **in
	}
	if in.ParentSoftwareSource != nil {
		in, out := &in.ParentSoftwareSource, &out.ParentSoftwareSource
		*out = new(ManagedInstanceManagementSpecParentSoftwareSource)
		(*in).DeepCopyInto(*out)
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.UpdatesAvailable != nil {
		in, out := &in.UpdatesAvailable, &out.UpdatesAvailable
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedInstanceManagementSpecResource.
func (in *ManagedInstanceManagementSpecResource) DeepCopy() *ManagedInstanceManagementSpecResource {
	if in == nil {
		return nil
	}
	out := new(ManagedInstanceManagementSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedInstanceManagementStatus) DeepCopyInto(out *ManagedInstanceManagementStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedInstanceManagementStatus.
func (in *ManagedInstanceManagementStatus) DeepCopy() *ManagedInstanceManagementStatus {
	if in == nil {
		return nil
	}
	out := new(ManagedInstanceManagementStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedInstanceSpec) DeepCopyInto(out *ManagedInstanceSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ManagedInstanceSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedInstanceSpec.
func (in *ManagedInstanceSpec) DeepCopy() *ManagedInstanceSpec {
	if in == nil {
		return nil
	}
	out := new(ManagedInstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedInstanceSpecAutonomous) DeepCopyInto(out *ManagedInstanceSpecAutonomous) {
	*out = *in
	if in.IsAutoUpdateEnabled != nil {
		in, out := &in.IsAutoUpdateEnabled, &out.IsAutoUpdateEnabled
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedInstanceSpecAutonomous.
func (in *ManagedInstanceSpecAutonomous) DeepCopy() *ManagedInstanceSpecAutonomous {
	if in == nil {
		return nil
	}
	out := new(ManagedInstanceSpecAutonomous)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedInstanceSpecChildSoftwareSources) DeepCopyInto(out *ManagedInstanceSpecChildSoftwareSources) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedInstanceSpecChildSoftwareSources.
func (in *ManagedInstanceSpecChildSoftwareSources) DeepCopy() *ManagedInstanceSpecChildSoftwareSources {
	if in == nil {
		return nil
	}
	out := new(ManagedInstanceSpecChildSoftwareSources)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedInstanceSpecManagedInstanceGroups) DeepCopyInto(out *ManagedInstanceSpecManagedInstanceGroups) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedInstanceSpecManagedInstanceGroups.
func (in *ManagedInstanceSpecManagedInstanceGroups) DeepCopy() *ManagedInstanceSpecManagedInstanceGroups {
	if in == nil {
		return nil
	}
	out := new(ManagedInstanceSpecManagedInstanceGroups)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedInstanceSpecParentSoftwareSource) DeepCopyInto(out *ManagedInstanceSpecParentSoftwareSource) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedInstanceSpecParentSoftwareSource.
func (in *ManagedInstanceSpecParentSoftwareSource) DeepCopy() *ManagedInstanceSpecParentSoftwareSource {
	if in == nil {
		return nil
	}
	out := new(ManagedInstanceSpecParentSoftwareSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedInstanceSpecResource) DeepCopyInto(out *ManagedInstanceSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Autonomous != nil {
		in, out := &in.Autonomous, &out.Autonomous
		*out = new(ManagedInstanceSpecAutonomous)
		(*in).DeepCopyInto(*out)
	}
	if in.BugUpdatesAvailable != nil {
		in, out := &in.BugUpdatesAvailable, &out.BugUpdatesAvailable
		*out = new(int64)
		**out = **in
	}
	if in.ChildSoftwareSources != nil {
		in, out := &in.ChildSoftwareSources, &out.ChildSoftwareSources
		*out = make([]ManagedInstanceSpecChildSoftwareSources, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EnhancementUpdatesAvailable != nil {
		in, out := &in.EnhancementUpdatesAvailable, &out.EnhancementUpdatesAvailable
		*out = new(int64)
		**out = **in
	}
	if in.IsDataCollectionAuthorized != nil {
		in, out := &in.IsDataCollectionAuthorized, &out.IsDataCollectionAuthorized
		*out = new(bool)
		**out = **in
	}
	if in.IsRebootRequired != nil {
		in, out := &in.IsRebootRequired, &out.IsRebootRequired
		*out = new(bool)
		**out = **in
	}
	if in.KspliceEffectiveKernelVersion != nil {
		in, out := &in.KspliceEffectiveKernelVersion, &out.KspliceEffectiveKernelVersion
		*out = new(string)
		**out = **in
	}
	if in.LastBoot != nil {
		in, out := &in.LastBoot, &out.LastBoot
		*out = new(string)
		**out = **in
	}
	if in.LastCheckin != nil {
		in, out := &in.LastCheckin, &out.LastCheckin
		*out = new(string)
		**out = **in
	}
	if in.ManagedInstanceGroups != nil {
		in, out := &in.ManagedInstanceGroups, &out.ManagedInstanceGroups
		*out = make([]ManagedInstanceSpecManagedInstanceGroups, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManagedInstanceID != nil {
		in, out := &in.ManagedInstanceID, &out.ManagedInstanceID
		*out = new(string)
		**out = **in
	}
	if in.NotificationTopicID != nil {
		in, out := &in.NotificationTopicID, &out.NotificationTopicID
		*out = new(string)
		**out = **in
	}
	if in.OsFamily != nil {
		in, out := &in.OsFamily, &out.OsFamily
		*out = new(string)
		**out = **in
	}
	if in.OsKernelVersion != nil {
		in, out := &in.OsKernelVersion, &out.OsKernelVersion
		*out = new(string)
		**out = **in
	}
	if in.OsName != nil {
		in, out := &in.OsName, &out.OsName
		*out = new(string)
		**out = **in
	}
	if in.OsVersion != nil {
		in, out := &in.OsVersion, &out.OsVersion
		*out = new(string)
		**out = **in
	}
	if in.OtherUpdatesAvailable != nil {
		in, out := &in.OtherUpdatesAvailable, &out.OtherUpdatesAvailable
		*out = new(int64)
		**out = **in
	}
	if in.ParentSoftwareSource != nil {
		in, out := &in.ParentSoftwareSource, &out.ParentSoftwareSource
		*out = new(ManagedInstanceSpecParentSoftwareSource)
		(*in).DeepCopyInto(*out)
	}
	if in.ScheduledJobCount != nil {
		in, out := &in.ScheduledJobCount, &out.ScheduledJobCount
		*out = new(int64)
		**out = **in
	}
	if in.SecurityUpdatesAvailable != nil {
		in, out := &in.SecurityUpdatesAvailable, &out.SecurityUpdatesAvailable
		*out = new(int64)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.UpdatesAvailable != nil {
		in, out := &in.UpdatesAvailable, &out.UpdatesAvailable
		*out = new(int64)
		**out = **in
	}
	if in.WorkRequestCount != nil {
		in, out := &in.WorkRequestCount, &out.WorkRequestCount
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedInstanceSpecResource.
func (in *ManagedInstanceSpecResource) DeepCopy() *ManagedInstanceSpecResource {
	if in == nil {
		return nil
	}
	out := new(ManagedInstanceSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedInstanceStatus) DeepCopyInto(out *ManagedInstanceStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedInstanceStatus.
func (in *ManagedInstanceStatus) DeepCopy() *ManagedInstanceStatus {
	if in == nil {
		return nil
	}
	out := new(ManagedInstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SoftwareSource) DeepCopyInto(out *SoftwareSource) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SoftwareSource.
func (in *SoftwareSource) DeepCopy() *SoftwareSource {
	if in == nil {
		return nil
	}
	out := new(SoftwareSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SoftwareSource) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SoftwareSourceList) DeepCopyInto(out *SoftwareSourceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SoftwareSource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SoftwareSourceList.
func (in *SoftwareSourceList) DeepCopy() *SoftwareSourceList {
	if in == nil {
		return nil
	}
	out := new(SoftwareSourceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SoftwareSourceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SoftwareSourceSpec) DeepCopyInto(out *SoftwareSourceSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(SoftwareSourceSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SoftwareSourceSpec.
func (in *SoftwareSourceSpec) DeepCopy() *SoftwareSourceSpec {
	if in == nil {
		return nil
	}
	out := new(SoftwareSourceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SoftwareSourceSpecAssociatedManagedInstances) DeepCopyInto(out *SoftwareSourceSpecAssociatedManagedInstances) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SoftwareSourceSpecAssociatedManagedInstances.
func (in *SoftwareSourceSpecAssociatedManagedInstances) DeepCopy() *SoftwareSourceSpecAssociatedManagedInstances {
	if in == nil {
		return nil
	}
	out := new(SoftwareSourceSpecAssociatedManagedInstances)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SoftwareSourceSpecResource) DeepCopyInto(out *SoftwareSourceSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.ArchType != nil {
		in, out := &in.ArchType, &out.ArchType
		*out = new(string)
		**out = **in
	}
	if in.AssociatedManagedInstances != nil {
		in, out := &in.AssociatedManagedInstances, &out.AssociatedManagedInstances
		*out = make([]SoftwareSourceSpecAssociatedManagedInstances, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ChecksumType != nil {
		in, out := &in.ChecksumType, &out.ChecksumType
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.GpgKeyFingerprint != nil {
		in, out := &in.GpgKeyFingerprint, &out.GpgKeyFingerprint
		*out = new(string)
		**out = **in
	}
	if in.GpgKeyID != nil {
		in, out := &in.GpgKeyID, &out.GpgKeyID
		*out = new(string)
		**out = **in
	}
	if in.GpgKeyURL != nil {
		in, out := &in.GpgKeyURL, &out.GpgKeyURL
		*out = new(string)
		**out = **in
	}
	if in.MaintainerEmail != nil {
		in, out := &in.MaintainerEmail, &out.MaintainerEmail
		*out = new(string)
		**out = **in
	}
	if in.MaintainerName != nil {
		in, out := &in.MaintainerName, &out.MaintainerName
		*out = new(string)
		**out = **in
	}
	if in.MaintainerPhone != nil {
		in, out := &in.MaintainerPhone, &out.MaintainerPhone
		*out = new(string)
		**out = **in
	}
	if in.Packages != nil {
		in, out := &in.Packages, &out.Packages
		*out = new(int64)
		**out = **in
	}
	if in.ParentID != nil {
		in, out := &in.ParentID, &out.ParentID
		*out = new(string)
		**out = **in
	}
	if in.ParentName != nil {
		in, out := &in.ParentName, &out.ParentName
		*out = new(string)
		**out = **in
	}
	if in.RepoType != nil {
		in, out := &in.RepoType, &out.RepoType
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Url != nil {
		in, out := &in.Url, &out.Url
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SoftwareSourceSpecResource.
func (in *SoftwareSourceSpecResource) DeepCopy() *SoftwareSourceSpecResource {
	if in == nil {
		return nil
	}
	out := new(SoftwareSourceSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SoftwareSourceStatus) DeepCopyInto(out *SoftwareSourceStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SoftwareSourceStatus.
func (in *SoftwareSourceStatus) DeepCopy() *SoftwareSourceStatus {
	if in == nil {
		return nil
	}
	out := new(SoftwareSourceStatus)
	in.DeepCopyInto(out)
	return out
}
