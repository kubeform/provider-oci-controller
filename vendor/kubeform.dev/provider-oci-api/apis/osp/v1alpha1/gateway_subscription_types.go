/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type GatewaySubscription struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              GatewaySubscriptionSpec   `json:"spec,omitempty"`
	Status            GatewaySubscriptionStatus `json:"status,omitempty"`
}

type GatewaySubscriptionSpecBillingAddress struct {
	// +optional
	AddressKey *string `json:"addressKey,omitempty" tf:"address_key"`
	// +optional
	City *string `json:"city,omitempty" tf:"city"`
	// +optional
	CompanyName *string `json:"companyName,omitempty" tf:"company_name"`
	// +optional
	Country *string `json:"country,omitempty" tf:"country"`
	// +optional
	EmailAddress *string `json:"emailAddress,omitempty" tf:"email_address"`
	// +optional
	FirstName *string `json:"firstName,omitempty" tf:"first_name"`
	// +optional
	LastName *string `json:"lastName,omitempty" tf:"last_name"`
	// +optional
	Line1 *string `json:"line1,omitempty" tf:"line1"`
	// +optional
	Line2 *string `json:"line2,omitempty" tf:"line2"`
	// +optional
	PostalCode *string `json:"postalCode,omitempty" tf:"postal_code"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
}

type GatewaySubscriptionSpecPaymentGatewayMerchantDefinedData struct {
	// +optional
	CloudAccountName *string `json:"cloudAccountName,omitempty" tf:"cloud_account_name"`
	// +optional
	PromoType *string `json:"promoType,omitempty" tf:"promo_type"`
}

type GatewaySubscriptionSpecPaymentGateway struct {
	// +optional
	MerchantDefinedData *GatewaySubscriptionSpecPaymentGatewayMerchantDefinedData `json:"merchantDefinedData,omitempty" tf:"merchant_defined_data"`
}

type GatewaySubscriptionSpecPaymentOptions struct {
	// +optional
	PaymentMethod *string `json:"paymentMethod,omitempty" tf:"payment_method"`
	// +optional
	WalletInstrumentID *string `json:"walletInstrumentID,omitempty" tf:"wallet_instrument_id"`
	// +optional
	WalletTransactionID *string `json:"walletTransactionID,omitempty" tf:"wallet_transaction_id"`
}

type GatewaySubscriptionSpecSubscriptionBillingAddress struct {
	// +optional
	AddressKey *string `json:"addressKey,omitempty" tf:"address_key"`
	// +optional
	City *string `json:"city,omitempty" tf:"city"`
	// +optional
	CompanyName *string `json:"companyName,omitempty" tf:"company_name"`
	// +optional
	Country *string `json:"country,omitempty" tf:"country"`
	// +optional
	EmailAddress *string `json:"emailAddress,omitempty" tf:"email_address"`
	// +optional
	FirstName *string `json:"firstName,omitempty" tf:"first_name"`
	// +optional
	LastName *string `json:"lastName,omitempty" tf:"last_name"`
	// +optional
	Line1 *string `json:"line1,omitempty" tf:"line1"`
	// +optional
	Line2 *string `json:"line2,omitempty" tf:"line2"`
	// +optional
	PostalCode *string `json:"postalCode,omitempty" tf:"postal_code"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
}

type GatewaySubscriptionSpecSubscriptionPaymentGatewayMerchantDefinedData struct {
	// +optional
	CloudAccountName *string `json:"cloudAccountName,omitempty" tf:"cloud_account_name"`
	// +optional
	PromoType *string `json:"promoType,omitempty" tf:"promo_type"`
}

type GatewaySubscriptionSpecSubscriptionPaymentGateway struct {
	// +optional
	MerchantDefinedData *GatewaySubscriptionSpecSubscriptionPaymentGatewayMerchantDefinedData `json:"merchantDefinedData,omitempty" tf:"merchant_defined_data"`
}

type GatewaySubscriptionSpecSubscriptionPaymentOptions struct {
	PaymentMethod *string `json:"paymentMethod" tf:"payment_method"`
	// +optional
	WalletInstrumentID *string `json:"walletInstrumentID,omitempty" tf:"wallet_instrument_id"`
	// +optional
	WalletTransactionID *string `json:"walletTransactionID,omitempty" tf:"wallet_transaction_id"`
}

type GatewaySubscriptionSpecSubscriptionTaxInfo struct {
	// +optional
	NoTaxReasonCode *string `json:"noTaxReasonCode,omitempty" tf:"no_tax_reason_code"`
	// +optional
	NoTaxReasonCodeDetails *string `json:"noTaxReasonCodeDetails,omitempty" tf:"no_tax_reason_code_details"`
	// +optional
	TaxCnpj *string `json:"taxCnpj,omitempty" tf:"tax_cnpj"`
	// +optional
	TaxPayerID *string `json:"taxPayerID,omitempty" tf:"tax_payer_id"`
	// +optional
	TaxRegNumber *string `json:"taxRegNumber,omitempty" tf:"tax_reg_number"`
}

type GatewaySubscriptionSpecSubscription struct {
	// +optional
	BillToCustAccountID *string `json:"billToCustAccountID,omitempty" tf:"bill_to_cust_account_id"`
	// +optional
	BillingAddress *GatewaySubscriptionSpecSubscriptionBillingAddress `json:"billingAddress,omitempty" tf:"billing_address"`
	// +optional
	CurrencyCode *string `json:"currencyCode,omitempty" tf:"currency_code"`
	// +optional
	GsiOrgCode *string `json:"gsiOrgCode,omitempty" tf:"gsi_org_code"`
	// +optional
	ID *string `json:"ID,omitempty" tf:"id"`
	// +optional
	IsIntentToPay *bool `json:"isIntentToPay,omitempty" tf:"is_intent_to_pay"`
	// +optional
	LanguageCode *string `json:"languageCode,omitempty" tf:"language_code"`
	// +optional
	OrganizationID *string `json:"organizationID,omitempty" tf:"organization_id"`
	// +optional
	PaymentGateway *GatewaySubscriptionSpecSubscriptionPaymentGateway `json:"paymentGateway,omitempty" tf:"payment_gateway"`
	// +optional
	PaymentOptions []GatewaySubscriptionSpecSubscriptionPaymentOptions `json:"paymentOptions,omitempty" tf:"payment_options"`
	// +optional
	PlanType *string `json:"planType,omitempty" tf:"plan_type"`
	// +optional
	ShipToCustAcctRoleID *string `json:"shipToCustAcctRoleID,omitempty" tf:"ship_to_cust_acct_role_id"`
	// +optional
	ShipToCustAcctSiteID   *string `json:"shipToCustAcctSiteID,omitempty" tf:"ship_to_cust_acct_site_id"`
	SubscriptionPlanNumber *string `json:"subscriptionPlanNumber" tf:"subscription_plan_number"`
	// +optional
	TaxInfo *GatewaySubscriptionSpecSubscriptionTaxInfo `json:"taxInfo,omitempty" tf:"tax_info"`
	// +optional
	TimePlanUpgrade *string `json:"timePlanUpgrade,omitempty" tf:"time_plan_upgrade"`
	// +optional
	TimeStart *string `json:"timeStart,omitempty" tf:"time_start"`
	// +optional
	UpgradeState *string `json:"upgradeState,omitempty" tf:"upgrade_state"`
	// +optional
	UpgradeStateDetails *string `json:"upgradeStateDetails,omitempty" tf:"upgrade_state_details"`
}

type GatewaySubscriptionSpecTaxInfo struct {
	// +optional
	NoTaxReasonCode *string `json:"noTaxReasonCode,omitempty" tf:"no_tax_reason_code"`
	// +optional
	NoTaxReasonCodeDetails *string `json:"noTaxReasonCodeDetails,omitempty" tf:"no_tax_reason_code_details"`
	// +optional
	TaxCnpj *string `json:"taxCnpj,omitempty" tf:"tax_cnpj"`
	// +optional
	TaxPayerID *string `json:"taxPayerID,omitempty" tf:"tax_payer_id"`
	// +optional
	TaxRegNumber *string `json:"taxRegNumber,omitempty" tf:"tax_reg_number"`
}

type GatewaySubscriptionSpec struct {
	State *GatewaySubscriptionSpecResource `json:"state,omitempty" tf:"-"`

	Resource GatewaySubscriptionSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type GatewaySubscriptionSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	BillToCustAccountID *string `json:"billToCustAccountID,omitempty" tf:"bill_to_cust_account_id"`
	// +optional
	BillingAddress *GatewaySubscriptionSpecBillingAddress `json:"billingAddress,omitempty" tf:"billing_address"`
	CompartmentID  *string                                `json:"compartmentID" tf:"compartment_id"`
	// +optional
	CurrencyCode *string `json:"currencyCode,omitempty" tf:"currency_code"`
	Email        *string `json:"email" tf:"email"`
	// +optional
	GsiOrgCode *string `json:"gsiOrgCode,omitempty" tf:"gsi_org_code"`
	// +optional
	IsIntentToPay *bool `json:"isIntentToPay,omitempty" tf:"is_intent_to_pay"`
	// +optional
	LanguageCode *string `json:"languageCode,omitempty" tf:"language_code"`
	// +optional
	OrganizationID *string `json:"organizationID,omitempty" tf:"organization_id"`
	OspHomeRegion  *string `json:"ospHomeRegion" tf:"osp_home_region"`
	// +optional
	PaymentGateway *GatewaySubscriptionSpecPaymentGateway `json:"paymentGateway,omitempty" tf:"payment_gateway"`
	// +optional
	PaymentOptions []GatewaySubscriptionSpecPaymentOptions `json:"paymentOptions,omitempty" tf:"payment_options"`
	// +optional
	PlanType *string `json:"planType,omitempty" tf:"plan_type"`
	// +optional
	ShipToCustAcctRoleID *string `json:"shipToCustAcctRoleID,omitempty" tf:"ship_to_cust_acct_role_id"`
	// +optional
	ShipToCustAcctSiteID *string                              `json:"shipToCustAcctSiteID,omitempty" tf:"ship_to_cust_acct_site_id"`
	Subscription         *GatewaySubscriptionSpecSubscription `json:"subscription" tf:"subscription"`
	SubscriptionID       *string                              `json:"subscriptionID" tf:"subscription_id"`
	// +optional
	SubscriptionPlanNumber *string `json:"subscriptionPlanNumber,omitempty" tf:"subscription_plan_number"`
	// +optional
	TaxInfo *GatewaySubscriptionSpecTaxInfo `json:"taxInfo,omitempty" tf:"tax_info"`
	// +optional
	TimePlanUpgrade *string `json:"timePlanUpgrade,omitempty" tf:"time_plan_upgrade"`
	// +optional
	TimeStart *string `json:"timeStart,omitempty" tf:"time_start"`
	// +optional
	UpgradeState *string `json:"upgradeState,omitempty" tf:"upgrade_state"`
	// +optional
	UpgradeStateDetails *string `json:"upgradeStateDetails,omitempty" tf:"upgrade_state_details"`
}

type GatewaySubscriptionStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// GatewaySubscriptionList is a list of GatewaySubscriptions
type GatewaySubscriptionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of GatewaySubscription CRD objects
	Items []GatewaySubscription `json:"items,omitempty"`
}
