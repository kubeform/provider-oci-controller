/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type CatalogPrivateApplication struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              CatalogPrivateApplicationSpec   `json:"spec,omitempty"`
	Status            CatalogPrivateApplicationStatus `json:"status,omitempty"`
}

type CatalogPrivateApplicationSpecLogo struct {
	// +optional
	ContentURL *string `json:"contentURL,omitempty" tf:"content_url"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	MimeType *string `json:"mimeType,omitempty" tf:"mime_type"`
}

type CatalogPrivateApplicationSpecPackageDetails struct {
	PackageType *string `json:"packageType" tf:"package_type"`
	Version     *string `json:"version" tf:"version"`
	// +optional
	ZipFileBase64encoded *string `json:"zipFileBase64encoded,omitempty" tf:"zip_file_base64encoded"`
}

type CatalogPrivateApplicationSpec struct {
	State *CatalogPrivateApplicationSpecResource `json:"state,omitempty" tf:"-"`

	Resource CatalogPrivateApplicationSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type CatalogPrivateApplicationSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	CompartmentID *string `json:"compartmentID" tf:"compartment_id"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	DisplayName *string           `json:"displayName" tf:"display_name"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	Logo *CatalogPrivateApplicationSpecLogo `json:"logo,omitempty" tf:"logo"`
	// +optional
	LogoFileBase64encoded *string `json:"logoFileBase64encoded,omitempty" tf:"logo_file_base64encoded"`
	// +optional
	LongDescription *string                                      `json:"longDescription,omitempty" tf:"long_description"`
	PackageDetails  *CatalogPrivateApplicationSpecPackageDetails `json:"packageDetails" tf:"package_details"`
	// +optional
	PackageType      *string `json:"packageType,omitempty" tf:"package_type"`
	ShortDescription *string `json:"shortDescription" tf:"short_description"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	TimeUpdated *string `json:"timeUpdated,omitempty" tf:"time_updated"`
}

type CatalogPrivateApplicationStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// CatalogPrivateApplicationList is a list of CatalogPrivateApplications
type CatalogPrivateApplicationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of CatalogPrivateApplication CRD objects
	Items []CatalogPrivateApplication `json:"items,omitempty"`
}
