/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type BuilderVbInstance struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              BuilderVbInstanceSpec   `json:"spec,omitempty"`
	Status            BuilderVbInstanceStatus `json:"status,omitempty"`
}

type BuilderVbInstanceSpecAlternateCustomEndpoints struct {
	// +optional
	CertificateSecretID *string `json:"certificateSecretID,omitempty" tf:"certificate_secret_id"`
	// +optional
	CertificateSecretVersion *int64  `json:"certificateSecretVersion,omitempty" tf:"certificate_secret_version"`
	Hostname                 *string `json:"hostname" tf:"hostname"`
}

type BuilderVbInstanceSpecCustomEndpoint struct {
	// +optional
	CertificateSecretID *string `json:"certificateSecretID,omitempty" tf:"certificate_secret_id"`
	// +optional
	CertificateSecretVersion *int64  `json:"certificateSecretVersion,omitempty" tf:"certificate_secret_version"`
	Hostname                 *string `json:"hostname" tf:"hostname"`
}

type BuilderVbInstanceSpec struct {
	State *BuilderVbInstanceSpecResource `json:"state,omitempty" tf:"-"`

	Resource BuilderVbInstanceSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type BuilderVbInstanceSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	AlternateCustomEndpoints []BuilderVbInstanceSpecAlternateCustomEndpoints `json:"alternateCustomEndpoints,omitempty" tf:"alternate_custom_endpoints"`
	CompartmentID            *string                                         `json:"compartmentID" tf:"compartment_id"`
	// +optional
	ConsumptionModel *string `json:"consumptionModel,omitempty" tf:"consumption_model"`
	// +optional
	CustomEndpoint *BuilderVbInstanceSpecCustomEndpoint `json:"customEndpoint,omitempty" tf:"custom_endpoint"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	DisplayName *string           `json:"displayName" tf:"display_name"`
	// +optional
	FreeformTags map[string]string `json:"freeformTags,omitempty" tf:"freeform_tags"`
	// +optional
	IdcsOpenID *string `json:"-" sensitive:"true" tf:"idcs_open_id"`
	// +optional
	InstanceURL *string `json:"instanceURL,omitempty" tf:"instance_url"`
	// +optional
	IsVisualBuilderEnabled *bool  `json:"isVisualBuilderEnabled,omitempty" tf:"is_visual_builder_enabled"`
	NodeCount              *int64 `json:"nodeCount" tf:"node_count"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	StateMessage *string `json:"stateMessage,omitempty" tf:"state_message"`
	// +optional
	SystemTags map[string]string `json:"systemTags,omitempty" tf:"system_tags"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	TimeUpdated *string `json:"timeUpdated,omitempty" tf:"time_updated"`
}

type BuilderVbInstanceStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// BuilderVbInstanceList is a list of BuilderVbInstances
type BuilderVbInstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of BuilderVbInstance CRD objects
	Items []BuilderVbInstance `json:"items,omitempty"`
}
