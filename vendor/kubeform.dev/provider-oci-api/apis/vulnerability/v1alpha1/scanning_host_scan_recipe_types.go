/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ScanningHostScanRecipe struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ScanningHostScanRecipeSpec   `json:"spec,omitempty"`
	Status            ScanningHostScanRecipeStatus `json:"status,omitempty"`
}

type ScanningHostScanRecipeSpecAgentSettingsAgentConfigurationCisBenchmarkSettings struct {
	// +optional
	ScanLevel *string `json:"scanLevel,omitempty" tf:"scan_level"`
}

type ScanningHostScanRecipeSpecAgentSettingsAgentConfigurationEndpointProtectionSettings struct {
	// +optional
	ScanLevel *string `json:"scanLevel,omitempty" tf:"scan_level"`
}

type ScanningHostScanRecipeSpecAgentSettingsAgentConfiguration struct {
	// +optional
	CisBenchmarkSettings *ScanningHostScanRecipeSpecAgentSettingsAgentConfigurationCisBenchmarkSettings `json:"cisBenchmarkSettings,omitempty" tf:"cis_benchmark_settings"`
	// +optional
	EndpointProtectionSettings *ScanningHostScanRecipeSpecAgentSettingsAgentConfigurationEndpointProtectionSettings `json:"endpointProtectionSettings,omitempty" tf:"endpoint_protection_settings"`
	Vendor                     *string                                                                              `json:"vendor" tf:"vendor"`
}

type ScanningHostScanRecipeSpecAgentSettings struct {
	// +optional
	AgentConfiguration *ScanningHostScanRecipeSpecAgentSettingsAgentConfiguration `json:"agentConfiguration,omitempty" tf:"agent_configuration"`
	ScanLevel          *string                                                    `json:"scanLevel" tf:"scan_level"`
}

type ScanningHostScanRecipeSpecPortSettings struct {
	ScanLevel *string `json:"scanLevel" tf:"scan_level"`
}

type ScanningHostScanRecipeSpecSchedule struct {
	// +optional
	DayOfWeek *string `json:"dayOfWeek,omitempty" tf:"day_of_week"`
	Type      *string `json:"type" tf:"type"`
}

type ScanningHostScanRecipeSpec struct {
	State *ScanningHostScanRecipeSpecResource `json:"state,omitempty" tf:"-"`

	Resource ScanningHostScanRecipeSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`
}

type ScanningHostScanRecipeSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	AgentSettings *ScanningHostScanRecipeSpecAgentSettings `json:"agentSettings" tf:"agent_settings"`
	CompartmentID *string                                  `json:"compartmentID" tf:"compartment_id"`
	// +optional
	DefinedTags map[string]string `json:"definedTags,omitempty" tf:"defined_tags"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	FreeformTags map[string]string                       `json:"freeformTags,omitempty" tf:"freeform_tags"`
	PortSettings *ScanningHostScanRecipeSpecPortSettings `json:"portSettings" tf:"port_settings"`
	Schedule     *ScanningHostScanRecipeSpecSchedule     `json:"schedule" tf:"schedule"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	SystemTags map[string]string `json:"systemTags,omitempty" tf:"system_tags"`
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// +optional
	TimeUpdated *string `json:"timeUpdated,omitempty" tf:"time_updated"`
}

type ScanningHostScanRecipeStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ScanningHostScanRecipeList is a list of ScanningHostScanRecipes
type ScanningHostScanRecipeList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ScanningHostScanRecipe CRD objects
	Items []ScanningHostScanRecipe `json:"items,omitempty"`
}
